{"mappings":"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","sources":["<anon>","app.js"],"sourcesContent":["const $6b17f08f738443dc$var$NEWS_URL = 'https://api.hnpwa.com/v0/news/{page}.json';\nconst $6b17f08f738443dc$var$CONTENT_URL = 'https://hacker-news.firebaseio.com/v0/item/{id}.json';\nconst $6b17f08f738443dc$var$initialPage = 1;\nconst $6b17f08f738443dc$var$maxPage = 10;\nconst $6b17f08f738443dc$var$OPENAI_API_KEY = 'your-api-key';\nasync function $6b17f08f738443dc$export$6be879aaed7294f2(rootElementParam, currentPage) {\n    // Use passed element or try to find it in DOM\n    const rootElement = rootElementParam || document.getElementById('root');\n    if (!rootElement) throw new Error('Root element not found');\n    const ul = document.createElement('ul');\n    window.addEventListener('hashchange', async ()=>{\n        const id = location.hash.substring(1);\n        const summary = document.createElement('div');\n        try {\n            // Show loading state\n            rootElement.innerHTML = 'Loading...';\n            // Fetch the item details\n            const response = await fetch($6b17f08f738443dc$var$CONTENT_URL.replace('{id}', id));\n            const content = await response.json();\n            // Create a back button\n            const backButton = document.createElement('button');\n            backButton.innerHTML = \"\\u2190 Back to News\";\n            backButton.addEventListener('click', ()=>{\n                location.hash = '';\n                $6b17f08f738443dc$export$6be879aaed7294f2(rootElement, currentPage);\n            });\n            // Prepare content for summarization\n            const textToSummarize = `\n        Title: ${content.title}\n        URL Content: ${content.url ? content.url : 'No URL'}\n        Comments: ${content.comments.map((c)=>c.content).join('\\n')}\n      `;\n            // Call OpenAI API for summarization\n            const summaryResponse = await fetch('https://api.openai.com/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${$6b17f08f738443dc$var$OPENAI_API_KEY}`\n                },\n                body: JSON.stringify({\n                    model: \"gpt-4o\",\n                    messages: [\n                        {\n                            role: \"user\",\n                            content: `Please summarize this Hacker News post and its comments concisely:\\n${textToSummarize}`\n                        }\n                    ]\n                })\n            });\n            const summaryResult = await summaryResponse.json();\n            const summarizedContent = summaryResult.choices[0].message.content;\n            // Display the summary\n            summary.innerHTML = `\n        <h2>${content.title}</h2>\n        <p><strong>Summary:</strong></p>\n        <p>${summarizedContent}</p>\n        <p><strong>Original URL:</strong> <a href=\"${content.url}\" target=\"_blank\">${content.url}</a></p>\n        <p><strong>Comments:</strong> ${content.comments_count}</p>\n      `;\n            rootElement.innerHTML = '';\n            rootElement.appendChild(backButton);\n            rootElement.appendChild(summary);\n        } catch (error) {\n            console.error('Error:', error);\n            rootElement.innerHTML = 'Error loading content';\n        }\n    });\n    try {\n        // Show loading state\n        rootElement.innerHTML = 'Loading...';\n        const response = await fetch($6b17f08f738443dc$var$NEWS_URL.replace('{page}', currentPage));\n        const newsFeed = await response.json();\n        newsFeed.forEach((item)=>{\n            const li = document.createElement('li');\n            const a = document.createElement('a');\n            a.href = `#${item.id}`;\n            a.innerHTML = `${item.title} (${item.comments_count})`;\n            li.appendChild(a);\n            ul.appendChild(li);\n        });\n        // Clear loading state and show content\n        rootElement.innerHTML = '';\n        rootElement.appendChild(ul);\n    } catch (error) {\n        rootElement.innerHTML = 'Error loading news feed';\n        console.error('Error:', error);\n    }\n    if (currentPage > $6b17f08f738443dc$var$initialPage) {\n        const prevPageButton = document.createElement('button');\n        prevPageButton.innerHTML = 'Previous Page';\n        prevPageButton.addEventListener('click', ()=>{\n            currentPage--;\n            $6b17f08f738443dc$export$6be879aaed7294f2(rootElement, currentPage);\n        });\n        rootElement.appendChild(prevPageButton);\n    }\n    if (currentPage < $6b17f08f738443dc$var$maxPage) {\n        const nextPageButton = document.createElement('button');\n        nextPageButton.innerHTML = 'Next Page';\n        nextPageButton.addEventListener('click', ()=>{\n            currentPage++;\n            $6b17f08f738443dc$export$6be879aaed7294f2(rootElement, currentPage);\n        });\n        rootElement.appendChild(nextPageButton);\n    }\n}\n// Only call loadNews if we're in a browser environment\nif (typeof window !== 'undefined') {\n    const rootElement = document.getElementById('root');\n    if (rootElement) $6b17f08f738443dc$export$6be879aaed7294f2(rootElement, 1);\n}\n\n\n//# sourceMappingURL=index.f607cb53.js.map\n","const NEWS_URL = 'https://api.hnpwa.com/v0/news/{page}.json';\nconst CONTENT_URL = 'https://hacker-news.firebaseio.com/v0/item/{id}.json';\nconst initialPage = 1;\nconst maxPage = 10;\nconst OPENAI_API_KEY = 'your-api-key';\n\nexport async function loadNews(rootElementParam, currentPage) {\n  // Use passed element or try to find it in DOM\n  const rootElement = rootElementParam || document.getElementById('root');\n\n  if (!rootElement) {\n    throw new Error('Root element not found');\n  }\n\n  const ul = document.createElement('ul');\n\n  window.addEventListener('hashchange', async () => {\n    const id = location.hash.substring(1);\n    const summary = document.createElement('div');\n    \n    try {\n      // Show loading state\n      rootElement.innerHTML = 'Loading...';\n      \n      // Fetch the item details\n      const response = await fetch(CONTENT_URL.replace('{id}', id));\n      const content = await response.json();\n      \n      // Create a back button\n      const backButton = document.createElement('button');\n      backButton.innerHTML = '← Back to News';\n      backButton.addEventListener('click', () => {\n        location.hash = '';\n        loadNews(rootElement, currentPage);\n      });\n      \n      // Prepare content for summarization\n      const textToSummarize = `\n        Title: ${content.title}\n        URL Content: ${content.url ? content.url : 'No URL'}\n        Comments: ${content.comments.map(c => c.content).join('\\n')}\n      `;\n      \n      // Call OpenAI API for summarization\n      const summaryResponse = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"user\",\n            content: `Please summarize this Hacker News post and its comments concisely:\\n${textToSummarize}`\n          }]\n        })\n      });\n      \n      const summaryResult = await summaryResponse.json();\n      const summarizedContent = summaryResult.choices[0].message.content;\n      \n      // Display the summary\n      summary.innerHTML = `\n        <h2>${content.title}</h2>\n        <p><strong>Summary:</strong></p>\n        <p>${summarizedContent}</p>\n        <p><strong>Original URL:</strong> <a href=\"${content.url}\" target=\"_blank\">${content.url}</a></p>\n        <p><strong>Comments:</strong> ${content.comments_count}</p>\n      `;\n      \n      rootElement.innerHTML = '';\n      rootElement.appendChild(backButton);\n      rootElement.appendChild(summary);\n      \n    } catch (error) {\n      console.error('Error:', error);\n      rootElement.innerHTML = 'Error loading content';\n    }\n  });\n  \n  try {\n    // Show loading state\n    rootElement.innerHTML = 'Loading...';\n    \n    const response = await fetch(NEWS_URL.replace('{page}', currentPage));\n    const newsFeed = await response.json();\n    \n    newsFeed.forEach(item => {\n      const li = document.createElement('li');\n      const a = document.createElement('a');\n      a.href = `#${item.id}`;\n      a.innerHTML = `${item.title} (${item.comments_count})`;\n      li.appendChild(a);\n      ul.appendChild(li);\n    });\n    \n    // Clear loading state and show content\n    rootElement.innerHTML = '';\n    rootElement.appendChild(ul);\n    \n  } catch (error) {\n    rootElement.innerHTML = 'Error loading news feed';\n    console.error('Error:', error);\n  }\n\n  if (currentPage > initialPage) {\n    const prevPageButton = document.createElement('button');\n    prevPageButton.innerHTML = 'Previous Page';\n    prevPageButton.addEventListener('click', () => {\n      currentPage--;\n      loadNews(rootElement, currentPage);\n    });\n    rootElement.appendChild(prevPageButton);\n  }\n\n  if (currentPage < maxPage) {\n    const nextPageButton = document.createElement('button');\n    nextPageButton.innerHTML = 'Next Page';\n    nextPageButton.addEventListener('click', () => {\n      currentPage++;\n      loadNews(rootElement, currentPage);\n    });\n    rootElement.appendChild(nextPageButton);\n  }\n}\n\n// Only call loadNews if we're in a browser environment\nif (typeof window !== 'undefined') {\n  const rootElement = document.getElementById('root');\n  if (rootElement) {\n    loadNews(rootElement, 1);\n  }\n}"],"names":["$6b17f08f738443dc$export$6be879aaed7294f2","rootElementParam","currentPage","rootElement","document","getElementById","Error","ul","createElement","window","addEventListener","id","location","hash","substring","summary","innerHTML","response","fetch","$6b17f08f738443dc$var$CONTENT_URL","replace","content","json","backButton","textToSummarize","title","url","comments","map","c","join","summaryResponse","method","headers","body","JSON","stringify","model","messages","role","summarizedContent","summaryResult","choices","message","comments_count","appendChild","error","console","$6b17f08f738443dc$var$NEWS_URL","newsFeed","forEach","item","li","a","href","prevPageButton","nextPageButton","NEWS_URL","CONTENT_URL","initialPage","maxPage","OPENAI_API_KEY","loadNews"],"version":3,"file":"index.f607cb53.js.map"}