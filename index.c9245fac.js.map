{"mappings":"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","sources":["<anon>","app.js"],"sourcesContent":["const $6b17f08f738443dc$var$NEWS_URL = 'https://api.hnpwa.com/v0/news/{page}.json';\nconst $6b17f08f738443dc$var$CONTENT_URL = 'https://api.hnpwa.com/v0/item/{id}.json';\nconst $6b17f08f738443dc$var$initialPage = 1;\nconst $6b17f08f738443dc$var$maxPage = 10;\nlet $6b17f08f738443dc$var$currentPage = $6b17f08f738443dc$var$initialPage;\nasync function $6b17f08f738443dc$export$4bb3ff9d4e0b170e(rootElementParam) {\n    // Use passed element or try to find it in DOM\n    const rootElement = rootElementParam || document.getElementById('root');\n    if (!rootElement) throw new Error('Root element not found');\n    const currentPage = location.hash.substring();\n    const ul = document.createElement('ul');\n    try {\n        // Show loading state\n        rootElement.innerHTML = 'Loading...';\n        const response = await fetch($6b17f08f738443dc$var$NEWS_URL.replace('{page}', currentPage));\n        const newsFeed = await response.json();\n        newsFeed.forEach((item)=>{\n            const div = document.createElement('div');\n            div.innerHTML = `\n        <li>\n          <a href=\"#item=${item.id}\">\n            ${item.title} (${item.comments_count})\n          </a>\n        </li>\n      `;\n            ul.appendChild(div.firstElementChild);\n        });\n        // Clear loading state and show content\n        rootElement.innerHTML = '';\n        rootElement.appendChild(ul);\n    } catch (error) {\n        rootElement.innerHTML = 'Error loading news feed';\n        console.error('Error:', error);\n    }\n    if (currentPage > $6b17f08f738443dc$var$initialPage) {\n        const prevPageButton = document.createElement('button');\n        prevPageButton.innerHTML = 'Previous Page';\n        prevPageButton.addEventListener('click', ()=>{\n            $6b17f08f738443dc$export$4bb3ff9d4e0b170e(rootElement, currentPage - 1);\n        });\n        rootElement.appendChild(prevPageButton);\n    }\n    if (currentPage < $6b17f08f738443dc$var$maxPage) {\n        const nextPageButton = document.createElement('button');\n        nextPageButton.innerHTML = 'Next Page';\n        nextPageButton.addEventListener('click', ()=>{\n            $6b17f08f738443dc$export$4bb3ff9d4e0b170e(rootElement, currentPage + 1);\n        });\n        rootElement.appendChild(nextPageButton);\n    }\n}\nasync function $6b17f08f738443dc$var$loadNewsMaterial(rootElementParam, currentPage, newsId) {\n    // Use passed element or try to find it in DOM\n    const rootElement = rootElementParam || document.getElementById('root');\n    if (!rootElement) throw new Error('Root element not found');\n    const summary = document.createElement('div');\n    try {\n        // Show loading state\n        rootElement.innerHTML = 'Loading...';\n        // Fetch the item details\n        const response = await fetch($6b17f08f738443dc$var$CONTENT_URL.replace('{id}', newsId));\n        const content = await response.json();\n        // Create a back button\n        const backButton = document.createElement('button');\n        backButton.innerHTML = \"\\u2190 Back to News\";\n        backButton.addEventListener('click', ()=>{\n            location.hash = '';\n        });\n        // Prepare content for summarization\n        const textToSummarize = `\n      Title: ${content.title}\n      URL Content: ${content.url ? content.url : 'No URL'}\n      Comments: ${content.comments ? content.comments.map((c)=>c.content).join('\\n') : 'No comments'}\n    `;\n        // Use transformers.js for summarization\n        console.log(textToSummarize);\n        const result = await summarizeText(textToSummarize);\n        const summarizedContent = result[0].summary_text;\n        // Display the summary\n        summary.innerHTML = `\n      <h2>${content.title}</h2>\n      <p><strong>Summary:</strong></p>\n      <p>${summarizedContent}</p>\n      <p><strong>Original URL:</strong> <a href=\"${content.url}\" target=\"_blank\">${content.url}</a></p>\n      <p><strong>Comments:</strong> ${content.comments_count || 0}</p>\n    `;\n        rootElement.innerHTML = '';\n        rootElement.appendChild(backButton);\n        rootElement.appendChild(summary);\n    } catch (error) {\n        console.error('Error:', error);\n        rootElement.innerHTML = 'Error loading content';\n    }\n}\nfunction $6b17f08f738443dc$var$routePage(rootElementParam) {\n    // Use passed element or try to find it in DOM\n    const rootElement = rootElementParam || document.getElementById('root');\n    if (!rootElement) throw new Error('Root element not found');\n    $6b17f08f738443dc$var$currentPage = $6b17f08f738443dc$var$initialPage;\n    if (location.hash === '') $6b17f08f738443dc$export$4bb3ff9d4e0b170e(rootElementParam, $6b17f08f738443dc$var$currentPage);\n    else {\n        const id = location.hash.substring(1);\n        $6b17f08f738443dc$var$loadNewsMaterial(rootElementParam, $6b17f08f738443dc$var$currentPage, id);\n    }\n}\n// Only call loadNews if we're in a browser environment\nif (typeof window !== 'undefined') {\n    const rootElement = document.getElementById('root');\n    if (rootElement) window.addEventListener('hashchange', $6b17f08f738443dc$var$routePage);\n}\n\n\n//# sourceMappingURL=index.c9245fac.js.map\n","const NEWS_URL = 'https://api.hnpwa.com/v0/news/{page}.json';\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/{id}.json';\nconst initialPage = 1;\nconst maxPage = 10;\nlet currentPage = initialPage;\n\nexport async function loadNewsFeed(rootElementParam) {\n  // Use passed element or try to find it in DOM\n  const rootElement = rootElementParam || document.getElementById('root');\n  if (!rootElement) {\n    throw new Error('Root element not found');\n  }\n\n  const currentPage = location.hash.substring( );\n\n  const ul = document.createElement('ul');\n\n  try {\n    // Show loading state\n    rootElement.innerHTML = 'Loading...';\n    \n    const response = await fetch(NEWS_URL.replace('{page}', currentPage));\n    const newsFeed = await response.json();\n    \n    newsFeed.forEach(item => {\n      const div = document.createElement('div');\n\n      div.innerHTML = `\n        <li>\n          <a href=\"#item=${item.id}\">\n            ${item.title} (${item.comments_count})\n          </a>\n        </li>\n      `;\n      ul.appendChild(div.firstElementChild);\n    });\n    \n    // Clear loading state and show content\n    rootElement.innerHTML = '';\n    rootElement.appendChild(ul);\n    \n  } catch (error) {\n    rootElement.innerHTML = 'Error loading news feed';\n    console.error('Error:', error);\n  }\n\n  if (currentPage > initialPage) {\n    const prevPageButton = document.createElement('button');\n    prevPageButton.innerHTML = 'Previous Page';\n    prevPageButton.addEventListener('click', () => {\n      loadNewsFeed(rootElement, currentPage-1);\n    });\n    rootElement.appendChild(prevPageButton);\n  }\n\n  if (currentPage < maxPage) {\n    const nextPageButton = document.createElement('button');\n    nextPageButton.innerHTML = 'Next Page';\n    nextPageButton.addEventListener('click', () => {\n      loadNewsFeed(rootElement, currentPage+1);\n    });\n    rootElement.appendChild(nextPageButton);\n  }\n}\n\nasync function loadNewsMaterial(rootElementParam, currentPage, newsId) {\n   // Use passed element or try to find it in DOM\n  const rootElement = rootElementParam || document.getElementById('root');\n  if (!rootElement) {\n    throw new Error('Root element not found');\n  }\n\n  const summary = document.createElement('div');\n  \n  try {\n    // Show loading state\n    rootElement.innerHTML = 'Loading...';\n    \n    // Fetch the item details\n    const response = await fetch(CONTENT_URL.replace('{id}', newsId));\n    const content = await response.json();\n    \n    // Create a back button\n    const backButton = document.createElement('button');\n    backButton.innerHTML = '← Back to News';\n    backButton.addEventListener('click', () => {\n      location.hash = '';\n    });\n    \n    // Prepare content for summarization\n    const textToSummarize = `\n      Title: ${content.title}\n      URL Content: ${content.url ? content.url : 'No URL'}\n      Comments: ${content.comments ? content.comments.map(c => c.content).join('\\n') : 'No comments'}\n    `;\n    \n    // Use transformers.js for summarization\n    console.log(textToSummarize);\n    const result = await summarizeText(textToSummarize);\n    \n    const summarizedContent = result[0].summary_text;\n    \n    // Display the summary\n    summary.innerHTML = `\n      <h2>${content.title}</h2>\n      <p><strong>Summary:</strong></p>\n      <p>${summarizedContent}</p>\n      <p><strong>Original URL:</strong> <a href=\"${content.url}\" target=\"_blank\">${content.url}</a></p>\n      <p><strong>Comments:</strong> ${content.comments_count || 0}</p>\n    `;\n    \n    rootElement.innerHTML = '';\n    rootElement.appendChild(backButton);\n    rootElement.appendChild(summary);\n    \n  } catch (error) {\n    console.error('Error:', error);\n    rootElement.innerHTML = 'Error loading content';\n  }\n}\n\nfunction routePage(rootElementParam) {\n  // Use passed element or try to find it in DOM\n  const rootElement = rootElementParam || document.getElementById('root');\n  if (!rootElement) {\n    throw new Error('Root element not found');\n  }\n\n  currentPage = initialPage;\n\n  if (location.hash === '') {\n    loadNewsFeed(rootElementParam, currentPage);\n  } else {\n    const id = location.hash.substring(1);\n    loadNewsMaterial(rootElementParam, currentPage, id);\n  }\n}\n\n// Only call loadNews if we're in a browser environment\nif (typeof window !== 'undefined') {\n    const rootElement = document.getElementById('root');\n    if (rootElement) {\n      window.addEventListener('hashchange', routePage);\n    }\n}"],"names":["$6b17f08f738443dc$var$currentPage","$6b17f08f738443dc$export$4bb3ff9d4e0b170e","rootElementParam","rootElement","document","getElementById","Error","currentPage","location","hash","substring","ul","createElement","innerHTML","response","fetch","$6b17f08f738443dc$var$NEWS_URL","replace","newsFeed","json","forEach","item","div","id","title","comments_count","appendChild","firstElementChild","error","console","prevPageButton","addEventListener","nextPageButton","$6b17f08f738443dc$var$loadNewsMaterial","newsId","summary","$6b17f08f738443dc$var$CONTENT_URL","content","backButton","textToSummarize","url","comments","map","c","join","log","summarizedContent","result","summarizeText","summary_text","window","NEWS_URL","CONTENT_URL","initialPage","maxPage","loadNewsFeed","loadNewsMaterial","routePage"],"version":3,"file":"index.c9245fac.js.map"}