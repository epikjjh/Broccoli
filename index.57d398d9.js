let t,r,s,i,n,a,o;function l(t){return t&&t.__esModule?t.default:t}function u(t,r){return Object.keys(r).forEach(function(s){"default"===s||"__esModule"===s||Object.prototype.hasOwnProperty.call(t,s)||Object.defineProperty(t,s,{enumerable:!0,get:function(){return r[s]}})}),t}function d(t,r,s,i){Object.defineProperty(t,r,{get:s,set:i,enumerable:!0,configurable:!0})}var c,p,h,f,m,_,g,y=globalThis,w={},b={},x=y.parcelRequire94c2;null==x&&((x=function(t){if(t in w)return w[t].exports;if(t in b){var r=b[t];delete b[t];var s={id:t,exports:{}};return w[t]=s,r.call(s.exports,s,s.exports),s.exports}var i=Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(t,r){b[t]=r},y.parcelRequire94c2=x);var v=x.register;v("jV6xv",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.registerBackend=void 0;var s=x("7XQ4K");Object.defineProperty(t.exports,"registerBackend",{enumerable:!0,get:function(){return s.registerBackend}})}),v("7XQ4K",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.resolveBackendAndExecutionProviders=t.exports.registerBackend=void 0;let s=new Map,i=[];t.exports.registerBackend=(t,r,n)=>{if(r&&"function"==typeof r.init&&"function"==typeof r.createInferenceSessionHandler){let a=s.get(t);if(void 0===a)s.set(t,{backend:r,priority:n});else if(a.priority>n)return;else if(a.priority===n&&a.backend!==r)throw Error(`cannot register backend "${t}" using priority ${n}`);if(n>=0){let r=i.indexOf(t);-1!==r&&i.splice(r,1);for(let r=0;r<i.length;r++)if(s.get(i[r]).priority<=n){i.splice(r,0,t);return}i.push(t)}return}throw TypeError("not a valid backend")};let n=async t=>{let r=s.get(t);if(!r)return"backend not found.";if(r.initialized)return r.backend;{if(r.aborted)return r.error;let s=!!r.initPromise;try{return s||(r.initPromise=r.backend.init(t)),await r.initPromise,r.initialized=!0,r.backend}catch(t){return s||(r.error=`${t}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},a=async t=>{let r;let s=t.executionProviders||[],a=s.map(t=>"string"==typeof t?t:t.name),o=0===a.length?i:a,l=[],u=new Set;for(let t of o){let s=await n(t);"string"==typeof s?l.push({name:t,err:s}):(r||(r=s),r===s&&u.add(t))}if(!r)throw Error(`no available backend found. ERR: ${l.map(t=>`[${t.name}] ${t.err}`).join(", ")}`);for(let{name:t,err:r}of l)a.includes(t)&&console.warn(`removing requested execution provider "${t}" from session options because it is not available: ${r}`);let d=s.filter(t=>u.has("string"==typeof t?t:t.name));return[r,new Proxy(t,{get:(t,r)=>"executionProviders"===r?d:Reflect.get(t,r)})]};t.exports.resolveBackendAndExecutionProviders=a}),v("5Rz8D",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.env=void 0;var s=x("9RCam");t.exports.env=s.env}),v("9RCam",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.env=void 0;var s=x("bttMm");let i="warning";t.exports.env={wasm:{},webgl:{},webgpu:{},versions:{common:s.version},set logLevel(value){if(void 0===value)return;if("string"!=typeof value||-1===["verbose","info","warning","error","fatal"].indexOf(value))throw Error(`Unsupported logging level: ${value}`);i=value},get logLevel(){return i}},Object.defineProperty(t.exports.env,"logLevel",{enumerable:!0})}),v("bttMm",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.version=void 0,t.exports.version="1.20.1"}),v("4Yomr",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.InferenceSession=void 0;var s=x("5Yc8R");t.exports.InferenceSession=s.InferenceSession}),v("5Yc8R",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.InferenceSession=void 0;var s=x("7XQ4K"),i=x("h4Sf9"),n=x("g4dfP");class a{constructor(t){this.handler=t}async run(t,r,s){(0,n.TRACE_FUNC_BEGIN)();let a={},o={};if("object"!=typeof t||null===t||t instanceof i.Tensor||Array.isArray(t))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if("object"==typeof r){if(null===r)throw TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof i.Tensor)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(l=!1,r)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);a[t]=null}if("object"==typeof s&&null!==s)o=s;else if(void 0!==s)throw TypeError("'options' must be an object.")}else{let t=!1,n=Object.getOwnPropertyNames(r);for(let s of this.outputNames)if(-1!==n.indexOf(s)){let n=r[s];(null===n||n instanceof i.Tensor)&&(t=!0,l=!1,a[s]=n)}if(t){if("object"==typeof s&&null!==s)o=s;else if(void 0!==s)throw TypeError("'options' must be an object.")}else o=r}}else if(void 0!==r)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of this.inputNames)if(void 0===t[r])throw Error(`input '${r}' is missing in 'feeds'.`);if(l)for(let t of this.outputNames)a[t]=null;let u=await this.handler.run(t,a,o),d={};for(let t in u)if(Object.hasOwnProperty.call(u,t)){let r=u[t];r instanceof i.Tensor?d[t]=r:d[t]=new i.Tensor(r.type,r.data,r.dims)}return(0,n.TRACE_FUNC_END)(),d}async release(){return this.handler.dispose()}static async create(t,r,i,o){let l;(0,n.TRACE_FUNC_BEGIN)();let u={};if("string"==typeof t){if(l=t,"object"==typeof r&&null!==r)u=r;else if(void 0!==r)throw TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(l=t,"object"==typeof r&&null!==r)u=r;else if(void 0!==r)throw TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&t instanceof SharedArrayBuffer){let s=0,n=t.byteLength;if("object"==typeof r&&null!==r)u=r;else if("number"==typeof r){if(!Number.isSafeInteger(s=r))throw RangeError("'byteOffset' must be an integer.");if(s<0||s>=t.byteLength)throw RangeError(`'byteOffset' is out of range [0, ${t.byteLength}).`);if(n=t.byteLength-s,"number"==typeof i){if(!Number.isSafeInteger(n=i))throw RangeError("'byteLength' must be an integer.");if(n<=0||s+n>t.byteLength)throw RangeError(`'byteLength' is out of range (0, ${t.byteLength-s}].`);if("object"==typeof o&&null!==o)u=o;else if(void 0!==o)throw TypeError("'options' must be an object.")}else if(void 0!==i)throw TypeError("'byteLength' must be a number.")}else if(void 0!==r)throw TypeError("'options' must be an object.");l=new Uint8Array(t,s,n)}else throw TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[d,c]=await (0,s.resolveBackendAndExecutionProviders)(u),p=await d.createInferenceSessionHandler(l,c);return(0,n.TRACE_FUNC_END)(),new a(p)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}t.exports.InferenceSession=a}),v("h4Sf9",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.Tensor=void 0;var s=x("hwDz1");t.exports.Tensor=s.Tensor}),v("hwDz1",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.Tensor=void 0;var s=x("gtcSh"),i=x("aO6Zy"),n=x("2SiXh"),a=x("i30aJ");t.exports.Tensor=class{constructor(t,r,s){let i,o;if((0,n.checkTypedArray)(),"object"==typeof t&&"location"in t)switch(this.dataLocation=t.location,i=t.type,o=t.dims,t.location){case"cpu-pinned":{let r=n.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(i);if(!r)throw TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(t.data instanceof r))throw TypeError(`buffer should be of type ${r.name}`);this.cpuData=t.data;break}case"texture":if("float32"!==i)throw TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break;case"gpu-buffer":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break;case"ml-tensor":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint64"!==i&&"int8"!==i&&"uint8"!==i&&"bool"!==i)throw TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=t.mlTensor,this.downloader=t.download,this.disposer=t.dispose;break;default:throw Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if("string"==typeof t){if(i=t,l=s,"string"===t){if(!Array.isArray(r))throw TypeError("A string tensor's data must be a string array.");a=r}else{let s=n.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(t);if(void 0===s)throw TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if("float16"===t&&s===Uint16Array||"uint4"===t||"int4"===t)throw TypeError(`Creating a ${t} tensor from number array is not supported. Please use ${s.name} as data.`);a="uint64"===t||"int64"===t?s.from(r,BigInt):s.from(r)}else if(r instanceof s)a=r;else if(r instanceof Uint8ClampedArray){if("uint8"===t)a=Uint8Array.from(r);else throw TypeError("A Uint8ClampedArray tensor's data must be type of uint8")}else throw TypeError(`A ${i} tensor's data must be type of ${s}`)}}else if(l=r,Array.isArray(t)){if(0===t.length)throw TypeError("Tensor type cannot be inferred from an empty array.");let r=typeof t[0];if("string"===r)i="string",a=t;else if("boolean"===r)i="bool",a=Uint8Array.from(t);else throw TypeError(`Invalid element type of data array: ${r}.`)}else if(t instanceof Uint8ClampedArray)i="uint8",a=Uint8Array.from(t);else{let r=n.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(t.constructor);if(void 0===r)throw TypeError(`Unsupported type for tensor data: ${t.constructor}.`);i=r,a=t}if(void 0===l)l=[a.length];else if(!Array.isArray(l))throw TypeError("A tensor's dims must be a number array");o=l,this.cpuData=a,this.dataLocation="cpu"}let l=(0,a.calculateSize)(o);if(this.cpuData&&l!==this.cpuData.length){if(("uint4"===i||"int4"===i)&&Math.ceil(l/2)===this.cpuData.length);else throw Error(`Tensor's size(${l}) does not match data length(${this.cpuData.length}).`)}this.type=i,this.dims=o,this.size=l}static async fromImage(t,r){return(0,i.tensorFromImage)(t,r)}static fromTexture(t,r){return(0,i.tensorFromTexture)(t,r)}static fromGpuBuffer(t,r){return(0,i.tensorFromGpuBuffer)(t,r)}static fromMLTensor(t,r){return(0,i.tensorFromMLTensor)(t,r)}static fromPinnedBuffer(t,r,s){return(0,i.tensorFromPinnedBuffer)(t,r,s)}toDataURL(t){return(0,s.tensorToDataURL)(this,t)}toImageData(t){return(0,s.tensorToImageData)(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}default:throw Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw Error("Cannot reshape a tensor that owns GPU resource.");return(0,a.tensorReshape)(this,t)}}}),v("gtcSh",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.tensorToImageData=t.exports.tensorToDataURL=void 0,t.exports.tensorToDataURL=(t,r)=>{let s="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=t.dims[3],s.height=t.dims[2];let i=s.getContext("2d");if(null!=i){let n,a,o,l;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(n=t.dims[2],a=t.dims[3]):(n=t.dims[3],a=t.dims[2]);let u=r?.format!==void 0?r.format:"RGB",d=r?.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:"number"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],0],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:"number"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));let c=a*n,p=0,h=c,f=2*c,m=-1;"RGBA"===u?(p=0,h=c,f=2*c,m=3*c):"RGB"===u?(p=0,h=c,f=2*c):"RBG"===u&&(p=0,f=c,h=2*c);for(let r=0;r<a;r++)for(let s=0;s<n;s++){let n=(t.data[p++]-l[0])*o[0],a=(t.data[h++]-l[1])*o[1],u=(t.data[f++]-l[2])*o[2],d=-1===m?255:(t.data[m++]-l[3])*o[3];i.fillStyle="rgba("+n+","+a+","+u+","+d+")",i.fillRect(s,r,1,1)}if("toDataURL"in s)return s.toDataURL();throw Error("toDataURL is not supported")}throw Error("Can not access image data")},t.exports.tensorToImageData=(t,r)=>{let s;let i="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null!=i){let n,a,o,l,u;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(n=t.dims[2],a=t.dims[1],o=t.dims[3]):(n=t.dims[3],a=t.dims[2],o=t.dims[1]);let d=void 0!==r&&void 0!==r.format?r.format:"RGB",c=r?.norm;void 0===c||void 0===c.mean?l=[255,255,255,255]:"number"==typeof c.mean?l=[c.mean,c.mean,c.mean,c.mean]:(l=[c.mean[0],c.mean[1],c.mean[2],255],void 0!==c.mean[3]&&(l[3]=c.mean[3])),void 0===c||void 0===c.bias?u=[0,0,0,0]:"number"==typeof c.bias?u=[c.bias,c.bias,c.bias,c.bias]:(u=[c.bias[0],c.bias[1],c.bias[2],0],void 0!==c.bias[3]&&(u[3]=c.bias[3]));let p=a*n;if(void 0!==r&&(void 0!==r.format&&4===o&&"RGBA"!==r.format||3===o&&"RGB"!==r.format&&"BGR"!==r.format))throw Error("Tensor format doesn't match input tensor dims");let h=0,f=1,m=2,_=3,g=0,y=p,w=2*p,b=-1;"RGBA"===d?(g=0,y=p,w=2*p,b=3*p):"RGB"===d?(g=0,y=p,w=2*p):"RBG"===d&&(g=0,w=p,y=2*p),s=i.createImageData(n,a);for(let r=0;r<a*n;h+=4,f+=4,m+=4,_+=4,r++)s.data[h]=(t.data[g++]-u[0])*l[0],s.data[f]=(t.data[y++]-u[1])*l[1],s.data[m]=(t.data[w++]-u[2])*l[2],s.data[_]=-1===b?255:(t.data[b++]-u[3])*l[3]}else throw Error("Can not access image data");return s}}),v("aO6Zy",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.tensorFromPinnedBuffer=t.exports.tensorFromMLTensor=t.exports.tensorFromGpuBuffer=t.exports.tensorFromTexture=t.exports.tensorFromImage=t.exports.bufferToTensor=void 0;var s=x("hwDz1");t.exports.bufferToTensor=(t,r)=>{let i,n;if(void 0===t)throw Error("Image buffer must be defined");if(void 0===r.height||void 0===r.width)throw Error("Image height and width must be defined");if("NHWC"===r.tensorLayout)throw Error("NHWC Tensor layout is not supported yet");let{height:a,width:o}=r,l=r.norm??{mean:255,bias:0};i="number"==typeof l.mean?[l.mean,l.mean,l.mean,l.mean]:[l.mean[0],l.mean[1],l.mean[2],l.mean[3]??255],n="number"==typeof l.bias?[l.bias,l.bias,l.bias,l.bias]:[l.bias[0],l.bias[1],l.bias[2],l.bias[3]??0];let u=void 0!==r.format?r.format:"RGBA",d=void 0!==r.tensorFormat&&void 0!==r.tensorFormat?r.tensorFormat:"RGB",c=a*o,p=new Float32Array("RGBA"===d?4*c:3*c),h=4,f=0,m=1,_=2,g=3,y=0,w=c,b=2*c,x=-1;"RGB"===u&&(h=3,f=0,m=1,_=2,g=-1),"RGBA"===d?x=3*c:"RBG"===d?(y=0,b=c,w=2*c):"BGR"===d&&(b=0,w=c,y=2*c);for(let r=0;r<c;r++,f+=h,_+=h,m+=h,g+=h)p[y++]=(t[f]+n[0])/i[0],p[w++]=(t[m]+n[1])/i[1],p[b++]=(t[_]+n[2])/i[2],-1!==x&&-1!==g&&(p[x++]=(t[g]+n[3])/i[3]);return"RGBA"===d?new s.Tensor("float32",p,[1,4,a,o]):new s.Tensor("float32",p,[1,3,a,o])};let i=async(r,s)=>{let i;let n="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,a="undefined"!=typeof ImageData&&r instanceof ImageData,o="undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap,l="string"==typeof r,u=s??{},d=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw Error("Canvas is not supported")},c=t=>"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement?t.getContext("2d"):t instanceof OffscreenCanvas?t.getContext("2d"):null;if(n){let t=d();t.width=r.width,t.height=r.height;let n=c(t);if(null!=n){let t=r.height,a=r.width;if(void 0!==s&&void 0!==s.resizedHeight&&void 0!==s.resizedWidth&&(t=s.resizedHeight,a=s.resizedWidth),void 0!==s){if(u=s,void 0!==s.tensorFormat)throw Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=t,u.width=a}else u.tensorFormat="RGBA",u.height=t,u.width=a;n.drawImage(r,0,0),i=n.getImageData(0,0,a,t).data}else throw Error("Can not access image data")}else if(a){let t,n;if(void 0!==s&&void 0!==s.resizedWidth&&void 0!==s.resizedHeight?(t=s.resizedHeight,n=s.resizedWidth):(t=r.height,n=r.width),void 0!==s&&(u=s),u.format="RGBA",u.height=t,u.width=n,void 0!==s){let s=d();s.width=n,s.height=t;let a=c(s);if(null!=a)a.putImageData(r,0,0),i=a.getImageData(0,0,n,t).data;else throw Error("Can not access image data")}else i=r.data}else if(o){if(void 0===s)throw Error("Please provide image config with format for Imagebitmap");let n=d();n.width=r.width,n.height=r.height;let a=c(n);if(null!=a){let s=r.height,n=r.width;return a.drawImage(r,0,0,n,s),i=a.getImageData(0,0,n,s).data,u.height=s,u.width=n,(0,t.exports.bufferToTensor)(i,u)}throw Error("Can not access image data")}else if(l)return new Promise((s,i)=>{let n=d(),a=c(n);if(!r||!a)return i();let o=new Image;o.crossOrigin="Anonymous",o.src=r,o.onload=()=>{n.width=o.width,n.height=o.height,a.drawImage(o,0,0,n.width,n.height);let r=a.getImageData(0,0,n.width,n.height);u.height=n.height,u.width=n.width,s((0,t.exports.bufferToTensor)(r.data,u))}});else throw Error("Input data provided is not supported - aborted tensor creation");if(void 0!==i)return(0,t.exports.bufferToTensor)(i,u);throw Error("Input data provided is not supported - aborted tensor creation")};t.exports.tensorFromImage=i,t.exports.tensorFromTexture=(t,r)=>{let{width:i,height:n,download:a,dispose:o}=r;return new s.Tensor({location:"texture",type:"float32",texture:t,dims:[1,n,i,4],download:a,dispose:o})},t.exports.tensorFromGpuBuffer=(t,r)=>{let{dataType:i,dims:n,download:a,dispose:o}=r;return new s.Tensor({location:"gpu-buffer",type:i??"float32",gpuBuffer:t,dims:n,download:a,dispose:o})},t.exports.tensorFromMLTensor=(t,r)=>{let{dataType:i,dims:n,download:a,dispose:o}=r;return new s.Tensor({location:"ml-tensor",type:i??"float32",mlTensor:t,dims:n,download:a,dispose:o})},t.exports.tensorFromPinnedBuffer=(t,r,i)=>new s.Tensor({location:"cpu-pinned",type:t,data:r,dims:i??[r.length]})}),v("2SiXh",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.checkTypedArray=t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP=t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP=void 0,t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let s=!1;t.exports.checkTypedArray=()=>{if(!s){s=!0;let r="undefined"!=typeof BigInt64Array&&BigInt64Array.from,i="undefined"!=typeof BigUint64Array&&BigUint64Array.from,n="undefined"!=typeof Float16Array&&Float16Array.from;r&&(t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("int64",BigInt64Array),t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array,"int64")),i&&(t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("uint64",BigUint64Array),t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array,"uint64")),n?(t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("float16",Float16Array),t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(Float16Array,"float16")):t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("float16",Uint16Array)}}}),v("i30aJ",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.tensorReshape=t.exports.calculateSize=void 0;var s=x("hwDz1");t.exports.calculateSize=t=>{let r=1;for(let s=0;s<t.length;s++){let i=t[s];if("number"!=typeof i||!Number.isSafeInteger(i))throw TypeError(`dims[${s}] must be an integer, got: ${i}`);if(i<0)throw RangeError(`dims[${s}] must be a non-negative integer, got: ${i}`);r*=i}return r},t.exports.tensorReshape=(t,r)=>{switch(t.location){case"cpu":return new s.Tensor(t.type,t.data,r);case"cpu-pinned":return new s.Tensor({location:"cpu-pinned",data:t.data,type:t.type,dims:r});case"texture":return new s.Tensor({location:"texture",texture:t.texture,type:t.type,dims:r});case"gpu-buffer":return new s.Tensor({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:r});case"ml-tensor":return new s.Tensor({location:"ml-tensor",mlTensor:t.mlTensor,type:t.type,dims:r});default:throw Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),v("g4dfP",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.TRACE_FUNC_END=t.exports.TRACE_FUNC_BEGIN=t.exports.TRACE=void 0;var s=x("9RCam");t.exports.TRACE=(t,r)=>{(void 0===s.env.trace?s.env.wasm.trace:s.env.trace)&&console.timeStamp(`${t}::ORT::${r}`)};let i=(r,s)=>{let i=Error().stack?.split(/\r\n|\r|\n/g)||[],n=!1;for(let a=0;a<i.length;a++){if(n&&!i[a].includes("TRACE_FUNC")){let n=`FUNC_${r}::${i[a].trim().split(" ")[1]}`;s&&(n+=`::${s}`),(0,t.exports.TRACE)("CPU",n);return}i[a].includes("TRACE_FUNC")&&(n=!0)}};t.exports.TRACE_FUNC_BEGIN=t=>{(void 0===s.env.trace?s.env.wasm.trace:s.env.trace)&&i("BEGIN",t)},t.exports.TRACE_FUNC_END=t=>{(void 0===s.env.trace?s.env.wasm.trace:s.env.trace)&&i("END",t)}}),v("3BAs2",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0})}),v("eXTbw",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0})}),v("9e5te",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0})}),v("9NIDY",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0})}),v("DDPMX",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.TrainingSession=void 0;var s=x("5C0Ip");t.exports.TrainingSession=s.TrainingSession}),v("5C0Ip",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.TrainingSession=void 0;var s=x("7XQ4K"),i=x("h4Sf9");class n{constructor(t,r,s){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=s}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw Error("This training session has no evalModel loaded.")}static async create(t,r){let i=t.evalModel||"",a=t.optimizerModel||"",[o,l]=await (0,s.resolveBackendAndExecutionProviders)(r||{});if(o.createTrainingSessionHandler)return new n(await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,i,a,l),!!t.optimizerModel,!!t.evalModel);throw Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(t,r,s,n,a){let o={},l={};if("object"!=typeof s||null===s||s instanceof i.Tensor||Array.isArray(s))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if("object"==typeof n){if(null===n)throw TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof i.Tensor)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(0===n.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(u=!1,n)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===r.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);o[t]=null}if("object"==typeof a&&null!==a)l=a;else if(void 0!==a)throw TypeError("'options' must be an object.")}else{let t=!1,s=Object.getOwnPropertyNames(n);for(let a of r)if(-1!==s.indexOf(a)){let r=n[a];(null===r||r instanceof i.Tensor)&&(t=!0,u=!1,o[a]=r)}if(t){if("object"==typeof a&&null!==a)l=a;else if(void 0!==a)throw TypeError("'options' must be an object.")}else l=n}}else if(void 0!==n)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of t)if(void 0===s[r])throw Error(`input '${r}' is missing in 'feeds'.`);if(u)for(let t of r)o[t]=null;return[o,l]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let s in t)if(Object.hasOwnProperty.call(t,s)){let n=t[s];n instanceof i.Tensor?r[s]=n:r[s]=new i.Tensor(n.type,n.data,n.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,s){let[i,n]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,s),a=await this.handler.runTrainStep(t,i,n);return this.convertHandlerReturnTypeToMapOfTensors(a)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,s){if(this.hasEvalModel){let[i,n]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,s),a=await this.handler.runEvalStep(t,i,n);return this.convertHandlerReturnTypeToMapOfTensors(a)}throw Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let s=await this.getParametersSize(r);if(t.length!==4*s)throw Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}t.exports.TrainingSession=n});var $={},k=Object.assign(Object.create(null),{url:"file:///node_modules/@huggingface/transformers/src/env.js"}),E={},S=E={};function z(){throw Error("setTimeout has not been defined")}function T(){throw Error("clearTimeout has not been defined")}function I(t){if(c===setTimeout)return setTimeout(t,0);if((c===z||!c)&&setTimeout)return c=setTimeout,setTimeout(t,0);try{return c(t,0)}catch(r){try{return c.call(null,t,0)}catch(r){return c.call(this,t,0)}}}!function(){try{c="function"==typeof setTimeout?setTimeout:z}catch(t){c=z}try{p="function"==typeof clearTimeout?clearTimeout:T}catch(t){p=T}}();var C=[],A=!1,M=-1;function O(){A&&h&&(A=!1,h.length?C=h.concat(C):M=-1,C.length&&B())}function B(){if(!A){var t=I(O);A=!0;for(var r=C.length;r;){for(h=C,C=[];++M<r;)h&&h[M].run();M=-1,r=C.length}h=null,A=!1,function(t){if(p===clearTimeout)return clearTimeout(t);if((p===T||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(t);try{p(t)}catch(r){try{return p.call(null,t)}catch(r){return p.call(this,t)}}}(t)}}function P(t,r){this.fun=t,this.array=r}function R(){}S.nextTick=function(t){var r=Array(arguments.length-1);if(arguments.length>1)for(var s=1;s<arguments.length;s++)r[s-1]=arguments[s];C.push(new P(t,r)),1!==C.length||A||I(B)},P.prototype.run=function(){this.fun.apply(null,this.array)},S.title="browser",S.browser=!0,S.env={},S.argv=[],S.version="",S.versions={},S.on=R,S.addListener=R,S.once=R,S.off=R,S.removeListener=R,S.removeAllListeners=R,S.emit=R,S.prependListener=R,S.prependOnceListener=R,S.listeners=function(t){return[]},S.binding=function(t){throw Error("process.binding is not supported")},S.cwd=function(){return"/"},S.chdir=function(t){throw Error("process.chdir is not supported")},S.umask=function(){return 0};var D="node_modules/@huggingface/transformers/src";const L="undefined"!=typeof window&&void 0!==window.document,N="undefined"!=typeof self&&self.constructor?.name==="DedicatedWorkerGlobalScope",U="undefined"!=typeof self&&"caches"in self,F="undefined"!=typeof navigator&&"gpu"in navigator,q="undefined"!=typeof navigator&&"ml"in navigator,V=void 0!==E,j=V&&E?.release?.name==="node",G=!J(l($)),W=!J(l($)),H=Object.freeze({IS_BROWSER_ENV:L,IS_WEBWORKER_ENV:N,IS_WEB_CACHE_AVAILABLE:U,IS_WEBGPU_AVAILABLE:F,IS_WEBNN_AVAILABLE:q,IS_PROCESS_AVAILABLE:V,IS_NODE_ENV:j,IS_FS_AVAILABLE:G,IS_PATH_AVAILABLE:W}),K=G&&W;let X="./";if(K){let t=Object(k).url;t?X=l($).dirname(l($).dirname(l($).fileURLToPath(t))):void 0!==D&&(X=l($).dirname(D))}const Y=K?l($).join(X,"/.cache/"):null,Q="/models/",Z={version:"3.2.3",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(L||N),localModelPath:K?l($).join(X,Q):Q,useFS:G,useBrowserCache:U,useFSCache:G,cacheDir:Y,useCustomCache:!1,customCache:null};function J(t){return 0===Object.keys(t).length}const ee=class{constructor(){let t=function(...r){return t._call(...r)};return Object.setPrototypeOf(t,new.target.prototype)}_call(...t){throw Error("Must implement _call method in subclass")}};function et(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function er(t){return null==t||-1===t}function es(t){let r=[],s=t;for(;Array.isArray(s);)r.push(s.length),s=s[0];return r}function ei(...t){return Array.prototype.concat.apply([],t)}function en(t,r){return Math.abs((t+r)%(2*r)-r)}function ea(t,r){return Object.assign({},...r.map(r=>{if(void 0!==t[r])return{[r]:t[r]}}))}f=function(t){var r,s,i=function(t){var r=t.length;if(r%4>0)throw Error("Invalid string. Length must be a multiple of 4");var s=t.indexOf("=");-1===s&&(s=r);var i=s===r?0:4-s%4;return[s,i]}(t),n=i[0],a=i[1],o=new eu((n+a)*3/4-a),l=0,u=a>0?n-4:n;for(s=0;s<u;s+=4)r=el[t.charCodeAt(s)]<<18|el[t.charCodeAt(s+1)]<<12|el[t.charCodeAt(s+2)]<<6|el[t.charCodeAt(s+3)],o[l++]=r>>16&255,o[l++]=r>>8&255,o[l++]=255&r;return 2===a&&(r=el[t.charCodeAt(s)]<<2|el[t.charCodeAt(s+1)]>>4,o[l++]=255&r),1===a&&(r=el[t.charCodeAt(s)]<<10|el[t.charCodeAt(s+1)]<<4|el[t.charCodeAt(s+2)]>>2,o[l++]=r>>8&255,o[l++]=255&r),o},m=function(t){for(var r,s=t.length,i=s%3,n=[],a=0,o=s-i;a<o;a+=16383)n.push(function(t,r,s){for(var i,n=[],a=r;a<s;a+=3)n.push(eo[(i=(t[a]<<16&0xff0000)+(t[a+1]<<8&65280)+(255&t[a+2]))>>18&63]+eo[i>>12&63]+eo[i>>6&63]+eo[63&i]);return n.join("")}(t,a,a+16383>o?o:a+16383));return 1===i?n.push(eo[(r=t[s-1])>>2]+eo[r<<4&63]+"=="):2===i&&n.push(eo[(r=(t[s-2]<<8)+t[s-1])>>10]+eo[r>>4&63]+eo[r<<2&63]+"="),n.join("")};for(var eo=[],el=[],eu="undefined"!=typeof Uint8Array?Uint8Array:Array,ed="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",ec=0,ep=ed.length;ec<ep;++ec)eo[ec]=ed[ec],el[ed.charCodeAt(ec)]=ec;el["-".charCodeAt(0)]=62,el["_".charCodeAt(0)]=63,_=function(t,r,s,i,n){var a,o,l=8*n-i-1,u=(1<<l)-1,d=u>>1,c=-7,p=s?n-1:0,h=s?-1:1,f=t[r+p];for(p+=h,a=f&(1<<-c)-1,f>>=-c,c+=l;c>0;a=256*a+t[r+p],p+=h,c-=8);for(o=a&(1<<-c)-1,a>>=-c,c+=i;c>0;o=256*o+t[r+p],p+=h,c-=8);if(0===a)a=1-d;else{if(a===u)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,i),a-=d}return(f?-1:1)*o*Math.pow(2,a-i)},g=function(t,r,s,i,n,a){var o,l,u,d=8*a-n-1,c=(1<<d)-1,p=c>>1,h=23===n?5960464477539062e-23:0,f=i?0:a-1,m=i?1:-1,_=r<0||0===r&&1/r<0?1:0;for(isNaN(r=Math.abs(r))||r===1/0?(l=isNaN(r)?1:0,o=c):(o=Math.floor(Math.log(r)/Math.LN2),r*(u=Math.pow(2,-o))<1&&(o--,u*=2),o+p>=1?r+=h/u:r+=h*Math.pow(2,1-p),r*u>=2&&(o++,u/=2),o+p>=c?(l=0,o=c):o+p>=1?(l=(r*u-1)*Math.pow(2,n),o+=p):(l=r*Math.pow(2,p-1)*Math.pow(2,n),o=0));n>=8;t[s+f]=255&l,f+=m,l/=256,n-=8);for(o=o<<n|l,d+=n;d>0;t[s+f]=255&o,f+=m,o/=256,d-=8);t[s+f-m]|=128*_};var eh="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function ef(t){if(t>0x7fffffff)throw RangeError('The value "'+t+'" is invalid for option "size"');var r=new Uint8Array(t);return Object.setPrototypeOf(r,em.prototype),r}function em(t,r,s){if("number"==typeof t){if("string"==typeof r)throw TypeError('The "string" argument must be of type string. Received type number');return ey(t)}return e_(t,r,s)}function e_(t,r,s){if("string"==typeof t)return function(t,r){if(("string"!=typeof r||""===r)&&(r="utf8"),!em.isEncoding(r))throw TypeError("Unknown encoding: "+r);var s=0|ev(t,r),i=ef(s),n=i.write(t,r);return n!==s&&(i=i.slice(0,n)),i}(t,r);if(ArrayBuffer.isView(t))return function(t){if(eD(t,Uint8Array)){var r=new Uint8Array(t);return eb(r.buffer,r.byteOffset,r.byteLength)}return ew(t)}(t);if(null==t)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(eD(t,ArrayBuffer)||t&&eD(t.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(eD(t,SharedArrayBuffer)||t&&eD(t.buffer,SharedArrayBuffer)))return eb(t,r,s);if("number"==typeof t)throw TypeError('The "value" argument must not be of type number. Received type number');var i=t.valueOf&&t.valueOf();if(null!=i&&i!==t)return em.from(i,r,s);var n=function(t){if(em.isBuffer(t)){var r,s=0|ex(t.length),i=ef(s);return 0===i.length||t.copy(i,0,0,s),i}return void 0!==t.length?"number"!=typeof t.length||(r=t.length)!=r?ef(0):ew(t):"Buffer"===t.type&&Array.isArray(t.data)?ew(t.data):void 0}(t);if(n)return n;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return em.from(t[Symbol.toPrimitive]("string"),r,s);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function eg(t){if("number"!=typeof t)throw TypeError('"size" argument must be of type number');if(t<0)throw RangeError('The value "'+t+'" is invalid for option "size"')}function ey(t){return eg(t),ef(t<0?0:0|ex(t))}function ew(t){for(var r=t.length<0?0:0|ex(t.length),s=ef(r),i=0;i<r;i+=1)s[i]=255&t[i];return s}function eb(t,r,s){var i;if(r<0||t.byteLength<r)throw RangeError('"offset" is outside of buffer bounds');if(t.byteLength<r+(s||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(i=void 0===r&&void 0===s?new Uint8Array(t):void 0===s?new Uint8Array(t,r):new Uint8Array(t,r,s),em.prototype),i}function ex(t){if(t>=0x7fffffff)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|t}function ev(t,r){if(em.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||eD(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var s=t.length,i=arguments.length>2&&!0===arguments[2];if(!i&&0===s)return 0;for(var n=!1;;)switch(r){case"ascii":case"latin1":case"binary":return s;case"utf8":case"utf-8":return eB(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*s;case"hex":return s>>>1;case"base64":return eP(t).length;default:if(n)return i?-1:eB(t).length;r=(""+r).toLowerCase(),n=!0}}function e$(t,r,s){var i,n,a=!1;if((void 0===r||r<0)&&(r=0),r>this.length||((void 0===s||s>this.length)&&(s=this.length),s<=0||(s>>>=0)<=(r>>>=0)))return"";for(t||(t="utf8");;)switch(t){case"hex":return function(t,r,s){var i=t.length;(!r||r<0)&&(r=0),(!s||s<0||s>i)&&(s=i);for(var n="",a=r;a<s;++a)n+=eL[t[a]];return n}(this,r,s);case"utf8":case"utf-8":return ez(this,r,s);case"ascii":return function(t,r,s){var i="";s=Math.min(t.length,s);for(var n=r;n<s;++n)i+=String.fromCharCode(127&t[n]);return i}(this,r,s);case"latin1":case"binary":return function(t,r,s){var i="";s=Math.min(t.length,s);for(var n=r;n<s;++n)i+=String.fromCharCode(t[n]);return i}(this,r,s);case"base64":return i=r,n=s,0===i&&n===this.length?m(this):m(this.slice(i,n));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(t,r,s){for(var i=t.slice(r,s),n="",a=0;a<i.length-1;a+=2)n+=String.fromCharCode(i[a]+256*i[a+1]);return n}(this,r,s);default:if(a)throw TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),a=!0}}function ek(t,r,s){var i=t[r];t[r]=t[s],t[s]=i}function eE(t,r,s,i,n){var a;if(0===t.length)return -1;if("string"==typeof s?(i=s,s=0):s>0x7fffffff?s=0x7fffffff:s<-0x80000000&&(s=-0x80000000),(a=s=+s)!=a&&(s=n?0:t.length-1),s<0&&(s=t.length+s),s>=t.length){if(n)return -1;s=t.length-1}else if(s<0){if(!n)return -1;s=0}if("string"==typeof r&&(r=em.from(r,i)),em.isBuffer(r))return 0===r.length?-1:eS(t,r,s,i,n);if("number"==typeof r)return(r&=255,"function"==typeof Uint8Array.prototype.indexOf)?n?Uint8Array.prototype.indexOf.call(t,r,s):Uint8Array.prototype.lastIndexOf.call(t,r,s):eS(t,[r],s,i,n);throw TypeError("val must be string, number or Buffer")}function eS(t,r,s,i,n){var a,o=1,l=t.length,u=r.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(t.length<2||r.length<2)return -1;o=2,l/=2,u/=2,s/=2}function d(t,r){return 1===o?t[r]:t.readUInt16BE(r*o)}if(n){var c=-1;for(a=s;a<l;a++)if(d(t,a)===d(r,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*o}else -1!==c&&(a-=a-c),c=-1}else for(s+u>l&&(s=l-u),a=s;a>=0;a--){for(var p=!0,h=0;h<u;h++)if(d(t,a+h)!==d(r,h)){p=!1;break}if(p)return a}return -1}function ez(t,r,s){s=Math.min(t.length,s);for(var i=[],n=r;n<s;){var a,o,l,u,d=t[n],c=null,p=d>239?4:d>223?3:d>191?2:1;if(n+p<=s)switch(p){case 1:d<128&&(c=d);break;case 2:(192&(a=t[n+1]))==128&&(u=(31&d)<<6|63&a)>127&&(c=u);break;case 3:a=t[n+1],o=t[n+2],(192&a)==128&&(192&o)==128&&(u=(15&d)<<12|(63&a)<<6|63&o)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=t[n+1],o=t[n+2],l=t[n+3],(192&a)==128&&(192&o)==128&&(192&l)==128&&(u=(15&d)<<18|(63&a)<<12|(63&o)<<6|63&l)>65535&&u<1114112&&(c=u)}null===c?(c=65533,p=1):c>65535&&(c-=65536,i.push(c>>>10&1023|55296),c=56320|1023&c),i.push(c),n+=p}return function(t){var r=t.length;if(r<=4096)return String.fromCharCode.apply(String,t);for(var s="",i=0;i<r;)s+=String.fromCharCode.apply(String,t.slice(i,i+=4096));return s}(i)}function eT(t,r,s){if(t%1!=0||t<0)throw RangeError("offset is not uint");if(t+r>s)throw RangeError("Trying to access beyond buffer length")}function eI(t,r,s,i,n,a){if(!em.isBuffer(t))throw TypeError('"buffer" argument must be a Buffer instance');if(r>n||r<a)throw RangeError('"value" argument is out of bounds');if(s+i>t.length)throw RangeError("Index out of range")}function eC(t,r,s,i,n,a){if(s+i>t.length||s<0)throw RangeError("Index out of range")}function eA(t,r,s,i,n){return r=+r,s>>>=0,n||eC(t,r,s,4,34028234663852886e22,-34028234663852886e22),g(t,r,s,i,23,4),s+4}function eM(t,r,s,i,n){return r=+r,s>>>=0,n||eC(t,r,s,8,17976931348623157e292,-17976931348623157e292),g(t,r,s,i,52,8),s+8}em.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),r={foo:function(){return 42}};return Object.setPrototypeOf(r,Uint8Array.prototype),Object.setPrototypeOf(t,r),42===t.foo()}catch(t){return!1}}(),em.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(em.prototype,"parent",{enumerable:!0,get:function(){if(em.isBuffer(this))return this.buffer}}),Object.defineProperty(em.prototype,"offset",{enumerable:!0,get:function(){if(em.isBuffer(this))return this.byteOffset}}),em.poolSize=8192,em.from=function(t,r,s){return e_(t,r,s)},Object.setPrototypeOf(em.prototype,Uint8Array.prototype),Object.setPrototypeOf(em,Uint8Array),em.alloc=function(t,r,s){return(eg(t),t<=0)?ef(t):void 0!==r?"string"==typeof s?ef(t).fill(r,s):ef(t).fill(r):ef(t)},em.allocUnsafe=function(t){return ey(t)},em.allocUnsafeSlow=function(t){return ey(t)},em.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==em.prototype},em.compare=function(t,r){if(eD(t,Uint8Array)&&(t=em.from(t,t.offset,t.byteLength)),eD(r,Uint8Array)&&(r=em.from(r,r.offset,r.byteLength)),!em.isBuffer(t)||!em.isBuffer(r))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===r)return 0;for(var s=t.length,i=r.length,n=0,a=Math.min(s,i);n<a;++n)if(t[n]!==r[n]){s=t[n],i=r[n];break}return s<i?-1:i<s?1:0},em.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},em.concat=function(t,r){if(!Array.isArray(t))throw TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return em.alloc(0);if(void 0===r)for(s=0,r=0;s<t.length;++s)r+=t[s].length;var s,i=em.allocUnsafe(r),n=0;for(s=0;s<t.length;++s){var a=t[s];if(eD(a,Uint8Array))n+a.length>i.length?em.from(a).copy(i,n):Uint8Array.prototype.set.call(i,a,n);else if(em.isBuffer(a))a.copy(i,n);else throw TypeError('"list" argument must be an Array of Buffers');n+=a.length}return i},em.byteLength=ev,em.prototype._isBuffer=!0,em.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(var r=0;r<t;r+=2)ek(this,r,r+1);return this},em.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(var r=0;r<t;r+=4)ek(this,r,r+3),ek(this,r+1,r+2);return this},em.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(var r=0;r<t;r+=8)ek(this,r,r+7),ek(this,r+1,r+6),ek(this,r+2,r+5),ek(this,r+3,r+4);return this},em.prototype.toString=function(){var t=this.length;return 0===t?"":0==arguments.length?ez(this,0,t):e$.apply(this,arguments)},em.prototype.toLocaleString=em.prototype.toString,em.prototype.equals=function(t){if(!em.isBuffer(t))throw TypeError("Argument must be a Buffer");return this===t||0===em.compare(this,t)},em.prototype.inspect=function(){var t="";return t=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(t+=" ... "),"<Buffer "+t+">"},eh&&(em.prototype[eh]=em.prototype.inspect),em.prototype.compare=function(t,r,s,i,n){if(eD(t,Uint8Array)&&(t=em.from(t,t.offset,t.byteLength)),!em.isBuffer(t))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===r&&(r=0),void 0===s&&(s=t?t.length:0),void 0===i&&(i=0),void 0===n&&(n=this.length),r<0||s>t.length||i<0||n>this.length)throw RangeError("out of range index");if(i>=n&&r>=s)return 0;if(i>=n)return -1;if(r>=s)return 1;if(r>>>=0,s>>>=0,i>>>=0,n>>>=0,this===t)return 0;for(var a=n-i,o=s-r,l=Math.min(a,o),u=this.slice(i,n),d=t.slice(r,s),c=0;c<l;++c)if(u[c]!==d[c]){a=u[c],o=d[c];break}return a<o?-1:o<a?1:0},em.prototype.includes=function(t,r,s){return -1!==this.indexOf(t,r,s)},em.prototype.indexOf=function(t,r,s){return eE(this,t,r,s,!0)},em.prototype.lastIndexOf=function(t,r,s){return eE(this,t,r,s,!1)},em.prototype.write=function(t,r,s,i){if(void 0===r)i="utf8",s=this.length,r=0;else if(void 0===s&&"string"==typeof r)i=r,s=this.length,r=0;else if(isFinite(r))r>>>=0,isFinite(s)?(s>>>=0,void 0===i&&(i="utf8")):(i=s,s=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var n,a,o,l,u,d,c,p,h=this.length-r;if((void 0===s||s>h)&&(s=h),t.length>0&&(s<0||r<0)||r>this.length)throw RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var f=!1;;)switch(i){case"hex":return function(t,r,s,i){s=Number(s)||0;var n=t.length-s;i?(i=Number(i))>n&&(i=n):i=n;var a=r.length;i>a/2&&(i=a/2);for(var o=0;o<i;++o){var l=parseInt(r.substr(2*o,2),16);if(l!=l)break;t[s+o]=l}return o}(this,t,r,s);case"utf8":case"utf-8":return n=r,a=s,eR(eB(t,this.length-n),this,n,a);case"ascii":case"latin1":case"binary":return o=r,l=s,eR(function(t){for(var r=[],s=0;s<t.length;++s)r.push(255&t.charCodeAt(s));return r}(t),this,o,l);case"base64":return u=r,d=s,eR(eP(t),this,u,d);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return c=r,p=s,eR(function(t,r){for(var s,i,n=[],a=0;a<t.length&&!((r-=2)<0);++a)i=(s=t.charCodeAt(a))>>8,n.push(s%256),n.push(i);return n}(t,this.length-c),this,c,p);default:if(f)throw TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),f=!0}},em.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},em.prototype.slice=function(t,r){var s=this.length;t=~~t,r=void 0===r?s:~~r,t<0?(t+=s)<0&&(t=0):t>s&&(t=s),r<0?(r+=s)<0&&(r=0):r>s&&(r=s),r<t&&(r=t);var i=this.subarray(t,r);return Object.setPrototypeOf(i,em.prototype),i},em.prototype.readUintLE=em.prototype.readUIntLE=function(t,r,s){t>>>=0,r>>>=0,s||eT(t,r,this.length);for(var i=this[t],n=1,a=0;++a<r&&(n*=256);)i+=this[t+a]*n;return i},em.prototype.readUintBE=em.prototype.readUIntBE=function(t,r,s){t>>>=0,r>>>=0,s||eT(t,r,this.length);for(var i=this[t+--r],n=1;r>0&&(n*=256);)i+=this[t+--r]*n;return i},em.prototype.readUint8=em.prototype.readUInt8=function(t,r){return t>>>=0,r||eT(t,1,this.length),this[t]},em.prototype.readUint16LE=em.prototype.readUInt16LE=function(t,r){return t>>>=0,r||eT(t,2,this.length),this[t]|this[t+1]<<8},em.prototype.readUint16BE=em.prototype.readUInt16BE=function(t,r){return t>>>=0,r||eT(t,2,this.length),this[t]<<8|this[t+1]},em.prototype.readUint32LE=em.prototype.readUInt32LE=function(t,r){return t>>>=0,r||eT(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+0x1000000*this[t+3]},em.prototype.readUint32BE=em.prototype.readUInt32BE=function(t,r){return t>>>=0,r||eT(t,4,this.length),0x1000000*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},em.prototype.readIntLE=function(t,r,s){t>>>=0,r>>>=0,s||eT(t,r,this.length);for(var i=this[t],n=1,a=0;++a<r&&(n*=256);)i+=this[t+a]*n;return i>=(n*=128)&&(i-=Math.pow(2,8*r)),i},em.prototype.readIntBE=function(t,r,s){t>>>=0,r>>>=0,s||eT(t,r,this.length);for(var i=r,n=1,a=this[t+--i];i>0&&(n*=256);)a+=this[t+--i]*n;return a>=(n*=128)&&(a-=Math.pow(2,8*r)),a},em.prototype.readInt8=function(t,r){return(t>>>=0,r||eT(t,1,this.length),128&this[t])?-((255-this[t]+1)*1):this[t]},em.prototype.readInt16LE=function(t,r){t>>>=0,r||eT(t,2,this.length);var s=this[t]|this[t+1]<<8;return 32768&s?0xffff0000|s:s},em.prototype.readInt16BE=function(t,r){t>>>=0,r||eT(t,2,this.length);var s=this[t+1]|this[t]<<8;return 32768&s?0xffff0000|s:s},em.prototype.readInt32LE=function(t,r){return t>>>=0,r||eT(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},em.prototype.readInt32BE=function(t,r){return t>>>=0,r||eT(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},em.prototype.readFloatLE=function(t,r){return t>>>=0,r||eT(t,4,this.length),_(this,t,!0,23,4)},em.prototype.readFloatBE=function(t,r){return t>>>=0,r||eT(t,4,this.length),_(this,t,!1,23,4)},em.prototype.readDoubleLE=function(t,r){return t>>>=0,r||eT(t,8,this.length),_(this,t,!0,52,8)},em.prototype.readDoubleBE=function(t,r){return t>>>=0,r||eT(t,8,this.length),_(this,t,!1,52,8)},em.prototype.writeUintLE=em.prototype.writeUIntLE=function(t,r,s,i){if(t=+t,r>>>=0,s>>>=0,!i){var n=Math.pow(2,8*s)-1;eI(this,t,r,s,n,0)}var a=1,o=0;for(this[r]=255&t;++o<s&&(a*=256);)this[r+o]=t/a&255;return r+s},em.prototype.writeUintBE=em.prototype.writeUIntBE=function(t,r,s,i){if(t=+t,r>>>=0,s>>>=0,!i){var n=Math.pow(2,8*s)-1;eI(this,t,r,s,n,0)}var a=s-1,o=1;for(this[r+a]=255&t;--a>=0&&(o*=256);)this[r+a]=t/o&255;return r+s},em.prototype.writeUint8=em.prototype.writeUInt8=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,1,255,0),this[r]=255&t,r+1},em.prototype.writeUint16LE=em.prototype.writeUInt16LE=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,2,65535,0),this[r]=255&t,this[r+1]=t>>>8,r+2},em.prototype.writeUint16BE=em.prototype.writeUInt16BE=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,2,65535,0),this[r]=t>>>8,this[r+1]=255&t,r+2},em.prototype.writeUint32LE=em.prototype.writeUInt32LE=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,4,0xffffffff,0),this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t,r+4},em.prototype.writeUint32BE=em.prototype.writeUInt32BE=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,4,0xffffffff,0),this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t,r+4},em.prototype.writeIntLE=function(t,r,s,i){if(t=+t,r>>>=0,!i){var n=Math.pow(2,8*s-1);eI(this,t,r,s,n-1,-n)}var a=0,o=1,l=0;for(this[r]=255&t;++a<s&&(o*=256);)t<0&&0===l&&0!==this[r+a-1]&&(l=1),this[r+a]=(t/o>>0)-l&255;return r+s},em.prototype.writeIntBE=function(t,r,s,i){if(t=+t,r>>>=0,!i){var n=Math.pow(2,8*s-1);eI(this,t,r,s,n-1,-n)}var a=s-1,o=1,l=0;for(this[r+a]=255&t;--a>=0&&(o*=256);)t<0&&0===l&&0!==this[r+a+1]&&(l=1),this[r+a]=(t/o>>0)-l&255;return r+s},em.prototype.writeInt8=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,1,127,-128),t<0&&(t=255+t+1),this[r]=255&t,r+1},em.prototype.writeInt16LE=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,2,32767,-32768),this[r]=255&t,this[r+1]=t>>>8,r+2},em.prototype.writeInt16BE=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,2,32767,-32768),this[r]=t>>>8,this[r+1]=255&t,r+2},em.prototype.writeInt32LE=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,4,0x7fffffff,-0x80000000),this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24,r+4},em.prototype.writeInt32BE=function(t,r,s){return t=+t,r>>>=0,s||eI(this,t,r,4,0x7fffffff,-0x80000000),t<0&&(t=0xffffffff+t+1),this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t,r+4},em.prototype.writeFloatLE=function(t,r,s){return eA(this,t,r,!0,s)},em.prototype.writeFloatBE=function(t,r,s){return eA(this,t,r,!1,s)},em.prototype.writeDoubleLE=function(t,r,s){return eM(this,t,r,!0,s)},em.prototype.writeDoubleBE=function(t,r,s){return eM(this,t,r,!1,s)},em.prototype.copy=function(t,r,s,i){if(!em.isBuffer(t))throw TypeError("argument should be a Buffer");if(s||(s=0),i||0===i||(i=this.length),r>=t.length&&(r=t.length),r||(r=0),i>0&&i<s&&(i=s),i===s||0===t.length||0===this.length)return 0;if(r<0)throw RangeError("targetStart out of bounds");if(s<0||s>=this.length)throw RangeError("Index out of range");if(i<0)throw RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),t.length-r<i-s&&(i=t.length-r+s);var n=i-s;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(r,s,i):Uint8Array.prototype.set.call(t,this.subarray(s,i),r),n},em.prototype.fill=function(t,r,s,i){if("string"==typeof t){if("string"==typeof r?(i=r,r=0,s=this.length):"string"==typeof s&&(i=s,s=this.length),void 0!==i&&"string"!=typeof i)throw TypeError("encoding must be a string");if("string"==typeof i&&!em.isEncoding(i))throw TypeError("Unknown encoding: "+i);if(1===t.length){var n,a=t.charCodeAt(0);("utf8"===i&&a<128||"latin1"===i)&&(t=a)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(r<0||this.length<r||this.length<s)throw RangeError("Out of range index");if(s<=r)return this;if(r>>>=0,s=void 0===s?this.length:s>>>0,t||(t=0),"number"==typeof t)for(n=r;n<s;++n)this[n]=t;else{var o=em.isBuffer(t)?t:em.from(t,i),l=o.length;if(0===l)throw TypeError('The value "'+t+'" is invalid for argument "value"');for(n=0;n<s-r;++n)this[n+r]=o[n%l]}return this};var eO=/[^+/0-9A-Za-z-_]/g;function eB(t,r){r=r||1/0;for(var s,i=t.length,n=null,a=[],o=0;o<i;++o){if((s=t.charCodeAt(o))>55295&&s<57344){if(!n){if(s>56319||o+1===i){(r-=3)>-1&&a.push(239,191,189);continue}n=s;continue}if(s<56320){(r-=3)>-1&&a.push(239,191,189),n=s;continue}s=(n-55296<<10|s-56320)+65536}else n&&(r-=3)>-1&&a.push(239,191,189);if(n=null,s<128){if((r-=1)<0)break;a.push(s)}else if(s<2048){if((r-=2)<0)break;a.push(s>>6|192,63&s|128)}else if(s<65536){if((r-=3)<0)break;a.push(s>>12|224,s>>6&63|128,63&s|128)}else if(s<1114112){if((r-=4)<0)break;a.push(s>>18|240,s>>12&63|128,s>>6&63|128,63&s|128)}else throw Error("Invalid code point")}return a}function eP(t){return f(function(t){if((t=(t=t.split("=")[0]).trim().replace(eO,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function eR(t,r,s,i){for(var n=0;n<i&&!(n+s>=r.length)&&!(n>=t.length);++n)r[n+s]=t[n];return n}function eD(t,r){return t instanceof r||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===r.name}var eL=function(){for(var t="0123456789abcdef",r=Array(256),s=0;s<16;++s)for(var i=16*s,n=0;n<16;++n)r[i+n]=t[s]+t[n];return r}();const eN={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class eU{constructor(t){if(this.filePath=t,this.headers=new Headers,this.exists=l($).existsSync(t),this.exists){this.status=200,this.statusText="OK";let r=l($).statSync(t);this.headers.set("content-length",r.size.toString()),this.updateContentType();let s=this;this.body=new ReadableStream({start(t){s.arrayBuffer().then(r=>{t.enqueue(new Uint8Array(r)),t.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){let t=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",eN[t]??"application/octet-stream")}clone(){let t=new eU(this.filePath);return t.exists=this.exists,t.status=this.status,t.statusText=this.statusText,t.headers=new Headers(this.headers),t}async arrayBuffer(){return(await l($).promises.readFile(this.filePath)).buffer}async blob(){return new Blob([await l($).promises.readFile(this.filePath)],{type:this.headers.get("content-type")})}async text(){return await l($).promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function eF(t,r=null,s=null){let i;try{i=new URL(t)}catch(t){return!1}return(!r||!!r.includes(i.protocol))&&(!s||!!s.includes(i.hostname))}async function eq(t){if(Z.useFS&&!eF(t,["http:","https:","blob:"]))return new eU(t);if(void 0===E||E?.release?.name!=="node")return fetch(t);{let r=!!E.env?.TESTING_REMOTELY,s=Z.version,i=new Headers;if(i.set("User-Agent",`transformers.js/${s}; is_ci/${r};`),eF(t,["http:","https:"],["huggingface.co","hf.co"])){let t=E.env?.HF_TOKEN??E.env?.HF_ACCESS_TOKEN;t&&i.set("Authorization",`Bearer ${t}`)}return fetch(t,{headers:i})}}const eV={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class ej{constructor(t){this.path=t}async match(t){let r=new eU(l($).join(this.path,t));return r.exists?r:void 0}async put(t,r){let s=em.from(await r.arrayBuffer()),i=l($).join(this.path,t);try{await l($).promises.mkdir(l($).dirname(i),{recursive:!0}),await l($).promises.writeFile(i,s)}catch(t){console.warn("An error occurred while writing the file to cache:",t)}}}async function eG(t,...r){for(let s of r)try{let r=await t.match(s);if(r)return r}catch(t){continue}}async function eW(t,r,s=!0,i={}){var n,a,o,l,u,d,c,p;let h,f,m,_;if(!Z.allowLocalModels){if(i.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!Z.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}if(n=i.progress_callback,a={status:"initiate",name:t,file:r},n&&n(a),!h&&Z.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{h=await caches.open("transformers-cache")}catch(t){console.warn("An error occurred while opening the browser cache:",t)}}if(!h&&Z.useFSCache&&(h=new ej(i.cache_dir??Z.cacheDir)),!h&&Z.useCustomCache){if(!Z.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!Z.customCache.match||!Z.customCache.put)throw Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");h=Z.customCache}let g=i.revision??"main",y=eX(t,r),w=eX(Z.localModelPath,y),b=eX(Z.remoteHost,Z.remotePathTemplate.replaceAll("{model}",t).replaceAll("{revision}",encodeURIComponent(g)),r),x="main"===g?y:eX(t,g,r),v=h instanceof ej?x:b,$=!1;h&&(m=await eG(h,w,v));let k=void 0!==m;if(void 0===m){if(Z.allowLocalModels){if(eF(y,["http:","https:"])){if(i.local_files_only)throw Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${y}.`);if(!Z.allowRemoteModels)throw Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${y}.`)}else try{m=await eq(w),f=w}catch(t){console.warn(`Unable to load from local path "${w}": "${t}"`)}}if(void 0===m||404===m.status){if(i.local_files_only||!Z.allowRemoteModels){if(!s)return null;throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${w}".`)}if(200!==(m=await eq(b)).status)return function(t,r,s){if(!s)return null;let i=eV[t]??`Error (${t}) occurred while trying to load file`;throw Error(`${i}: "${r}".`)}(m.status,b,s);f=v}$=h&&"undefined"!=typeof Response&&m instanceof Response&&200===m.status}return(o=i.progress_callback,l={status:"download",name:t,file:r},o&&o(l),i.progress_callback)?k&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(_=new Uint8Array(await m.arrayBuffer()),u=i.progress_callback,d={status:"progress",name:t,file:r,progress:100,loaded:_.length,total:_.length},u&&u(d)):_=await eK(m,s=>{var n,a;n=i.progress_callback,a={status:"progress",name:t,file:r,...s},n&&n(a)}):_=new Uint8Array(await m.arrayBuffer()),$&&f&&await h.match(f)===void 0&&await h.put(f,new Response(_,{headers:m.headers})).catch(t=>{console.warn(`Unable to add response to browser cache: ${t}.`)}),c=i.progress_callback,p={status:"done",name:t,file:r},c&&c(p),_}async function eH(t,r,s=!0,i={}){let n=await eW(t,r,s,i);return null===n?{}:JSON.parse(new TextDecoder("utf-8").decode(n))}async function eK(t,r){let s=t.headers.get("Content-Length");null===s&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let i=parseInt(s??"0"),n=new Uint8Array(i),a=0,o=t.body.getReader();async function l(){let{done:t,value:s}=await o.read();if(t)return;let u=a+s.length;if(u>i){let t=new Uint8Array(i=u);t.set(n),n=t}return n.set(s,a),r({progress:(a=u)/i*100,loaded:a,total:i}),l()}return await l(),n}function eX(...t){return(t=t.map((r,s)=>(s&&(r=r.replace(RegExp("^/"),"")),s!==t.length-1&&(r=r.replace(RegExp("/$"),"")),r))).join("/")}function eY(t){let r=eZ(t)[0],s=t.map(t=>Math.exp(t-r)),i=s.reduce((t,r)=>t+r,0);return s.map(t=>t/i)}function eQ(t){if(0===t.length)throw Error("Array must not be empty");let r=t[0],s=0;for(let i=1;i<t.length;++i)t[i]<r&&(r=t[i],s=i);return[r,s]}function eZ(t){if(0===t.length)throw Error("Array must not be empty");let r=t[0],s=0;for(let i=1;i<t.length;++i)t[i]>r&&(r=t[i],s=i);return[Number(r),s]}function eJ(t){return t>0&&(t&t-1)==0}class e0{constructor(t){if(this.size=0|t,this.size<=1||!eJ(this.size))throw Error("FFT size must be a power of two larger than 1");this._csize=t<<1,this.table=new Float64Array(2*this.size);for(let t=0;t<this.table.length;t+=2){let r=Math.PI*t/this.size;this.table[t]=Math.cos(r),this.table[t+1]=-Math.sin(r)}let r=0;for(let t=1;this.size>t;t<<=1)++r;this._width=r%2==0?r-1:r,this._bitrev=new Int32Array(1<<this._width);for(let t=0;t<this._bitrev.length;++t){this._bitrev[t]=0;for(let r=0;r<this._width;r+=2){let s=this._width-r-2;this._bitrev[t]|=(t>>>r&3)<<s}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(t,r){let s=r||Array(t.length>>>1);for(let r=0;r<t.length;r+=2)s[r>>>1]=t[r];return s}toComplexArray(t,r){let s=r||this.createComplexArray();for(let r=0;r<s.length;r+=2)s[r]=t[r>>>1],s[r+1]=0;return s}transform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._transform4(t,r,1)}realTransform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._realTransform4(t,r,1)}inverseTransform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._transform4(t,r,-1);for(let r=0;r<t.length;++r)t[r]/=this.size}_transform4(t,r,s){let i,n;let a=this._csize,o=1<<this._width,l=a/o<<1,u=this._bitrev;if(4===l)for(i=0,n=0;i<a;i+=l,++n){let s=u[n];this._singleTransform2(r,t,i,s,o)}else for(i=0,n=0;i<a;i+=l,++n){let a=u[n];this._singleTransform4(r,t,i,a,o,s)}let d=this.table;for(o>>=2;o>=2;o>>=2){let r=(l=a/o<<1)>>>2;for(i=0;i<a;i+=l){let n=i+r-1;for(let a=i,l=0;a<n;a+=2,l+=o){let i=a,n=i+r,o=n+r,u=o+r,c=t[i],p=t[i+1],h=t[n],f=t[n+1],m=t[o],_=t[o+1],g=t[u],y=t[u+1],w=d[l],b=s*d[l+1],x=h*w-f*b,v=h*b+f*w,$=d[2*l],k=s*d[2*l+1],E=m*$-_*k,S=m*k+_*$,z=d[3*l],T=s*d[3*l+1],I=g*z-y*T,C=g*T+y*z,A=c+E,M=p+S,O=c-E,B=p-S,P=x+I,R=v+C,D=s*(x-I),L=s*(v-C);t[i]=A+P,t[i+1]=M+R,t[n]=O+L,t[n+1]=B-D,t[o]=A-P,t[o+1]=M-R,t[u]=O-L,t[u+1]=B+D}}}}_singleTransform2(t,r,s,i,n){let a=t[i],o=t[i+1],l=t[i+n],u=t[i+n+1];r[s]=a+l,r[s+1]=o+u,r[s+2]=a-l,r[s+3]=o-u}_singleTransform4(t,r,s,i,n,a){let o=2*n,l=3*n,u=t[i],d=t[i+1],c=t[i+n],p=t[i+n+1],h=t[i+o],f=t[i+o+1],m=t[i+l],_=t[i+l+1],g=u+h,y=d+f,w=u-h,b=d-f,x=c+m,v=p+_,$=a*(c-m),k=a*(p-_);r[s]=g+x,r[s+1]=y+v,r[s+2]=w+k,r[s+3]=b-$,r[s+4]=g-x,r[s+5]=y-v,r[s+6]=w-k,r[s+7]=b+$}_realTransform4(t,r,s){let i,n;let a=this._csize,o=1<<this._width,l=a/o<<1,u=this._bitrev;if(4===l)for(i=0,n=0;i<a;i+=l,++n){let s=u[n];this._singleRealTransform2(r,t,i,s>>>1,o>>>1)}else for(i=0,n=0;i<a;i+=l,++n){let a=u[n];this._singleRealTransform4(r,t,i,a>>>1,o>>>1,s)}let d=this.table;for(o>>=2;o>=2;o>>=2){let r=(l=a/o<<1)>>>1,n=r>>>1,u=n>>>1;for(i=0;i<a;i+=l)for(let a=0,l=0;a<=u;a+=2,l+=o){let o=i+a,c=o+n,p=c+n,h=p+n,f=t[o],m=t[o+1],_=t[c],g=t[c+1],y=t[p],w=t[p+1],b=t[h],x=t[h+1],v=d[l],$=s*d[l+1],k=_*v-g*$,E=_*$+g*v,S=d[2*l],z=s*d[2*l+1],T=y*S-w*z,I=y*z+w*S,C=d[3*l],A=s*d[3*l+1],M=b*C-x*A,O=b*A+x*C,B=f+T,P=m+I,R=f-T,D=m-I,L=k+M,N=E+O,U=s*(k-M),F=s*(E-O);if(t[o]=B+L,t[o+1]=P+N,t[c]=R+F,t[c+1]=D-U,0===a){t[p]=B-L,t[p+1]=P-N;continue}if(a===u)continue;let q=i+n-a,V=i+r-a;t[q]=R-s*F,t[q+1]=-D-s*U,t[V]=B-s*L,t[V+1]=-P+s*N}}let c=a>>>1;for(let r=2;r<c;r+=2)t[a-r]=t[r],t[a-r+1]=-t[r+1]}_singleRealTransform2(t,r,s,i,n){let a=t[i],o=t[i+n];r[s]=a+o,r[s+1]=0,r[s+2]=a-o,r[s+3]=0}_singleRealTransform4(t,r,s,i,n,a){let o=t[i],l=t[i+n],u=t[i+2*n],d=t[i+3*n],c=o+u,p=o-u,h=l+d,f=a*(l-d);r[s]=c+h,r[s+1]=0,r[s+2]=p,r[s+3]=-f,r[s+4]=c-h,r[s+5]=0,r[s+6]=p,r[s+7]=f}}class e1{constructor(t){let r=2*(t-1),s=2*(2*t-1),i=2**Math.ceil(Math.log2(s));this.bufferSize=i,this._a=r;let n=new Float64Array(s),a=new Float64Array(i);this._chirpBuffer=new Float64Array(i),this._buffer1=new Float64Array(i),this._buffer2=new Float64Array(i),this._outBuffer1=new Float64Array(i),this._outBuffer2=new Float64Array(i);let o=-2*Math.PI/t,l=Math.cos(o),u=Math.sin(o);for(let r=0;r<s>>1;++r){let s=(r+1-t)**2/2,i=Math.sqrt(l**2+u**2)**s,o=s*Math.atan2(u,l),d=2*r;n[d]=i*Math.cos(o),n[d+1]=i*Math.sin(o),a[d]=n[d],a[d+1]=-n[d+1]}this._slicedChirpBuffer=n.subarray(r,s),this._f=new e0(i>>1),this._f.transform(this._chirpBuffer,a)}_transform(t,r,s){let i=this._buffer1,n=this._buffer2,a=this._outBuffer1,o=this._outBuffer2,l=this._chirpBuffer,u=this._slicedChirpBuffer,d=this._a;if(s)for(let t=0;t<u.length;t+=2){let s=t+1,n=r[t>>1];i[t]=n*u[t],i[s]=n*u[s]}else for(let t=0;t<u.length;t+=2){let s=t+1;i[t]=r[t]*u[t]-r[s]*u[s],i[s]=r[t]*u[s]+r[s]*u[t]}this._f.transform(a,i);for(let t=0;t<l.length;t+=2){let r=t+1;n[t]=a[t]*l[t]-a[r]*l[r],n[r]=a[t]*l[r]+a[r]*l[t]}this._f.inverseTransform(o,n);for(let r=0;r<o.length;r+=2){let s=o[r+d],i=o[r+d+1],n=u[r],a=u[r+1];t[r]=s*n-i*a,t[r+1]=s*a+i*n}}transform(t,r){this._transform(t,r,!1)}realTransform(t,r){this._transform(t,r,!0)}}class e2{constructor(t){this.fft_length=t,this.isPowerOfTwo=eJ(t),this.isPowerOfTwo?(this.fft=new e0(t),this.outputBufferSize=2*t):(this.fft=new e1(t),this.outputBufferSize=this.fft.bufferSize)}realTransform(t,r){this.fft.realTransform(t,r)}transform(t,r){this.fft.transform(t,r)}}function e3(t,r){let s=Math.pow(10,r);return Math.round(t*s)/s}var e4={};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */e4=(()=>{var t,r,s,i,n,a,o,l,u,d,c,p,h,f,m,_,g,y,w,b,x,v,$,k,E,S,z,T,I,C,A,M=Object.defineProperty,O=Object.getOwnPropertyDescriptor,B=Object.getOwnPropertyNames,P=Object.prototype.hasOwnProperty,R=void 0,D=(t,r)=>()=>(t&&(r=t(t=0)),r),L=(t,r)=>{for(var s in r)M(t,s,{get:r[s],enumerable:!0})},N=(t,r,s,i)=>{if(r&&"object"==typeof r||"function"==typeof r)for(let n of B(r))P.call(t,n)||n===s||M(t,n,{get:()=>r[n],enumerable:!(i=O(r,n))||i.enumerable});return t},U=t=>N(M({},"__esModule",{value:!0}),t),F=D(()=>{t=new Map,r=[],s=(s,i,n)=>{if(i&&"function"==typeof i.init&&"function"==typeof i.createInferenceSessionHandler){let a=t.get(s);if(void 0===a)t.set(s,{backend:i,priority:n});else{if(a.priority>n)return;if(a.priority===n&&a.backend!==i)throw Error(`cannot register backend "${s}" using priority ${n}`)}if(n>=0){let i=r.indexOf(s);-1!==i&&r.splice(i,1);for(let i=0;i<r.length;i++)if(t.get(r[i]).priority<=n){r.splice(i,0,s);return}r.push(s)}return}throw TypeError("not a valid backend")},i=async r=>{let s=t.get(r);if(!s)return"backend not found.";if(s.initialized)return s.backend;if(s.aborted)return s.error;{let t=!!s.initPromise;try{return t||(s.initPromise=s.backend.init(r)),await s.initPromise,s.initialized=!0,s.backend}catch(r){return t||(s.error=`${r}`,s.aborted=!0),s.error}finally{delete s.initPromise}}},n=async t=>{let s=t.executionProviders||[],n=s.map(t=>"string"==typeof t?t:t.name),a=0===n.length?r:n,o,l=[],u=new Set;for(let t of a){let r=await i(t);"string"==typeof r?l.push({name:t,err:r}):(o||(o=r),o===r&&u.add(t))}if(!o)throw Error(`no available backend found. ERR: ${l.map(t=>`[${t.name}] ${t.err}`).join(", ")}`);for(let{name:t,err:r}of l)n.includes(t)&&console.warn(`removing requested execution provider "${t}" from session options because it is not available: ${r}`);let d=s.filter(t=>u.has("string"==typeof t?t:t.name));return[o,new Proxy(t,{get:(t,r)=>"executionProviders"===r?d:Reflect.get(t,r)})]}}),q=D(()=>{F()}),V=D(()=>{a="1.21.0-dev.20241205-6ed77cc374"}),j=D(()=>{V(),o="warning",Object.defineProperty(l={wasm:{},webgl:{},webgpu:{},versions:{common:a},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw Error(`Unsupported logging level: ${e}`);o=e}},get logLevel(){return o}},"logLevel",{enumerable:!0})}),G=D(()=>{j(),u=l}),W=D(()=>{d=(t,r)=>{let s="u">typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=t.dims[3],s.height=t.dims[2];let i=s.getContext("2d");if(null!=i){let n,a;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(n=t.dims[2],a=t.dims[3]):(n=t.dims[3],a=t.dims[2]);let o=r?.format!==void 0?r.format:"RGB",l=r?.norm,u,d;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],0],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));let c=a*n,p=0,h=c,f=2*c,m=-1;"RGBA"===o?(p=0,h=c,f=2*c,m=3*c):"RGB"===o?(p=0,h=c,f=2*c):"RBG"===o&&(p=0,f=c,h=2*c);for(let r=0;r<a;r++)for(let s=0;s<n;s++){let n=(t.data[p++]-d[0])*u[0],a=(t.data[h++]-d[1])*u[1],o=(t.data[f++]-d[2])*u[2],l=-1===m?255:(t.data[m++]-d[3])*u[3];i.fillStyle="rgba("+n+","+a+","+o+","+l+")",i.fillRect(s,r,1,1)}if("toDataURL"in s)return s.toDataURL();throw Error("toDataURL is not supported")}throw Error("Can not access image data")},c=(t,r)=>{let s="u">typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),i;if(null!=s){let n,a,o;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(n=t.dims[2],a=t.dims[1],o=t.dims[3]):(n=t.dims[3],a=t.dims[2],o=t.dims[1]);let l=void 0!==r&&void 0!==r.format?r.format:"RGB",u=r?.norm,d,c;void 0===u||void 0===u.mean?d=[255,255,255,255]:"number"==typeof u.mean?d=[u.mean,u.mean,u.mean,u.mean]:(d=[u.mean[0],u.mean[1],u.mean[2],255],void 0!==u.mean[3]&&(d[3]=u.mean[3])),void 0===u||void 0===u.bias?c=[0,0,0,0]:"number"==typeof u.bias?c=[u.bias,u.bias,u.bias,u.bias]:(c=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(c[3]=u.bias[3]));let p=a*n;if(void 0!==r&&(void 0!==r.format&&4===o&&"RGBA"!==r.format||3===o&&"RGB"!==r.format&&"BGR"!==r.format))throw Error("Tensor format doesn't match input tensor dims");let h=0,f=1,m=2,_=3,g=0,y=p,w=2*p,b=-1;"RGBA"===l?(g=0,y=p,w=2*p,b=3*p):"RGB"===l?(g=0,y=p,w=2*p):"RBG"===l&&(g=0,w=p,y=2*p),i=s.createImageData(n,a);for(let r=0;r<a*n;h+=4,f+=4,m+=4,_+=4,r++)i.data[h]=(t.data[g++]-c[0])*d[0],i.data[f]=(t.data[y++]-c[1])*d[1],i.data[m]=(t.data[w++]-c[2])*d[2],i.data[_]=-1===b?255:(t.data[b++]-c[3])*d[3]}else throw Error("Can not access image data");return i}}),H=D(()=>{Y(),p=(t,r)=>{if(void 0===t)throw Error("Image buffer must be defined");if(void 0===r.height||void 0===r.width)throw Error("Image height and width must be defined");if("NHWC"===r.tensorLayout)throw Error("NHWC Tensor layout is not supported yet");let{height:s,width:i}=r,n=r.norm??{mean:255,bias:0},a,o;a="number"==typeof n.mean?[n.mean,n.mean,n.mean,n.mean]:[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],o="number"==typeof n.bias?[n.bias,n.bias,n.bias,n.bias]:[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let l=void 0!==r.format?r.format:"RGBA",u=void 0!==r.tensorFormat&&void 0!==r.tensorFormat?r.tensorFormat:"RGB",d=s*i,c=new Float32Array("RGBA"===u?4*d:3*d),p=4,h=0,f=1,m=2,_=3,g=0,y=d,w=2*d,b=-1;"RGB"===l&&(p=3,h=0,f=1,m=2,_=-1),"RGBA"===u?b=3*d:"RBG"===u?(g=0,w=d,y=2*d):"BGR"===u&&(w=0,y=d,g=2*d);for(let r=0;r<d;r++,h+=p,m+=p,f+=p,_+=p)c[g++]=(t[h]+o[0])/a[0],c[y++]=(t[f]+o[1])/a[1],c[w++]=(t[m]+o[2])/a[2],-1!==b&&-1!==_&&(c[b++]=(t[_]+o[3])/a[3]);return"RGBA"===u?new k("float32",c,[1,4,s,i]):new k("float32",c,[1,3,s,i])},h=async(t,r)=>{let s="u">typeof HTMLImageElement&&t instanceof HTMLImageElement,i="u">typeof ImageData&&t instanceof ImageData,n="u">typeof ImageBitmap&&t instanceof ImageBitmap,a="string"==typeof t,o,l=r??{},u=()=>{if("u">typeof document)return document.createElement("canvas");if("u">typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw Error("Canvas is not supported")},d=t=>"u">typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||t instanceof OffscreenCanvas?t.getContext("2d"):null;if(s){let s=u();s.width=t.width,s.height=t.height;let i=d(s);if(null!=i){let s=t.height,n=t.width;if(void 0!==r&&void 0!==r.resizedHeight&&void 0!==r.resizedWidth&&(s=r.resizedHeight,n=r.resizedWidth),void 0!==r){if(l=r,void 0!==r.tensorFormat)throw Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=s,l.width=n}else l.tensorFormat="RGBA",l.height=s,l.width=n;i.drawImage(t,0,0),o=i.getImageData(0,0,n,s).data}else throw Error("Can not access image data")}else if(i){let s,i;if(void 0!==r&&void 0!==r.resizedWidth&&void 0!==r.resizedHeight?(s=r.resizedHeight,i=r.resizedWidth):(s=t.height,i=t.width),void 0!==r&&(l=r),l.format="RGBA",l.height=s,l.width=i,void 0!==r){let r=u();r.width=i,r.height=s;let n=d(r);if(null!=n)n.putImageData(t,0,0),o=n.getImageData(0,0,i,s).data;else throw Error("Can not access image data")}else o=t.data}else if(n){if(void 0===r)throw Error("Please provide image config with format for Imagebitmap");let s=u();s.width=t.width,s.height=t.height;let i=d(s);if(null!=i){let r=t.height,s=t.width;return i.drawImage(t,0,0,s,r),o=i.getImageData(0,0,s,r).data,l.height=r,l.width=s,p(o,l)}throw Error("Can not access image data")}else{if(a)return new Promise((r,s)=>{let i=u(),n=d(i);if(!t||!n)return s();let a=new Image;a.crossOrigin="Anonymous",a.src=t,a.onload=()=>{i.width=a.width,i.height=a.height,n.drawImage(a,0,0,i.width,i.height);let t=n.getImageData(0,0,i.width,i.height);l.height=i.height,l.width=i.width,r(p(t.data,l))}});throw Error("Input data provided is not supported - aborted tensor creation")}if(void 0!==o)return p(o,l);throw Error("Input data provided is not supported - aborted tensor creation")},f=(t,r)=>{let{width:s,height:i,download:n,dispose:a}=r;return new k({location:"texture",type:"float32",texture:t,dims:[1,i,s,4],download:n,dispose:a})},m=(t,r)=>{let{dataType:s,dims:i,download:n,dispose:a}=r;return new k({location:"gpu-buffer",type:s??"float32",gpuBuffer:t,dims:i,download:n,dispose:a})},_=(t,r)=>{let{dataType:s,dims:i,download:n,dispose:a}=r;return new k({location:"ml-tensor",type:s??"float32",mlTensor:t,dims:i,download:n,dispose:a})},g=(t,r,s)=>new k({location:"cpu-pinned",type:t,data:r,dims:s??[r.length]})}),K=D(()=>{y=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),w=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),b=!1,x=()=>{if(!b){b=!0;let t="u">typeof BigInt64Array&&BigInt64Array.from,r="u">typeof BigUint64Array&&BigUint64Array.from,s="u">typeof Float16Array&&Float16Array.from;t&&(y.set("int64",BigInt64Array),w.set(BigInt64Array,"int64")),r&&(y.set("uint64",BigUint64Array),w.set(BigUint64Array,"uint64")),s?(y.set("float16",Float16Array),w.set(Float16Array,"float16")):y.set("float16",Uint16Array)}}}),X=D(()=>{Y(),v=t=>{let r=1;for(let s=0;s<t.length;s++){let i=t[s];if("number"!=typeof i||!Number.isSafeInteger(i))throw TypeError(`dims[${s}] must be an integer, got: ${i}`);if(i<0)throw RangeError(`dims[${s}] must be a non-negative integer, got: ${i}`);r*=i}return r},$=(t,r)=>{switch(t.location){case"cpu":return new k(t.type,t.data,r);case"cpu-pinned":return new k({location:"cpu-pinned",data:t.data,type:t.type,dims:r});case"texture":return new k({location:"texture",texture:t.texture,type:t.type,dims:r});case"gpu-buffer":return new k({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:r});case"ml-tensor":return new k({location:"ml-tensor",mlTensor:t.mlTensor,type:t.type,dims:r});default:throw Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),Y=D(()=>{W(),H(),K(),X(),k=class{constructor(t,r,s){let i,n;if(x(),"object"==typeof t&&"location"in t)switch(this.dataLocation=t.location,i=t.type,n=t.dims,t.location){case"cpu-pinned":{let r=y.get(i);if(!r)throw TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(t.data instanceof r))throw TypeError(`buffer should be of type ${r.name}`);this.cpuData=t.data;break}case"texture":if("float32"!==i)throw TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break;case"gpu-buffer":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break;case"ml-tensor":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint64"!==i&&"int8"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=t.mlTensor,this.downloader=t.download,this.disposer=t.dispose;break;default:throw Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,o;if("string"==typeof t){if(i=t,o=s,"string"===t){if(!Array.isArray(r))throw TypeError("A string tensor's data must be a string array.");a=r}else{let s=y.get(t);if(void 0===s)throw TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if("float16"===t&&s===Uint16Array||"uint4"===t||"int4"===t)throw TypeError(`Creating a ${t} tensor from number array is not supported. Please use ${s.name} as data.`);a="uint64"===t||"int64"===t?s.from(r,BigInt):s.from(r)}else if(r instanceof s)a=r;else if(r instanceof Uint8ClampedArray){if("uint8"===t)a=Uint8Array.from(r);else throw TypeError("A Uint8ClampedArray tensor's data must be type of uint8")}else throw TypeError(`A ${i} tensor's data must be type of ${s}`)}}else if(o=r,Array.isArray(t)){if(0===t.length)throw TypeError("Tensor type cannot be inferred from an empty array.");let r=typeof t[0];if("string"===r)i="string",a=t;else if("boolean"===r)i="bool",a=Uint8Array.from(t);else throw TypeError(`Invalid element type of data array: ${r}.`)}else if(t instanceof Uint8ClampedArray)i="uint8",a=Uint8Array.from(t);else{let r=w.get(t.constructor);if(void 0===r)throw TypeError(`Unsupported type for tensor data: ${t.constructor}.`);i=r,a=t}if(void 0===o)o=[a.length];else if(!Array.isArray(o))throw TypeError("A tensor's dims must be a number array");n=o,this.cpuData=a,this.dataLocation="cpu"}let a=v(n);if(this.cpuData&&a!==this.cpuData.length&&!(("uint4"===i||"int4"===i)&&Math.ceil(a/2)===this.cpuData.length))throw Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=n,this.size=a}static async fromImage(t,r){return h(t,r)}static fromTexture(t,r){return f(t,r)}static fromGpuBuffer(t,r){return m(t,r)}static fromMLTensor(t,r){return _(t,r)}static fromPinnedBuffer(t,r,s){return g(t,r,s)}toDataURL(t){return d(this,t)}toImageData(t){return c(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}default:throw Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw Error("Cannot reshape a tensor that owns GPU resource.");return $(this,t)}}}),Q=D(()=>{Y(),E=k}),Z=D(()=>{j(),S=(t,r)=>{(typeof l.trace>"u"?l.wasm.trace:l.trace)&&console.timeStamp(`${t}::ORT::${r}`)},z=(t,r)=>{let s=Error().stack?.split(/\r\n|\r|\n/g)||[],i=!1;for(let n=0;n<s.length;n++){if(i&&!s[n].includes("TRACE_FUNC")){let i=`FUNC_${t}::${s[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),S("CPU",i);return}s[n].includes("TRACE_FUNC")&&(i=!0)}},T=t=>{(typeof l.trace>"u"?l.wasm.trace:l.trace)&&z("BEGIN",t)},I=t=>{(typeof l.trace>"u"?l.wasm.trace:l.trace)&&z("END",t)}}),J=D(()=>{F(),Q(),Z(),C=class t{constructor(t){this.handler=t}async run(t,r,s){T();let i={},n={};if("object"!=typeof t||null===t||t instanceof E||Array.isArray(t))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof r){if(null===r)throw TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof E)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(a=!1,r)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);i[t]=null}if("object"==typeof s&&null!==s)n=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else{let t=!1,o=Object.getOwnPropertyNames(r);for(let s of this.outputNames)if(-1!==o.indexOf(s)){let n=r[s];(null===n||n instanceof E)&&(t=!0,a=!1,i[s]=n)}if(t){if("object"==typeof s&&null!==s)n=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else n=r}}else if("u">typeof r)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of this.inputNames)if(typeof t[r]>"u")throw Error(`input '${r}' is missing in 'feeds'.`);if(a)for(let t of this.outputNames)i[t]=null;let o=await this.handler.run(t,i,n),l={};for(let t in o)if(Object.hasOwnProperty.call(o,t)){let r=o[t];r instanceof E?l[t]=r:l[t]=new E(r.type,r.data,r.dims)}return I(),l}async release(){return this.handler.dispose()}static async create(r,s,i,a){T();let o,l={};if("string"==typeof r){if(o=r,"object"==typeof s&&null!==s)l=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(o=r,"object"==typeof s&&null!==s)l=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||"u">typeof SharedArrayBuffer&&r instanceof SharedArrayBuffer){let t=0,n=r.byteLength;if("object"==typeof s&&null!==s)l=s;else if("number"==typeof s){if(!Number.isSafeInteger(t=s))throw RangeError("'byteOffset' must be an integer.");if(t<0||t>=r.byteLength)throw RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(n=r.byteLength-t,"number"==typeof i){if(!Number.isSafeInteger(n=i))throw RangeError("'byteLength' must be an integer.");if(n<=0||t+n>r.byteLength)throw RangeError(`'byteLength' is out of range (0, ${r.byteLength-t}].`);if("object"==typeof a&&null!==a)l=a;else if("u">typeof a)throw TypeError("'options' must be an object.")}else if("u">typeof i)throw TypeError("'byteLength' must be a number.")}else if("u">typeof s)throw TypeError("'options' must be an object.");o=new Uint8Array(r,t,n)}else throw TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,d]=await n(l),c=await u.createInferenceSessionHandler(o,d);return I(),new t(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),ee=D(()=>{J(),A=C}),et=D(()=>{}),er=D(()=>{}),es=D(()=>{}),ei=D(()=>{}),en={};L(en,{InferenceSession:()=>A,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>T,TRACE_FUNC_END:()=>I,Tensor:()=>E,env:()=>u,registerBackend:()=>s});var ea=D(()=>{q(),G(),ee(),Q(),et(),er(),Z(),es(),ei()}),eo=D(()=>{}),el={};L(el,{default:()=>ec});var eu,ed,ec,ep,eh,ef,em,e_,eg,ey,ew,eb,ex,ev,e$,ek,eE,eS,ez,eT,eI,eC,eA,eM,eO,eB,eP,eR,eD,eL,eN,eU,eF,eq,eV,ej,eG,eW,eH,eK,eX,eY,eQ,eZ,eJ,e0,e1,e2,e3,e4,e6,e8,e5,e9,e7,te,tt,tr,ts,ti,tn,ta,to,tl,tu,td,tc,tp,th,tf,tm,t_,tg,ty,tw,tb,tx,tv,t$,tk,tE,tS,tz,tT,tI,tC,tA,tM,tO,tB,tP,tR,tD,tL,tN,tU,tF,tq,tV,tj,tG,tW,tH,tK,tX,tY,tQ,tZ,tJ,t0,t1,t2,t3,t4,t6,t8,t5,t9,t7,re,rt,rr,rs,ri,rn,ra,ro,rl,ru,rd,rc,rp,rh,rf,rm,r_,rg,ry,rw,rb,rx,rv,r$,rk,rE,rS,rz,rT,rI,rC,rA,rM,rO,rB,rP,rR,rD,rL,rN,rU,rF,rq,rV,rj,rG,rW,rH,rK,rX,rY,rQ,rZ,rJ,r0,r1,r2,r3,r4,r6,r8,r5,r9,r7,se,st,sr,ss,si,sn,sa,so,sl,su,sd,sc,sp,sh,sf,sm,s_,sg,sy,sw,sb,sx,sv,s$,sk,sE,sS,sz,sT,sI,sC,sA,sM,sO,sB,sP,sR,sD,sL,sN,sU,sF,sq,sV,sj,sG,sW,sH,sK,sX,sY,sQ,sZ,sJ,s0,s1,s2,s3,s4,s6,s8,s5,s9,s7,ie,it,ir,is,ii,ia,io,il,iu,id,ic,ip,ih,im,i_,ig,iy,iw,ib,ix,iv,i$,ik,iE,iS,iz,iT,iI,iC,iA,iM,iO,iB,iP,iR,iD,iL,iN,iU,iF,iq,iV,ij,iG,iW,iH,iK,iX,iY,iQ,iZ,iJ,i0,i1,i2,i3,i4,i6,i8,i5,i9,i7,ne,nt,nr,ns,ni,nn,na,no,nl,nu,nd,nc,np,nh,nf,nm,n_,ng,ny,nw,nb,nx,nv,n$,nk,nE,nS,nz,nT,nI,nC,nA,nM,nO,nB,nP,nR,nD,nL,nN,nU,nF,nq,nV,nj,nG,nW,nH,nK,nX,nY,nQ,nZ,nJ,n0,n1,n2,n3,n4,n6,n8,n5,n9,n7,ae,at,ar,as,ai,an,aa,ao,al,au,ad,ac,ap,ah,af,am,a_,ag,ay,aw,ab,ax,av,a$,ak,aE,aS,az,aT,aI,aC,aA,aM,aO,aB,aP,aR,aD,aL,aN,aU,aF,aq,aV,aj,aG,aW,aH,aK,aX,aY,aQ,aZ,aJ,a0,a1,a2,a3,a4,a6,a8,a5,a9,a7,oe,ot,or,os,oi,on,oa,oo,ol,ou,od,oc,op,oh,of,om,o_,og,oy,ow,ob,ox,ov,o$,ok,oE,oS,oz=D(()=>{uu(),oI(),oT(),eu="ort-wasm-proxy-worker",(ed=globalThis.self?.name===eu)&&(self.onmessage=t=>{let{type:r,in:s}=t.data;try{switch(r){case"init-wasm":eT(s.wasm).then(()=>{lU(s).then(()=>{postMessage({type:r})},t=>{postMessage({type:r,err:t})})},t=>{postMessage({type:r,err:t})});break;case"init-ep":{let{epName:t,env:i}=s;lF(i,t).then(()=>{postMessage({type:r})},t=>{postMessage({type:r,err:t})});break}case"copy-from":{let{buffer:t}=s,i=lj(t);postMessage({type:r,out:i});break}case"create":{let{model:t,options:i}=s;lG(t,i).then(t=>{postMessage({type:r,out:t})},t=>{postMessage({type:r,err:t})});break}case"release":lW(s),postMessage({type:r});break;case"run":{let{sessionId:t,inputIndices:i,inputs:n,outputIndices:a,options:o}=s;lK(t,i,n,a,Array(a.length).fill(null),o).then(t=>{t.some(t=>"cpu"!==t[3])?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:t},lY([...n,...t]))},t=>{postMessage({type:r,err:t})});break}case"end-profiling":lX(s),postMessage({type:r})}}catch(t){postMessage({type:r,err:t})}}),ec=ed?null:t=>new Worker(t??ep,{type:"classic",name:eu})}),oT=D(()=>{eo(),ep="u">typeof document?document.currentScript?.src:"u">typeof self?self.location?.href:void 0,eh=typeof location>"u"?void 0:location.origin,ef=(t,r)=>{try{let s=r??ep;return(s?new URL(t,s):new URL(t)).origin===eh}catch{return!1}},em=(t,r)=>{let s=r??ep;try{return(s?new URL(t,s):new URL(t)).href}catch{return}},e_=(t,r)=>`${r??"./"}${t}`,eg=async t=>{let r=await (await fetch(t,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},ey=async t=>(await import(t)).default,ew=(oz(),U(el)).default,eb=async()=>{if(!ep)throw Error("Failed to load proxy worker: cannot determine the script source URL.");if(ef(ep))return[void 0,ew()];let t=await eg(ep);return[t,ew(t)]},ex=async(t,r,s)=>{{let i="ort-wasm-simd-threaded.jsep.mjs",n=t??em(i,r),a=s&&n&&!ef(n,r),o=a?await eg(n):n??e_(i,r);return[a?o:void 0,await ey(o)]}}}),oI=D(()=>{oT(),e$=!1,ek=!1,eE=!1,eS=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return"u">typeof MessageChannel&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},ez=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},eT=async t=>{if(e$)return Promise.resolve();if(ek)throw Error("multiple calls to 'initializeWebAssembly()' detected.");if(eE)throw Error("previous call to 'initializeWebAssembly()' failed.");ek=!0;let r=t.initTimeout,s=t.numThreads;if(!ez())throw Error("WebAssembly SIMD is not supported in the current environment.");let i=eS();s>1&&!i&&("u">typeof self&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+s+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),t.numThreads=s=1);let n=t.wasmPaths,a="string"==typeof n?n:void 0,o=n?.mjs,l=o?.href??o,u=n?.wasm,d=u?.href??u,c=t.wasmBinary,[p,h]=await ex(l,a,s>1),f=!1,m=[];if(r>0&&m.push(new Promise(t=>{setTimeout(()=>{f=!0,t()},r)})),m.push(new Promise((t,r)=>{let i={numThreads:s};c?i.wasmBinary=c:(d||a)&&(i.locateFile=(t,r)=>d??(a??r)+t),h(i).then(r=>{ek=!1,e$=!0,ev=r,t(),p&&URL.revokeObjectURL(p)},t=>{ek=!1,eE=!0,r(t)})})),await Promise.race(m),f)throw Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},eI=()=>{if(e$&&ev)return ev;throw Error("WebAssembly is not initialized yet.")}}),oC=D(()=>{oI(),eC=(t,r)=>{let s=eI(),i=s.lengthBytesUTF8(t)+1,n=s._malloc(i);return s.stringToUTF8(t,n,i),r.push(n),n},eA=(t,r,s,i)=>{if("object"==typeof t&&null!==t){if(s.has(t))throw Error("Circular reference in options");s.add(t)}Object.entries(t).forEach(([t,n])=>{let a=r?r+t:t;if("object"==typeof n)eA(n,a+".",s,i);else if("string"==typeof n||"number"==typeof n)i(a,n.toString());else if("boolean"==typeof n)i(a,n?"1":"0");else throw Error(`Can't handle extra config type: ${typeof n}`)})},eM=t=>{let r=eI(),s=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetLastError(i,i+s);let n=Number(r.getValue(i,4===s?"i32":"i64")),a=r.getValue(i+s,"*"),o=a?r.UTF8ToString(a):"";throw Error(`${t} ERROR_CODE: ${n}, ERROR_MESSAGE: ${o}`)}finally{r.stackRestore(s)}}}),oA=D(()=>{oI(),oC(),eO=t=>{let r=eI(),s=0,i=[],n=t||{};try{if(t?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if("number"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(t?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if("number"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);t?.terminate===void 0&&(n.terminate=!1);let a=0;return t?.tag!==void 0&&(a=eC(t.tag,i)),s=r._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,a),0===s&&eM("Can't create run options."),t?.extra!==void 0&&eA(t.extra,"",new WeakSet,(t,n)=>{let a=eC(t,i),o=eC(n,i);0!==r._OrtAddRunConfigEntry(s,a,o)&&eM(`Can't set a run config entry: ${t} - ${n}.`)}),[s,i]}catch(t){throw 0!==s&&r._OrtReleaseRunOptions(s),i.forEach(t=>r._free(t)),t}}}),oM=D(()=>{oI(),oC(),eB=t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw Error(`unsupported graph optimization level: ${t}`)}},eP=t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw Error(`unsupported execution mode: ${t}`)}},eR=t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});let r=t.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),t.executionProviders&&t.executionProviders.some(t=>("string"==typeof t?t:t.name)==="webgpu")&&(t.enableMemPattern=!1)},eD=(t,r,s)=>{for(let i of r){let r="string"==typeof i?i:i.name;switch(r){case"webnn":if(r="WEBNN","string"!=typeof i){let r=i?.deviceType;if(r){let i=eC("deviceType",s),n=eC(r,s);0!==eI()._OrtAddSessionConfigEntry(t,i,n)&&eM(`Can't set a session config entry: 'deviceType' - ${r}.`)}}break;case"webgpu":if(r="JS","string"!=typeof i&&i?.preferredLayout){if("NCHW"!==i.preferredLayout&&"NHWC"!==i.preferredLayout)throw Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);let r=eC("preferredLayout",s),n=eC(i.preferredLayout,s);0!==eI()._OrtAddSessionConfigEntry(t,r,n)&&eM(`Can't set a session config entry: 'preferredLayout' - ${i.preferredLayout}.`)}break;case"wasm":case"cpu":continue;default:throw Error(`not supported execution provider: ${r}`)}let n=eC(r,s);0!==eI()._OrtAppendExecutionProvider(t,n)&&eM(`Can't append execution provider: ${r}.`)}},eL=t=>{let r=eI(),s=0,i=[],n=t||{};eR(n);try{let t=eB(n.graphOptimizationLevel??"all"),a=eP(n.executionMode??"sequential"),o="string"==typeof n.logId?eC(n.logId,i):0,l=n.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw Error(`log serverity level is not valid: ${l}`);let u=n.logVerbosityLevel??0;if(!Number.isInteger(u)||u<0||u>4)throw Error(`log verbosity level is not valid: ${u}`);let d="string"==typeof n.optimizedModelFilePath?eC(n.optimizedModelFilePath,i):0;if(s=r._OrtCreateSessionOptions(t,!!n.enableCpuMemArena,!!n.enableMemPattern,a,!!n.enableProfiling,0,o,l,u,d),0===s&&eM("Can't create session options."),n.executionProviders&&eD(s,n.executionProviders,i),void 0!==n.enableGraphCapture){if("boolean"!=typeof n.enableGraphCapture)throw Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);let t=eC("enableGraphCapture",i),a=eC(n.enableGraphCapture.toString(),i);0!==r._OrtAddSessionConfigEntry(s,t,a)&&eM(`Can't set a session config entry: 'enableGraphCapture' - ${n.enableGraphCapture}.`)}if(n.freeDimensionOverrides)for(let[t,a]of Object.entries(n.freeDimensionOverrides)){if("string"!=typeof t)throw Error(`free dimension override name must be a string: ${t}`);if("number"!=typeof a||!Number.isInteger(a)||a<0)throw Error(`free dimension override value must be a non-negative integer: ${a}`);let n=eC(t,i);0!==r._OrtAddFreeDimensionOverride(s,n,a)&&eM(`Can't set a free dimension override: ${t} - ${a}.`)}return void 0!==n.extra&&eA(n.extra,"",new WeakSet,(t,n)=>{let a=eC(t,i),o=eC(n,i);0!==r._OrtAddSessionConfigEntry(s,a,o)&&eM(`Can't set a session config entry: ${t} - ${n}.`)}),[s,i]}catch(t){throw 0!==s&&0!==r._OrtReleaseSessionOptions(s)&&eM("Can't release session options."),i.forEach(t=>r._free(t)),t}}}),oO=D(()=>{eN=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw Error(`unsupported data type: ${t}`)}},eU=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw Error(`unsupported data type: ${t}`)}},eF=(t,r)=>{let s=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][t],i="number"==typeof r?r:r.reduce((t,r)=>t*r,1);return s>0?Math.ceil(i*s):void 0},eq=t=>{switch(t){case"float16":return"u">typeof Float16Array&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw Error(`unsupported type: ${t}`)}},eV=t=>{switch(t){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw Error(`unsupported logging level: ${t}`)}},ej=t=>"float32"===t||"float16"===t||"int32"===t||"int64"===t||"uint32"===t||"uint8"===t||"bool"===t||"uint4"===t||"int4"===t,eG=t=>"float32"===t||"float16"===t||"int32"===t||"int64"===t||"uint32"===t||"uint64"===t||"int8"===t||"uint8"===t||"bool"===t||"uint4"===t||"int4"===t,eW=t=>{switch(t){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw Error(`unsupported data location: ${t}`)}}}),oB=D(()=>{eo(),eH=async t=>{if("string"!=typeof t)return t instanceof Blob?new Uint8Array(await t.arrayBuffer()):t instanceof Uint8Array?t:new Uint8Array(t);{let r=await fetch(t);if(!r.ok)throw Error(`failed to load external data file: ${t}`);let s=r.headers.get("Content-Length"),i=s?parseInt(s,10):0;if(i<0x40000000)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw Error(`failed to load external data file: ${t}, no response body.`);let s=r.body.getReader(),n;try{n=new ArrayBuffer(i)}catch(t){if(t instanceof RangeError){let t=Math.ceil(i/65536);n=new WebAssembly.Memory({initial:t,maximum:t}).buffer}else throw t}let a=0;for(;;){let{done:t,value:r}=await s.read();if(t)break;let i=r.byteLength;new Uint8Array(n,a,i).set(r),a+=i}return new Uint8Array(n,0,i)}}}}),oP=D(()=>{oO(),eK=["V","I","W","E","F"],eX=(t,r)=>{console.log(`[${eK[t]},${new Date().toISOString()}]${r}`)},eZ=(t,r)=>{eY=t,eQ=r},eJ=(t,r)=>{let s=eV(t);s>=eV(eY)&&eX(s,"function"==typeof r?r():r)},e0=(...t)=>{eQ&&eJ(...t)}}),oR=D(()=>{oO(),e1=(t,r)=>new(eq(r))(t)}),oD=D(()=>{}),oL=D(()=>{oP(),oD(),e2=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[0xc00000,10],[0x1000000,10],[0x1900000,15],[0x2000000,22],[0x2a30000,2],[0x3840000,6],[0x4000000,6],[0x8000000,6],[0xa000000,6]]),e3=[],e4=t=>16*Math.ceil(Number(t)/16),e6=t=>{for(let r=0;r<e3.length;r++){let s=e3[r];if(t<=s)return s}return 16*Math.ceil(t/16)},e8=1,e5=()=>e8++,e9=async(t,r,s,i)=>{let n=e4(s),a=t.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=t.getCommandEncoder();t.endComputePass(),o.copyBufferToBuffer(r,0,a,0,n),t.flush(),await a.mapAsync(GPUMapMode.READ);let l=a.getMappedRange();if(!i)return new Uint8Array(l.slice(0,s));{let t=i();return t.set(new Uint8Array(l,0,s)),t}}finally{a.destroy()}},e7=class{constructor(t){for(let[r]of(this.backend=t,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map,e2))e3.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(t,r){let s=r.buffer,i=r.byteOffset,n=r.byteLength,a=e4(n),o=this.storageCache.get(t);if(!o)throw Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==n)throw Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${n}`);let l=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC});new Uint8Array(l.getMappedRange()).set(new Uint8Array(s,i,n)),l.unmap();let u=this.backend.device.createCommandEncoder();u.copyBufferToBuffer(l,0,o.gpuData.buffer,0,a),this.backend.device.queue.submit([u.finish()]),l.destroy(),e0("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`)}memcpy(t,r){let s=this.storageCache.get(t);if(!s)throw Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw Error("destination gpu data for memcpy does not exist");if(s.originalSize!==i.originalSize)throw Error("inconsistent source and destination gpu data size");let n=e4(s.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(s.gpuData.buffer,0,i.gpuData.buffer,0,n)}registerExternalBuffer(t,r,s){let i;if(s){if(i=s[0],t===s[1])return e0("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else i=e5();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),e0("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){void 0!==t&&(this.storageCache.delete(t),e0("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let s=e6(t),i,n=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(n||a){let t=(n?this.freeBuffers:this.freeUniformBuffers).get(s);i=t&&t.length>0?t.pop():this.backend.device.createBuffer({size:s,usage:r})}else i=this.backend.device.createBuffer({size:s,usage:r});let o={id:e5(),type:0,buffer:i};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(t)}),e0("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${o.id}`),o}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r="bigint"==typeof t?Number(t):t,s=this.storageCache.get(r);if(!s){if(0===this.storageCache.size)return 0;throw Error("releasing data does not exist")}return e0("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${s.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(s.gpuData.buffer),s.originalSize}async download(t,r){let s=this.storageCache.get(Number(t));if(!s)throw Error("data does not exist");await e9(this.backend,s.gpuData.buffer,s.originalSize,r)}refreshPendingBuffers(){if(0!==this.buffersPending.length){if("default"===this.backend.sessionStatus){for(let t of this.buffersPending){let r=e2.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let s=this.freeBuffers.get(t.size)||[];void 0===r||s.length>=r?t.destroy():s.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let s=this.freeUniformBuffers.get(t.size)||[];void 0===r||s.length>=r?t.destroy():s.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);for(let r of(t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t)),this.buffersPending))t.push(r);this.buffersPending=[]}}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(t)),this.sessionCount-=1,0===this.sessionCount&&(e0("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},te=(...t)=>new e7(...t)}),oN=D(()=>{tt=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},tr=t=>new tt(t)}),oU=D(()=>{ts=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},ti=class{static calcShape(t,r,s=!1){let i=t.length,n=r.length;if(0===i)return r;if(0===n)return t;let a=Math.max(t.length,r.length),o=Array(a);if(s){if(i<2||n<2)return;let s=ts.calcMatMulShape([t[i-2],t[i-1]],[r[n-2],r[n-1]]);if(void 0===s)return;[o[a-2],o[a-1]]=s}for(let l=s?3:1;l<=a;l++){let s=i-l<0?1:t[i-l],u=n-l<0?1:r[n-l];if(s!==u&&s>1&&u>1)return;let d=Math.max(s,u);if(s&&u)o[a-l]=Math.max(s,u);else{if(d>1)return;o[a-l]=0}}return o}static isValidBroadcast(t,r){let s=t.length,i=r.length;if(s>i)return!1;for(let n=1;n<=s;n++)if(1!==t[s-n]&&t[s-n]!==r[i-n])return!1;return!0}},tn=class t{static size(r){return t.getSizeFromDimensionRange(r,0,r.length)}static convertShape(t,r=4){let s=t.length;if(0===s)return[];let i=Array(s),n=s-1;for(;n>=0;){if(t[n]%r==0){i[n]=t[n]/r;break}if(r%t[n]!=0)throw Error("cannot convert shape");i[n]=1,r/=t[n],n--}for(n--;n>=0;n--)i[n]=t[n];return i}static sizeFromDimension(r,s){if(s<0||s>r.length)throw Error(`invalid dimension of ${s} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,s,r.length)}static sizeToDimension(r,s){if(s<0||s>r.length)throw Error(`invalid dimension of ${s} for sizeToDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,0,s)}static getSizeFromDimensionRange(t,r,s){let i=1;for(let n=r;n<s;n++){if(t[n]<0)throw Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(t[n])}return i}static computeStrides(t){let r=t.length;if(0===r)return[];if(1===r)return[1];let s=Array(r);s[r-1]=1,s[r-2]=t[r-1];for(let i=r-3;i>=0;--i)s[i]=s[i+1]*t[i+1];return s}static normalizeAxis(t,r){if(t<-r&&t>=r)throw Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(s=>this.normalizeAxis(s,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(r=>t[r]):t.slice().reverse()}static padShape(t,r){let s=t.length;return t.map((t,i)=>t+r[i]+r[i+s])}static areEqual(t,r){return t.length===r.length&&t.every((t,s)=>t===r[s])}},ta=class t{static adjustPoolAttributes(t,r,s,i,n,a){if(!t&&s.length!==r.length-2)throw Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let t=0;t<r.length-2;t++)t>=s.length?s.push(r[t+2]):s[t]=r[t+2];for(let t=0;t<s.length;t++)if(t<i.length){if(i[t]<0)throw Error("strides should be greater than or equal to 1")}else i.push(1);for(let t=0;t<s.length;t++)if(t<n.length){if(n[t]<0)throw Error("dilations should be greater than or equal to 1")}else n.push(1);for(let t=0;t<2*s.length;t++)if(t<a.length){if(a[t]<0)throw Error("pad should be greater than or equal to 1")}else a.push(0);for(let t=0;t<s.length;t++){if(s[t]<=0)throw Error("kernel shapes need to be greater than 0");if(a[t]>=s[t]||a[t+s.length]>=s[t])throw Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,s,i,n,a,o,l){if(l){if(a.length!==2*(r.length-2))throw Error("length of pads should be twice the length of data dimensions");if(s.length!==r.length-2)throw Error("length of strides should be the length of data dimensions");if(n.length!==r.length-2)throw Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<r.length-2;u++)t.adjustPadAndReturnShape(r[u+(o?1:2)],s[u],i[u],n[u],a,u,u+r.length-2,l)}}static computePoolOutputShape(r,s,i,n,a,o,l){if(s.length<=0)throw Error("input shape must be of size greater than 0");let u=[s[0],s[1]];return t.computeShapeHelper(r,s,u,i,n,a,o,l),u}static computeConvOutputShape(r,s,i,n,a,o,l){if(r.length<=0||s.length<=0)throw Error("invalid input tensor dims or invalid filter tensor dims");let u=[r[0],s[0]];return t.computeShapeHelper(!1,r,u,i,n,a,o,l),u}static computeShapeHelper(r,s,i,n,a,o,l,u){if(r)for(let t=0;t<s.length-2;t++)i.push(1);else for(let r=0;r<s.length-2;r++)i.push(t.adjustPadAndReturnShape(s[r+2],n[r],a[r],o[r],l,r,r+s.length-2,u))}static adjustPadAndReturnShape(t,r,s,i,n,a,o,l){let u=s*(i-1)+1;if(!l||"NOTSET"===l)return Math.floor((t+n[a]+n[o]-u)/r+1);switch(l){case"VALID":return n[a]=0,n[o]=0,Math.floor((t-u)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==s)throw Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let s=((t+r-1)/r-1)*r+i-t;return n[a]=Math.floor("SAME_LOWER"===l?(s+1)/2:s/2),n[o]=s-n[a],Math.floor((t+s-i)/r+1)}default:throw Error("Unsupported AutoPad type")}}},to=class{static getShapeOfGemmResult(t,r,s,i,n){let a,o,l;if(2!==t.length||2!==s.length)throw Error("shape need to be of size 2");r?(a=t[1],o=t[0]):(a=t[0],o=t[1]);let u=-1;if(i?(l=s[0],u=1):(l=s[1],u=0),s[u]!==o)throw Error("dimension mismatch");if(a<=0||l<=0||o<=0)throw Error("invalid shape specified");if(n&&!ti.isValidBroadcast(n,[a,l]))throw Error("gemm: invalid bias shape for broadcast");return[a,l,o]}},tl=-34028234663852886e22,tu=34028234663852886e22}),oF=D(()=>{oO(),oU(),td=64,tc=(t,r)=>{if(3===r)throw Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(t)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==r)throw Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw Error(`Unknown data type: ${t}`)}},tp=(t,r=1)=>{let s=tc(t,r);return"string"==typeof s?s:s[0]},th=(t,r=1)=>{let s=tc(t,r);return"string"==typeof s?s:s[1]},tf=(...t)=>{let r=[];return t.forEach(t=>{0!==t.length&&r.push({type:12,data:t},{type:12,data:tn.computeStrides(t)})}),r},tm=t=>t%4==0?4:t%2==0?2:1,t_=(t="f32",r,s="0")=>r&&1!==r?`vec${r}<${t}>(${s})`:`${t}(${s})`,tg=(t,r,s)=>"f32"===t?s:1===r?`f32(${s})`:`vec${r}<f32>(${s})`,ty=(t,r)=>4===r?`(${t}.x + ${t}.y + ${t}.z + ${t}.w)`:2===r?`(${t}.x + ${t}.y)`:3===r?`(${t}.x + ${t}.y + ${t}.z)`:t,tw=(t,r,s,i)=>t.startsWith("uniforms.")&&s>4?"string"==typeof r?"f16"===i?`${t}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${t}[(${r}) / 4][(${r}) % 4]`:"f16"===i?`${t}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${t}[${Math.floor(r/4)}][${r%4}]`:s>1?`${t}[${r}]`:t,tb=(t,r,s,i,n)=>{let a,o,l,u,d="number"==typeof s,c=d?s:s.length,p=[...Array(c).keys()],h=c<2?"u32":c<=4?`vec${c}<u32>`:`array<u32, ${c}>`,f=tc(r,n),m="string"==typeof f?f:f[1],_={indices:h,value:m,storage:"string"==typeof f?f:f[0],tensor:r},g=t=>"string"==typeof t?t:`${t}u`,y={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=d?"uniforms.":"",b=`${w}${t}_shape`,x=`${w}${t}_strides`,v="";for(let t=0;t<c-1;t++)v+=`
    let dim${t} = current / ${tw(x,t,c)};
    let rest${t} = current % ${tw(x,t,c)};
    indices[${t}] = dim${t};
    current = rest${t};
    `;v+=`indices[${c-1}] = current;`;let $=c<2?"":`
  fn o2i_${t}(offset: u32) -> ${_.indices} {
    var indices: ${_.indices};
    var current = offset;
    ${v}
    return indices;
  }`,k=[];if(c>=2)for(let t=c-1;t>=0;t--)k.push(`${tw(x,t,c)} * (indices[${t}])`);let E=c<2?"":`
  fn i2o_${t}(indices: ${_.indices}) -> u32 {
    return ${k.join("+")};
  }`,S=(...t)=>0===c?"0u":`${_.indices}(${t.map(g).join(",")})`,z=(t,r)=>c<2?`${t}`:`${tw(t,r,c)}`,T={},I=(r,s)=>(()=>{if(_.storage===_.value)return`${t}[${r}]=${s};`;if("vec2<u32>"===_.storage&&"i32"===_.value)return`${t}[${r}]=vec2<u32>(u32(${s}), select(0u, 0xFFFFFFFFu, ${s} < 0));`;if("vec2<u32>"===_.storage&&"u32"===_.value)return`${t}[${r}]=vec2<u32>(u32(${s}), 0u);`;if("u32"===_.storage&&"vec4<bool>"===_.value)return`${t}[${r}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${s}));`;throw Error(`not supported combination of storage type ${_.storage} and value type ${_.value} yet`)})(),C=r=>(()=>{if(_.storage===_.value)return`${t}[${r}]`;if("vec2<u32>"===_.storage&&"i32"===_.value)return`i32(${t}[${r}].x)`;if("vec2<u32>"===_.storage&&"u32"===_.value)return`u32(${t}[${r}].x)`;if("u32"===_.storage&&"vec4<bool>"===_.value)return`vec4<bool>(bool(${t}[${r}] & 0xFFu), bool(${t}[${r}] & 0xFF00u), bool(${t}[${r}] & 0xFF0000u), bool(${t}[${r}] & 0xFF000000u))`;throw Error(`not supported combination of storage type ${_.storage} and value type ${_.value} yet`)})(),A=c<2?"":`
  fn get_${t}ByIndices(indices: ${_.indices}) -> ${m} {
    return ${C(`i2o_${t}(indices)`)};
  }`,M=c<2?"":(a=p.map(t=>`d${t}: u32`).join(", "),o=p.map(t=>`d${t}`).join(", "),`
  fn get_${t}(${a}) -> ${m} {
    return get_${t}ByIndices(${S(o)});
  }`),O=c<2?"":`
  fn set_${t}ByIndices(indices: ${_.indices}, value: ${m}) {
    ${I(`i2o_${t}(indices)`,"value")}
  }`,B=c<2?"":(l=p.map(t=>`d${t}: u32`).join(", "),u=p.map(t=>`d${t}`).join(", "),`
  fn set_${t}(${l}, value: ${m}) {
    set_${t}ByIndices(${S(u)}, value);
  }`);return{impl:()=>{let t=[],r=!1;return y.offsetToIndices&&(t.push($),r=!0),y.indicesToOffset&&(t.push(E),r=!0),y.broadcastedIndicesToOffset&&(Object.values(T).forEach(r=>t.push(r)),r=!0),y.set&&(t.push(B),r=!0),y.setByIndices&&(t.push(O),r=!0),y.get&&(t.push(M),r=!0),y.getByIndices&&(t.push(A),r=!0),!d&&r&&t.unshift(`const ${b} = ${_.indices}(${s.join(",")});`,`const ${x} = ${_.indices}(${tn.computeStrides(s).join(",")});`),t.join(`
`)},type:_,offsetToIndices:r=>(y.offsetToIndices=!0,c<2?r:`o2i_${t}(${r})`),indicesToOffset:r=>(y.indicesToOffset=!0,c<2?r:`i2o_${t}(${r})`),broadcastedIndicesToOffset:(r,s)=>{y.broadcastedIndicesToOffset=!0;let i=`${s.name}broadcastedIndicesTo${t}Offset`;if(i in T)return`${i}(${r})`;let n=[];for(let t=c-1;t>=0;t--){let r=s.indicesGet("outputIndices",t+s.rank-c);n.push(`${z(x,t)} * (${r} % ${z(b,t)})`)}return T[i]=`fn ${i}(outputIndices: ${s.type.indices}) -> u32 {
             return ${n.length>0?n.join("+"):"0u"};
           }`,`${i}(${r})`},indices:S,indicesGet:z,indicesSet:(t,r,s)=>c<2?`${t}=${s};`:`${tw(t,r,c)}=${s};`,set:(...r)=>{if(r.length!==c+1)throw Error(`indices length must be ${c}`);let s=r[c];if("string"!=typeof s)throw Error("value must be string");let i=r.slice(0,c).map(g).join(",");return 0===c?I("0u",s):1===c?I(i[0],s):(y.set=!0,y.setByIndices=!0,y.indicesToOffset=!0,`set_${t}(${i}, ${s})`)},setByOffset:I,setByIndices:(r,s)=>c<2?I(r,s):(y.setByIndices=!0,y.indicesToOffset=!0,`set_${t}ByIndices(${r}, ${s});`),get:(...r)=>{if(r.length!==c)throw Error(`indices length must be ${c}`);let s=r.map(g).join(",");return 0===c?C("0u"):1===c?C(s[0]):(y.get=!0,y.getByIndices=!0,y.indicesToOffset=!0,`get_${t}(${s})`)},getByOffset:C,getByIndices:r=>c<2?C(r):(y.getByIndices=!0,y.indicesToOffset=!0,`get_${t}ByIndices(${r})`),usage:i,name:t,strides:x,shape:b,rank:c}},tx=(t,r,s,i=1)=>tb(t,r,s,"input",i),tv=(t,r,s,i=1)=>tb(t,r,s,"output",i),t$=(t,r,s)=>tb(t,r,s,"atomicOutput",1),tk=(t,r,s,i=1)=>tb(t,r,s,"internal",i),tE=class{constructor(t,r){this.normalizedDispatchGroup=t,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${"number"==typeof t?`${t}u`:t}) { return; }`}mainStart(t=td){let r="number"==typeof t?t:t[0],s="number"==typeof t?1:t[1],i="number"==typeof t?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||s>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw Error(`workgroup size [${r}, ${s}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*s*i>this.limits.maxComputeInvocationsPerWorkgroup)throw Error(`workgroup size [${r}, ${s}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let n=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2],a=n?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=n?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*s*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${s}, ${i})
  fn main(${a}) {
    ${o}
  `}appendVariableUniforms(t){0!==t.rank&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if("internal"===t.usage)throw Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let s="input"===t.usage?"read":"read_write",i="atomicOutput"===t.usage?"atomic<i32>":t.type.storage;return`@group(0) @binding(${r}) var<storage, ${s}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if("internal"!==t.usage)throw Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(t,r,s=1){return this.uniforms.push({name:t,type:r,length:s}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let t=[];for(let{name:r,type:s,length:i}of this.uniforms)if(i&&i>4)"f16"===s?t.push(`@align(16) ${r}:array<mat2x4<${s}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${s}>, ${Math.ceil(i/4)}>`);else{let n=null==i||1===i?s:`vec${i}<${s}>`;t.push(`${r}:${n}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}get variablesInfo(){if(0===this.uniforms.length)return;let t=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},tS=(t,r)=>new tE(t,r)}),oq=D(()=>{oO(),oU(),oN(),oF(),tz=t=>{if(!t||1!==t.length)throw Error("Transpose requires 1 input.")},tT=(t,r)=>r&&r.length!==t?[...Array(t).keys()].reverse():r,tI=(t,r)=>tn.sortBasedOnPerm(t,tT(t.length,r)),tC=(t,r,s,i)=>{let n=`fn perm(i: ${i.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`;for(let s=0;s<r;++s)n+=`a[${t[s]}]=i[${s}];`;return n+"return a;}"},tA=(t,r)=>{let s=[],i=[];for(let n=0;n<t.length;++n)1!==t[n]&&s.push(t[n]),1!==t[r[n]]&&i.push(r[n]);return{newShape:s,newPerm:i}},tM=(t,r)=>{let s=0;for(let i=0;i<t.length;++i)if(1!==r[t[i]]){if(t[i]<s)return!1;s=t[i]}return!0},tO=(t,r)=>{let s=t.dataType,i=t.dims.length,n=tT(i,r),a=tI(t.dims,n),o=t.dims,l=a;if(i<2||tM(n,t.dims))return{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let r=tn.size(a);return{outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(r/64/4)},programUniforms:[{type:12,data:Math.ceil(r/4)}]}},getShaderSource:t=>{let r=tx("input",s,o,4),i=tv("output",s,l,4);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`}};let{newShape:u,newPerm:d}=tA(t.dims,n),c=tn.areEqual(d,[2,3,1]),p=tn.areEqual(d,[3,1,2]);return 2===u.length||c||p?(l=[(o=c?[u[0],u[1]*u[2]]:p?[u[0]*u[1],u[2]]:u)[1],o[0]],{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let r=tn.size(a);return{outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(l[1]/16),y:Math.ceil(l[0]/16)},programUniforms:[{type:12,data:r},...tf(o,l)]}},getShaderSource:t=>{let r=tx("a",s,o.length),i=tv("output",s,l.length);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}
  var<workgroup> tile : array<array<${i.type.value}, 17>, 16>;
  ${t.mainStart([16,16,1])}
    let stride = (uniforms.output_shape[1] - 1) / 16 + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * 16u + local_id.x;
    let input_row = workgroup_id_x * 16u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${r.getByIndices(`${r.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * 16u + local_id.x;
    let output_row = workgroup_id_y * 16u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${i.setByIndices(`${i.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`}}):{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let r=tn.size(a);return{outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:[{type:12,data:r},...tf(o,l)]}},getShaderSource:t=>{let r=tx("a",s,o.length),a=tv("output",s,l.length);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,a)}

  ${tC(n,i,r,a)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${a.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${a.setByOffset("global_idx",r.getByIndices("aIndices"))}
  }`}}},tB=(t,r)=>{tz(t.inputs),t.compute(tO(t.inputs[0],r.perm))},tP=t=>tr({perm:t.perm})}),oV=D(()=>{oO(),oU(),oF(),oj(),oq(),tR={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},tD={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},tL={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},tN={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},tU=(t,r)=>{let s=[];for(let i=r-t;i<r;++i)s.push(i);return s},tF=(t,r)=>{let s=[],i=t.length;for(let n=0;n<i;n++)-1===r.indexOf(n)&&s.push(t[n]);return[s,r.map(r=>t[r])]},tq=(t,r)=>{let s=t.length+r.length,i=[],n=0;for(let a=0;a<s;a++)-1===r.indexOf(a)?i.push(t[n++]):i.push(1);return i},tV=(t,r)=>{for(let s=0;s<t.length;++s)if(t[t.length-s-1]!==r-1-s)return!1;return!0},tj=(t,r)=>{let s=[];if(!tV(t,r)){for(let i=0;i<r;++i)-1===t.indexOf(i)&&s.push(i);t.forEach(t=>s.push(t))}return s},tG=(t,r,s,i,n,a,o)=>{let l=s[0].dims,u=tn.size(a),d=tn.size(o),c=tx("_A",s[0].dataType,l),p=tv("output",n,a),h=64;1===u&&(h=256);let f=`
          var<workgroup> aBestValues : array<f32, ${h}>;
       `;return{name:t,shaderCache:{hint:`${r};${h}`,inputDependencies:["type"]},getShaderSource:t=>`
        ${t.registerUniform("reduceSize","u32").declareVariables(c,p)}
        ${f}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${t.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${tL[i]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = f32(${c.getByOffset("offset + k")});
           bestValue = ${tR[i]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${tD[i]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${"mean"===i?`${p.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${p.type.storage}(${tN[i]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:a,dataType:n}],dispatchGroup:{x:u},programUniforms:[{type:12,data:d}]})}},tW=(t,r,s,i)=>{let n=1===t.inputs.length?s:t8(t.inputs,s),a=n.axes;0!==a.length||n.noopWithEmptyAxes||(a=t.inputs[0].dims.map((t,r)=>r));let o=tn.normalizeAxes(a,t.inputs[0].dims.length),l=o,u=t.inputs[0],d=tj(l,t.inputs[0].dims.length);d.length>0&&(u=t.compute(tO(t.inputs[0],d),{inputs:[0],outputs:[-1]})[0],l=tU(l.length,u.dims.length));let[c,p]=tF(u.dims,l),h=c;n.keepDims&&(h=tq(c,o)),t.compute(tG(r,n.cacheKey,[u],i,t.inputs[0].dataType,h,p),{inputs:[u]})},tH=(t,r)=>{tW(t,"ReduceMeanShared",r,"mean")},tK=(t,r)=>{tW(t,"ReduceL1Shared",r,"l1")},tX=(t,r)=>{tW(t,"ReduceL2Shared",r,"l2")},tY=(t,r)=>{tW(t,"ReduceLogSumExpShared",r,"logSumExp")},tQ=(t,r)=>{tW(t,"ReduceMaxShared",r,"max")},tZ=(t,r)=>{tW(t,"ReduceMinShared",r,"min")},tJ=(t,r)=>{tW(t,"ReduceProdShared",r,"prod")},t0=(t,r)=>{tW(t,"ReduceSumShared",r,"sum")},t1=(t,r)=>{tW(t,"ReduceSumSquareShared",r,"sumSquare")},t2=(t,r)=>{tW(t,"ReduceLogSumShared",r,"logSum")}}),oj=D(()=>{oO(),oU(),oN(),oF(),oV(),t3=t=>{if(!t||0===t.length||t.length>2)throw Error("Reduce op requires 1 or 2 inputs.");if(2===t.length&&1!==t[1].dims.length)throw Error("Invalid axes input dims.")},t4=t=>["","",`var value = ${t.getByIndices("input_indices")};`,""],t6=(t,r,s,i,n,a,o=!1,l=!1)=>{let u=[],d=s[0].dims,c=d.length,p=tn.normalizeAxes(n,c),h=!l&&0===p.length;d.forEach((t,r)=>{h||p.indexOf(r)>=0?o&&u.push(1):u.push(t)});let f=u.length,m=tn.size(u);return{name:t,shaderCache:r,getShaderSource:t=>{let r=[],n=tx("_A",s[0].dataType,c),l=tv("output",a,f),u=i(n,l,p),m=u[2];for(let t=0,s=0;t<c;t++)h||p.indexOf(t)>=0?(o&&s++,m=`for(var j${t}: u32 = 0; j${t} < ${d[t]}; j${t}++) {
                  ${u[2].includes("last_index")?`let last_index = j${t};`:""}
                  ${n.indicesSet("input_indices",t,`j${t}`)}
                  ${m}
                }`):(r.push(`${n.indicesSet("input_indices",t,l.indicesGet("output_indices",s))};`),s++);return`

        ${t.registerUniform("output_size","u32").declareVariables(n,l)}

        ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${n.type.indices};
          let output_indices = ${l.offsetToIndices("global_idx")};

          ${r.join(`
`)}
          ${u[0]}       // init ops for reduce max/min
          ${u[1]}
          ${m}
          ${u[3]}
          ${4===u.length?l.setByOffset("global_idx","value"):u.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:a}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...tf(d,u)]})}},t8=(t,r)=>{let s=[];return t[1].dims[0]>0&&t[1].getBigInt64Array().forEach(t=>s.push(Number(t))),tr({axes:s,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},t5=(t,r,s,i)=>{let n=t.inputs,a=1===n.length?s:t8(n,s);t.compute(t6(r,{hint:a.cacheKey,inputDependencies:["rank"]},[n[0]],a.noopWithEmptyAxes&&0===a.axes.length?t4:i,a.axes,n[0].dataType,a.keepDims,a.noopWithEmptyAxes),{inputs:[0]})},t9=(t,r)=>{t3(t.inputs),t5(t,"ReduceLogSum",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},t7=(t,r)=>{t3(t.inputs),t5(t,"ReduceL1",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},re=(t,r)=>{t3(t.inputs),t5(t,"ReduceL2",r,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},rt=(t,r)=>{t3(t.inputs),t5(t,"ReduceLogSumExp",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},rr=(t,r)=>{t3(t.inputs),t5(t,"ReduceMax",r,(t,r,s)=>{let i=[];for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&i.push(t.indicesSet("input_indices",r,0));return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},rs=(t,r)=>{t3(t.inputs),t5(t,"ReduceMean",r,(r,s,i)=>{let n=1;for(let s=0;s<r.rank;s++)(i.indexOf(s)>=0||0===i.length)&&(n*=t.inputs[0].dims[s]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${n});`]})},ri=(t,r)=>{t3(t.inputs),t5(t,"ReduceMin",r,(t,r,s)=>{let i=[];for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&i.push(`input_indices[${r}] = 0;`);return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},rn=(t,r)=>{t3(t.inputs),t5(t,"ReduceProd",r,(t,r)=>[`var value = ${r.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},ra=(t,r)=>{t3(t.inputs),t5(t,"ReduceSum",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},ro=(t,r)=>{t3(t.inputs),t5(t,"ReduceSumSquare",r,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},rl=(t,r,s)=>{if(0===r.length)return s;let i=1,n=1;for(let s=0;s<r.length;s++)-1===r.indexOf(s)?i*=t[s]:n*=t[s];return n<32&&i>1024},ru=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rs(t,r):tH(t,r)},rd=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?t7(t,r):tK(t,r)},rc=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?re(t,r):tX(t,r)},rp=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rt(t,r):tY(t,r)},rh=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rr(t,r):tQ(t,r)},rf=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ri(t,r):tZ(t,r)},rm=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rn(t,r):tJ(t,r)},r_=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ra(t,r):t0(t,r)},rg=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ro(t,r):t1(t,r)},ry=(t,r)=>{rl(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?t9(t,r):t2(t,r)}}),oG=D(()=>{oO(),oN(),oj(),rw=t=>{if(!t||0===t.length||t.length>2)throw Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==t[0].dataType)throw Error("Invalid input type.")},rb=(t,r)=>{rw(t.inputs),t.compute(t6("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],(t,s,i)=>{let n=[];for(let r=0;r<t.rank;r++)(i.indexOf(r)>=0||0===i.length)&&n.push(`input_indices[${r}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]},[r.axis],7,r.keepDims),{inputs:[0]})},rx=(t,r)=>{rw(t.inputs),t.compute(t6("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],(t,s,i)=>{let n=[];for(let r=0;r<t.rank;r++)(i.indexOf(r)>=0||0===i.length)&&n.push(`input_indices[${r}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]},[r.axis],7,r.keepDims),{inputs:[0]})},rv=t=>tr(t)}),oW=D(()=>{oO(),oU(),oD(),oF(),r$=(t,r)=>{let s=t[0],i=t[1],n=t[2],a=t[3],o=t[4],l=t[5];if(o&&l)throw Error("Attention cannot have both past and attention_bias");if(3!==s.dims.length)throw Error('Input "input" must have 3 dimensions');let u=s.dims[0],d=s.dims[1],c=s.dims[2];if(1!==n.dims.length)throw Error('Input "bias" is expected to have 1 dimensions');if(2!==i.dims.length)throw Error('Input "weights" is expected to have 2 dimensions');if(i.dims[0]!==c)throw Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==i.dims[1])throw Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=n.dims[0]/3,h=p,f=h;if(r.qkvHiddenSizes.length>0){if(3!==r.qkvHiddenSizes.length)throw Error("qkv_hidden_sizes attribute should have 3 elements");for(let t of r.qkvHiddenSizes)if(t%r.numHeads!=0)throw Error("qkv_hidden_sizes should be divisible by num_heads");p=r.qkvHiddenSizes[0],h=r.qkvHiddenSizes[1],f=r.qkvHiddenSizes[2]}if(p!==h)throw Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==p+h+f)throw Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let m=0;if(o){if(h!==f)throw Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==o.dims.length)throw Error('Input "past" must have 5 dimensions');if(2!==o.dims[0])throw Error('Input "past" first dimension must be 2');if(o.dims[1]!==u)throw Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==r.numHeads)throw Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==h/r.numHeads)throw Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(m=o.dims[3])}let _=d+m;if(a)throw Error("Mask not supported");if(o)throw Error("past is not supported");if(l){if(4!==l.dims.length)throw Error('Input "attention_bias" must have 4 dimensions');if(l.dims[0]!==u||l.dims[1]!==r.numHeads||l.dims[2]!==d||l.dims[3]!==_)throw Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:u,sequenceLength:d,pastSequenceLength:m,kvSequenceLength:d,totalSequenceLength:_,maxSequenceLength:-1,inputHiddenSize:c,hiddenSize:p,vHiddenSize:f,headSize:Math.floor(p/r.numHeads),vHeadSize:Math.floor(f/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:0,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},rk=(t,r,s)=>r&&t?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${t?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${s?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,rE=(t,r,s,i,n,a,o,l)=>{let u=tm(o?1:a),d=64,c=a/u;c<64&&(d=32);let p=[{type:12,data:r},{type:12,data:s},{type:12,data:i},{type:12,data:n},{type:12,data:c},{type:12,data:Math.ceil(a/u/d)}],h=tp(t.dataType,u),f=th(1,u),m=["type"];return o&&m.push("type"),l&&m.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${d};${h};${u}`,inputDependencies:m},getShaderSource:r=>{let s=tv("x",t.dataType,t.dims,u),i=[s],n=o?tx("seq_lens",o.dataType,o.dims):void 0;n&&i.push(n);let a=l?tx("total_sequence_length_input",l.dataType,l.dims):void 0;a&&i.push(a);let c=th(t.dataType);return`
  var<workgroup> thread_max: array<f32, ${d}>;
  var<workgroup> thread_sum: array<f32, ${d}>;
  ${r.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...i)}
  ${r.mainStart([d,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${rk(n,a,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${d}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(u){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw Error(`Unsupported components: ${u}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${d}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(u){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw Error(`Unsupported components: ${u}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${d}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${s.type.value}(${c}(1.0) / ${c}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${s.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${s.type.value}(${c}(0));
        }`:""};
  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(a/d),y:n,z:r*s},programUniforms:p})}},rS=(t,r,s,i,n,a,o,l,u)=>{let d=o+a.kvSequenceLength,c=[a.batchSize,a.numHeads,a.sequenceLength,d],p=t>1&&i,h=a.kvNumHeads?a.kvNumHeads:a.numHeads,f=p?[a.batchSize,h,d,a.headSize]:void 0,m=a.nReps?a.nReps:1,_=0===a.scale?1/Math.sqrt(a.headSize):a.scale,g=tm(a.headSize),y=a.headSize/g,w={x:Math.ceil(d/12),y:Math.ceil(a.sequenceLength/12),z:a.batchSize*a.numHeads},b=[{type:12,data:a.sequenceLength},{type:12,data:y},{type:12,data:d},{type:12,data:a.numHeads},{type:12,data:a.headSize},{type:1,data:_},{type:12,data:o},{type:12,data:a.kvSequenceLength},{type:12,data:m}],x=p&&i&&tn.size(i.dims)>0,v=["type","type"];x&&v.push("type"),n&&v.push("type"),l&&v.push("type"),u&&v.push("type");let $=[{dims:c,dataType:r.dataType,gpuDataType:0}];return p&&$.push({dims:f,dataType:r.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${g};${void 0!==n};${void 0!==i};${t}`,inputDependencies:v},getRunData:()=>({outputs:$,dispatchGroup:w,programUniforms:b}),getShaderSource:t=>{let a=tx("q",r.dataType,r.dims,g),o=[a,tx("key",s.dataType,s.dims,g)];if(x){let t=tx("past_key",i.dataType,i.dims,g);o.push(t)}n&&o.push(tx("attention_bias",n.dataType,n.dims));let d=l?tx("seq_lens",l.dataType,l.dims):void 0;d&&o.push(d);let h=u?tx("total_sequence_length_input",u.dataType,u.dims):void 0;h&&o.push(h);let _=tv("output",r.dataType,c),y=[_];p&&y.push(tv("present_key",r.dataType,f,g));let w=th(1,g);return`
  const TILE_SIZE = 12u;

  var<workgroup> tileQ: array<${a.type.storage}, 144>;
  var<workgroup> tileK: array<${a.type.storage}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...o,...y)}
  ${t.mainStart([12,12,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${1===m?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${1===m?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${rk(d,h,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${x&&p?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${p?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${w}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${x&&p?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${p?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${w}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(g){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw Error(`Unsupported components: ${g}`)}})()};
        output[outputIdx] = ${_.type.value} (sum * uniforms.alpha) + ${n?"attention_bias[outputIdx]":"0.0"};
    }
  }`}}},rz=(t,r,s,i,n,a,o,l)=>{let u=a+n.kvSequenceLength,d=n.nReps?n.nReps:1,c=n.vHiddenSize*d,p=t>1&&i,h=n.kvNumHeads?n.kvNumHeads:n.numHeads,f=p?[n.batchSize,h,u,n.headSize]:void 0,m=[n.batchSize,n.sequenceLength,c],_={x:Math.ceil(n.vHeadSize/12),y:Math.ceil(n.sequenceLength/12),z:n.batchSize*n.numHeads},g=[{type:12,data:n.sequenceLength},{type:12,data:u},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:12,data:c},{type:12,data:a},{type:12,data:n.kvSequenceLength},{type:12,data:d}],y=p&&i&&tn.size(i.dims)>0,w=["type","type"];y&&w.push("type"),o&&w.push("type"),l&&w.push("type");let b=[{dims:m,dataType:r.dataType,gpuDataType:0}];return p&&b.push({dims:f,dataType:r.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${void 0!==i};${t}`,inputDependencies:w},getRunData:()=>({outputs:b,dispatchGroup:_,programUniforms:g}),getShaderSource:t=>{let n=tx("probs",r.dataType,r.dims),a=[n,tx("v",s.dataType,s.dims)];y&&a.push(tx("past_value",i.dataType,i.dims));let u=o?tx("seq_lens",o.dataType,o.dims):void 0;o&&a.push(u);let c=l?tx("total_sequence_length_input",l.dataType,l.dims):void 0;l&&a.push(c);let h=[tv("output",r.dataType,m)];return p&&h.push(tv("present_value",r.dataType,f)),`
  const TILE_SIZE = 12u;
  var<workgroup> tileQ: array<${n.type.value}, 144>;
  var<workgroup> tileV: array<${n.type.value}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...a,...h)}
  ${t.mainStart([12,12,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${1===d?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${1===d?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${rk(u,c,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${y&&p?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${p?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${n.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${y&&p?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${p?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},rT=(t,r,s,i,n,a,o,l,u,d,c,p)=>{let h=Math.min(t.outputCount,1+(o?1:0)+(l?1:0)),f=h>1?d.pastSequenceLength:0,m=f+d.kvSequenceLength,_=u&&tn.size(u.dims)>0?u:void 0,g=[r,s];h>1&&o&&tn.size(o.dims)>0&&g.push(o),_&&g.push(_),c&&g.push(c),p&&g.push(p);let y=t.compute(rS(h,r,s,o,_,d,f,c,p),{inputs:g,outputs:h>1?[-1,1]:[-1]})[0];t.compute(rE(y,d.batchSize,d.numHeads,f,d.sequenceLength,m,c,p),{inputs:c&&p?[y,c,p]:[y],outputs:[]});let w=[y,i];h>1&&l&&tn.size(l.dims)>0&&w.push(l),c&&w.push(c),p&&w.push(p),t.compute(rz(h,y,i,l,d,f,c,p),{inputs:w,outputs:h>1?[0,2]:[0]})},rI=(t,r)=>{let s=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],i=r.sequenceLength,n=r.inputHiddenSize,a=r.headSize,o={x:Math.ceil(r.headSize/12),y:Math.ceil(r.sequenceLength/12),z:r.batchSize*r.numHeads},l=[t.inputs[0],t.inputs[1],t.inputs[2]],u=[{type:12,data:i},{type:12,data:n},{type:12,data:a},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}];return t.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:t=>{let r=tv("output_q",l[0].dataType,s),i=tv("output_k",l[0].dataType,s),n=tv("output_v",l[0].dataType,s),a=tx("input",l[0].dataType,l[0].dims),o=tx("weight",l[1].dataType,l[1].dims),u=tx("bias",l[2].dataType,l[2].dims),d=a.type.storage;return`
  const TILE_SIZE = 12u;
  var<workgroup> tileInput: array<${d}, 144>;
  var<workgroup> tileWeightQ: array<${d}, 144>;
  var<workgroup> tileWeightK: array<${d}, 144>;
  var<workgroup> tileWeightV: array<${d}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(a,o,u,r,i,n)}
  ${t.mainStart([12,12,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${d}(0);
    var valueK = ${d}(0);
    var valueV = ${d}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`}},{inputs:l,outputs:[-1,-1,-1]})},rC=(t,r)=>{let s=r$(t.inputs,r),[i,n,a]=rI(t,s);return rT(t,i,n,a,t.inputs[4],void 0,void 0,void 0,t.inputs[5],s)}}),oH=D(()=>{ea(),oO(),oU(),oN(),oF(),rA=(t,r)=>{if(!t||5!==t.length)throw Error("BatchNormalization requires 5 inputs");let s=(t,r,s)=>{let i=r.length;if(i!==t.length)throw Error(`${s}: num dimensions != ${i}`);r.forEach((r,i)=>{if(r!==t[i])throw Error(`${s}: dim[${i}] do not match`)})};if(t[0].dims.length>1){let i="NHWC"===r.format?r.spatial?t[0].dims.slice(-1):t[0].dims.slice(-1).concat(t[0].dims.slice(1,t[0].dims.length-1)):t[0].dims.slice(1,r.spatial?2:void 0);s(t[1].dims,i,"Invalid input scale"),s(t[2].dims,i,"Invalid input B"),s(t[3].dims,i,"Invalid input mean"),s(t[4].dims,i,"Invalid input var")}else s(t[1].dims,[1],"Invalid input scale"),s(t[2].dims,[1],"Invalid input B"),s(t[3].dims,[1],"Invalid input mean"),s(t[4].dims,[1],"Invalid input var")},rM=(t,r)=>{let{epsilon:s,spatial:i,format:n}=r,a=t[0].dims,o=i?tm(a[a.length-1]):1,l="NHWC"===n&&a.length>1?o:1,u=tn.size(a)/o,d=i?a.length:a,c=tx("x",t[0].dataType,t[0].dims,o),p=tx("scale",t[1].dataType,t[1].dims,l),h=tx("bias",t[2].dataType,t[2].dims,l),f=tx("inputMean",t[3].dataType,t[3].dims,l),m=tx("inputVar",t[4].dataType,t[4].dims,l),_=tv("y",t[0].dataType,d,o),g=()=>{let t="";if(i)t=`let cOffset = ${1===a.length?"0u":"NHWC"===n?`outputIndices[${a.length-1}] / ${o}`:"outputIndices[1]"};`;else if("NCHW"===n)t=`
            ${_.indicesSet("outputIndices","0","0")}
            let cOffset = ${_.indicesToOffset("outputIndices")};`;else{t=`var cIndices = ${p.type.indices}(0);
                       cIndices[0] = outputIndices[${a.length-1}];`;for(let r=1;r<p.rank;r++)t+=`cIndices[${r}] = outputIndices[${r}];`;t+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return t};return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${i}_${o}`,inputDependencies:i?["rank","type","type","type","type"]:void 0},getShaderSource:t=>`
  const epsilon = ${s};
  ${t.registerUniform("outputSize","u32").declareVariables(c,p,h,f,m,_)}
  ${t.mainStart()}
  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${_.offsetToIndices(`global_idx * ${o}`)};
    ${g()}
    let scale = ${p.getByOffset("cOffset")};
    let bias = ${h.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${m.getByOffset("cOffset")};
    let x = ${c.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${_.setByOffset("global_idx","value")}
  }`,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:i?[{type:12,data:u},...tf(a)]:[{type:12,data:u}]})}},rO=t=>tr(t),rB=(t,r)=>{let{inputs:s,outputCount:i}=t,n=rO({...r,outputCount:i});if(u.webgpu.validateInputContent&&rA(s,n),r.trainingMode)throw Error("BatchNormalization trainingMode is not supported yet.");t.compute(rM(s,n))}}),oK=D(()=>{oU(),oF(),rP=t=>{if(3!==t[0].dims.length)throw Error("input should have 3 dimensions");if(![320,640,1280].includes(t[0].dims[2]))throw Error("number of channels should be 320, 640 or 1280");if(1!==t[1].dims.length)throw Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw Error("last dimension of input and bias are not the same")},rR=t=>{let r=t[0].dims,s=t[0].dims[2],i=tn.size(r)/4,n=t[0].dataType,a=tx("input",n,r,4),o=tx("bias",n,[s],4),l=tx("residual",n,r,4),u=tv("output",n,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:t=>`
  const channels = ${s}u / 4;
  ${t.declareVariables(a,o,l,u)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let value = ${a.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${l.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},rD=t=>{rP(t.inputs),t.compute(rR(t.inputs))}}),oX=D(()=>{oO(),oU(),oN(),oF(),rL=(t,r,s,i,n,a,o)=>{let l=Math.ceil(r/4),u="";u="string"==typeof n?`${n}(a)`:n("a");let d=tx("inputData",s,[l],4),c=tv("outputData",i,[l],4),p=[{name:"vec_size",type:"u32"}];return o&&p.push(...o),`
      ${t.registerUniforms(p).declareVariables(d,c)}

  ${a??""}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${d.getByOffset("global_idx")};
    ${c.setByOffset("global_idx",u)}
  }`},rN=(t,r,s,i,n,a=t.dataType,o,l)=>{let u=[{type:12,data:Math.ceil(tn.size(t.dims)/4)}];return o&&u.push(...o),{name:r,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:r=>rL(r,tn.size(t.dims),t.dataType,a,s,i,l),getRunData:r=>({outputs:[{dims:t.dims,dataType:a}],dispatchGroup:{x:Math.ceil(tn.size(r[0].dims)/64/4)},programUniforms:u})}},rU=t=>{t.compute(rN(t.inputs[0],"Abs","abs"))},rF=t=>{t.compute(rN(t.inputs[0],"Acos","acos"))},rq=t=>{t.compute(rN(t.inputs[0],"Acosh","acosh"))},rV=t=>{t.compute(rN(t.inputs[0],"Asin","asin"))},rj=t=>{t.compute(rN(t.inputs[0],"Asinh","asinh"))},rG=t=>{t.compute(rN(t.inputs[0],"Atan","atan"))},rW=t=>{t.compute(rN(t.inputs[0],"Atanh","atanh"))},rH=t=>tr(t),rK=(t,r)=>{let s;switch(r.to){case 10:s="vec4<f16>";break;case 1:s="vec4<f32>";break;case 12:s="vec4<u32>";break;case 6:s="vec4<i32>";break;case 9:s="vec4<bool>";break;default:throw RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}t.compute(rN(t.inputs[0],"Cast",s,void 0,r.cacheKey,r.to))},rX=t=>{let r,s,i=t.length>=2&&0!==t[1].data,n=t.length>=3&&0!==t[2].data;switch(t[0].dataType){case 1:r=i?t[1].getFloat32Array()[0]:-34028234663852886e22,s=n?t[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=i?t[1].getUint16Array()[0]:64511,s=n?t[2].getUint16Array()[0]:31743;break;default:throw Error("Unsupport data type")}return tr({min:r,max:s})},rY=(t,r)=>{let s=r||rX(t.inputs),i=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"Clip",t=>`clamp(${t}, vec4<${i}>(uniforms.min), vec4<${i}>(uniforms.max))`,void 0,s.cacheKey,void 0,[{type:t.inputs[0].dataType,data:s.min},{type:t.inputs[0].dataType,data:s.max}],[{name:"min",type:i},{name:"max",type:i}]),{inputs:[0]})},rQ=t=>{t.compute(rN(t.inputs[0],"Ceil","ceil"))},rZ=t=>{t.compute(rN(t.inputs[0],"Cos","cos"))},rJ=t=>{t.compute(rN(t.inputs[0],"Cosh","cosh"))},r0=t=>tr(t),r1=(t,r)=>{let s=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${s}(${r.alpha});

  fn elu_f32(a: ${s}) -> ${s} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${s}>) -> vec4<${s}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},r2=(t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: vec4<${t}>) -> vec4<${t}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,r3=t=>{let r=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"Erf",t=>`erf_vf32(${t})`,r2(r)))},r4=t=>{t.compute(rN(t.inputs[0],"Exp","exp"))},r6=t=>{t.compute(rN(t.inputs[0],"Floor","floor"))},r8=t=>{let r=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,r2(r)))},r5=(t,r)=>{let s=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${s}>(0.0))`,`const leaky_relu_alpha_ = ${s}(${r.alpha});`,r.cacheKey))},r9=t=>{t.compute(rN(t.inputs[0],"Not",t=>`!${t}`))},r7=t=>{t.compute(rN(t.inputs[0],"Neg",t=>`-${t}`))},se=t=>{t.compute(rN(t.inputs[0],"Reciprocal",t=>`1.0/${t}`))},st=t=>{let r=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},sr=t=>{t.compute(rN(t.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},ss=t=>tr(t),si=(t,r)=>{let s=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"HardSigmoid",t=>`max(vec4<${s}>(0.0), min(vec4<${s}>(1.0), ${r.alpha} * ${t} + vec4<${s}>(${r.beta})))`,void 0,r.cacheKey))},sn=t=>{t.compute(rN(t.inputs[0],"Sin","sin"))},sa=t=>{t.compute(rN(t.inputs[0],"Sinh","sinh"))},so=t=>{t.compute(rN(t.inputs[0],"Sqrt","sqrt"))},sl=t=>{t.compute(rN(t.inputs[0],"Tan","tan"))},su=t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`,sd=t=>{t.compute(rN(t.inputs[0],"Tanh",su))},sc=(t="f32")=>`
const fast_gelu_a: ${t} = 0.5;
const fast_gelu_b: ${t} = 0.7978845608028654;
const fast_gelu_c: ${t} = 0.035677408136300125;

fn tanh_v(v: vec4<${t}>) -> vec4<${t}> {
  return ${su("v")};
}
`,sp=t=>`(fast_gelu_a + fast_gelu_a * tanh_v(${t} * (fast_gelu_c * ${t} * ${t} + fast_gelu_b))) * ${t}`,sh=t=>{let r=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"FastGelu",sp,sc(r),void 0,t.inputs[0].dataType))},sf=(t,r)=>{let s=th(t.inputs[0].dataType);return t.compute(rN(t.inputs[0],"ThresholdedRelu",t=>`select(vec4<${s}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${s}>(${r.alpha});`,r.cacheKey)),0},sm=t=>{t.compute(rN(t.inputs[0],"Log","log"))},s_=(t,r)=>`
const alpha = vec4<${t}>(${r});
const one = ${t}(1.0);
const zero = ${t}(0.0);

fn quick_gelu_impl(x: vec4<${t}>) -> vec4<${t}> {
  let v = x *alpha;
  var x1 : vec4<${t}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,sg=t=>`quick_gelu_impl(${t})`,sy=(t,r)=>{let s=th(t.inputs[0].dataType);t.compute(rN(t.inputs[0],"QuickGelu",sg,s_(s,r.alpha),r.cacheKey,t.inputs[0].dataType))}}),oY=D(()=>{oU(),oF(),oX(),sw=t=>{if(3!==t[0].dims.length)throw Error("input should have 3 dimensions");if(![2560,5120,10240].includes(t[0].dims[2]))throw Error("hidden state should be 2560, 5120 or 10240");if(1!==t[1].dims.length)throw Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw Error("last dimension of input and bias are not the same")},sb=t=>{let r=t[0].dims.slice();r[2]=r[2]/2;let s=tx("input",t[0].dataType,t[0].dims,4),i=tx("bias",t[0].dataType,[t[0].dims[2]],4),n=tv("output",t[0].dataType,r,4),a=tn.size(r)/4,o=tp(t[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:r=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${t[0].dims[2]/4/2}u;

  ${r.declareVariables(s,i,n)}

  ${r2(o)}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},sx=t=>{sw(t.inputs),t.compute(sb(t.inputs))}}),oQ=D(()=>{oO(),oU(),oF(),sv=(t,r,s,i,n,a,o,l,u,d,c,p)=>{let h,f;"string"==typeof l?h=f=(t,r)=>`${l}((${t}),(${r}))`:"function"==typeof l?h=f=l:(h=l.scalar,f=l.vector);let m=tv("outputData",c,i.length,4),_=tx("aData",u,r.length,4),g=tx("bData",d,s.length,4),y;if(n){if(a){let t=1===tn.size(r),i=1===tn.size(s),n=r.length>0&&r[r.length-1]%4==0,a=s.length>0&&s[s.length-1]%4==0;y=t||i?m.setByOffset("global_idx",f(t?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"),i?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"))):`
            let outputIndices = ${m.offsetToIndices("global_idx * 4u")};
            let offsetA = ${_.broadcastedIndicesToOffset("outputIndices",m)};
            let offsetB = ${g.broadcastedIndicesToOffset("outputIndices",m)};
            ${m.setByOffset("global_idx",f(o||n?_.getByOffset("offsetA / 4u"):`${_.type.value}(${_.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||a?g.getByOffset("offsetB / 4u"):`${g.type.value}(${g.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else y=m.setByOffset("global_idx",f(_.getByOffset("global_idx"),g.getByOffset("global_idx")))}else{if(!a)throw Error("no necessary to use scalar implementation for element-wise binary op implementation.");let t=(t,r,s="")=>{let i=`aData[indexA${r}][componentA${r}]`,n=`bData[indexB${r}][componentB${r}]`;return`
            let outputIndices${r} = ${m.offsetToIndices(`global_idx * 4u + ${r}u`)};
            let offsetA${r} = ${_.broadcastedIndicesToOffset(`outputIndices${r}`,m)};
            let offsetB${r} = ${g.broadcastedIndicesToOffset(`outputIndices${r}`,m)};
            let indexA${r} = offsetA${r} / 4u;
            let indexB${r} = offsetB${r} / 4u;
            let componentA${r} = offsetA${r} % 4u;
            let componentB${r} = offsetB${r} % 4u;
            ${t}[${r}] = ${s}(${h(i,n)});
          `};y=9===c?`
            var data = vec4<u32>(0);
            ${t("data",0,"u32")}
            ${t("data",1,"u32")}
            ${t("data",2,"u32")}
            ${t("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${t("outputData[global_idx]",0)}
            ${t("outputData[global_idx]",1)}
            ${t("outputData[global_idx]",2)}
            ${t("outputData[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(_,g,m)}

        ${p??""}

        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${y}
      }`},s$=(t,r,s,i,n,a,o=s.dataType)=>{let l=s.dims.map(t=>Number(t)??1),u=i.dims.map(t=>Number(t)??1),d=!tn.areEqual(l,u),c=l,p=tn.size(l),h=!1,f=!1,m=[d];if(d){let t=ti.calcShape(l,u,!1);if(!t)throw Error("Can't perform binary op on the given tensors");c=t.slice(),p=tn.size(c);let r=1===tn.size(l),s=1===tn.size(u),i=l.length>0&&l[l.length-1]%4==0,n=u.length>0&&u[u.length-1]%4==0;m.push(r),m.push(s),m.push(i),m.push(n);let a=1;for(let t=1;t<c.length;t++){let r=l[l.length-t];if(r===u[u.length-t])a*=r;else break}a%4==0?(f=!0,h=!0):(r||s||i||n)&&(h=!0)}else h=!0;return m.push(h),{name:t,shaderCache:{hint:r+m.map(t=>t.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:t=>sv(t,l,u,c,h,d,f,n,s.dataType,i.dataType,o,a),getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:Math.ceil(tn.size(c)/4)},...tf(l,u,c)]})}},sk=(t,r,s,i,n,a)=>{t.compute(s$(r,n??"",t.inputs[0],t.inputs[1],s,i,a))},sE=t=>{sk(t,"Add",(t,r)=>`${t}+${r}`)},sS=t=>{sk(t,"Div",(t,r)=>`${t}/${r}`)},sz=t=>{sk(t,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},sT=t=>{sk(t,"Mul",(t,r)=>`${t}*${r}`)},sI=t=>{let r=tx("input",t.inputs[0].dataType,t.inputs[0].dims).type.value;sk(t,"Pow",{scalar:(t,r)=>`pow_custom(${t},${r})`,vector:(t,r)=>`pow_vector_custom(${t},${r})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${"i32"===r?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},sC=t=>{sk(t,"Sub",(t,r)=>`${t}-${r}`)},sA=t=>{sk(t,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},sM=t=>{sk(t,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},sO=t=>{sk(t,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},sB=t=>{sk(t,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),oZ=D(()=>{oO(),oU(),oN(),oF(),sP=(t,r)=>{if(!t||t.length<1)throw Error("too few inputs");let s=t[0],i=s.dataType,n=s.dims.length;t.forEach((t,a)=>{if(0!==a){if(t.dataType!==i)throw Error("input tensors should be one type");if(t.dims.length!==n)throw Error("input tensors should have the same shape");t.dims.forEach((t,i)=>{if(i!==r&&t!==s.dims[i])throw Error("non concat dimensions must match")})}})},sR=(t,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${t}u>(${r});
    for (var i: u32 = 0u; i < ${t}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${t}u;
  }`,sD=(t,r)=>{let s=t.length,i=[];for(let n=0;n<s;++n){let a=r.setByOffset("global_idx",t[n].getByIndices("indices"));1===s?i.push(a):0===n?i.push(`if (inputIndex == ${n}u) { ${a} }`):n===s-1?i.push(`else { ${a} }`):i.push(`else if (inputIndex == ${n}) { ${a} }`)}return i.join(`
`)},sL=(t,r,s,i)=>{let n=tn.size(s),a=Array(t.length),o=Array(t.length),l=0,u=[],d=[],c=[{type:12,data:n}];for(let s=0;s<t.length;++s)l+=t[s].dims[r],a[s]=l,d.push(t[s].dims.length),o[s]=tx(`input${s}`,i,d[s]),u.push("rank"),c.push({type:12,data:a[s]});for(let r=0;r<t.length;++r)c.push(...tf(t[r].dims));c.push(...tf(s));let p=tv("output",i,s.length),h=p.indicesGet("indices",r),f=Array.from(Array(a.length).keys()).map(t=>`uniforms.sizeInConcatAxis${t}`).join(",");return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:r=>`

  ${(()=>{r.registerUniform("outputSize","u32");for(let s=0;s<t.length;s++)r.registerUniform(`sizeInConcatAxis${s}`,"u32");return r.declareVariables(...o,p)})()}

  ${sR(a.length,f)}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${p.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${h});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${a.length}u>(${f});
      ${h} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${sD(o,p)}
  }`}},sN=(t,r)=>{let s=t.inputs,i=s[0].dims,n=tn.normalizeAxis(r.axis,i.length);sP(s,n);let a=i.slice();a[n]=s.reduce((t,r)=>t+(r.dims.length>n?r.dims[n]:0),0);let o=s.filter(t=>tn.size(t.dims)>0);t.compute(sL(o,n,a,s[0].dataType),{inputs:o})},sU=t=>tr({axis:t.axis})}),oJ=D(()=>{oO(),oU(),sF=(t,r,s="f32")=>{switch(t.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${s}(uniforms.clip_min)), ${r}(${s}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${s}(uniforms.alpha) * value + ${s}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${s}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw Error(`Unsupported activation ${t.activation}`)}},sq=(t,r)=>{"Clip"===t.activation?r.push({type:1,data:t.clipMax},{type:1,data:t.clipMin}):"HardSigmoid"===t.activation?r.push({type:1,data:t.alpha},{type:1,data:t.beta}):"LeakyRelu"===t.activation&&r.push({type:1,data:t.alpha})},sV=(t,r)=>{"Clip"===t.activation?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===t.activation?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===t.activation&&r.push({name:"alpha",type:"f32"})},sj=t=>{let r=t?.activation||"";if("HardSigmoid"===r){let[s,i]=t?.activation_params||[.2,.5];return{activation:r,alpha:s,beta:i}}if("Clip"===r){let[s,i]=t?.activation_params||[tl,tu];return{activation:r,clipMax:i,clipMin:s}}if("LeakyRelu"===r){let[s]=t?.activation_params||[.01];return{activation:r,alpha:s}}return{activation:r}}}),o0=D(()=>{sG=(t,r)=>{switch(t){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw Error(`${t}-component is not supported.`)}},sW=t=>`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      `}),o1=D(()=>{sH=t=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${t}.x), i32(${t}.y), i32(${t}.z), 1));
}
`}),o2=D(()=>{oO(),oU(),oF(),oJ(),sK=(t,r,s,i,n)=>{let a=i-s;return`
      ${Array.from({length:s}).map((s,o)=>`
      if (${tw(r.shape,o,r.rank)} != 1) {
        ${r.indicesSet(t,o,tw(n,o+a,i))}
      } else {
        ${r.indicesSet(t,o,0)}
      }`).join("")}
`},sX=(t,r,s,i,n=!1,a)=>{let o=t[0].dims,l=t[1].dims,u=o[o.length-2],d=l[l.length-1],c=o[o.length-1],p=tm(d),h=tm(c),f=tm(u),m=tn.size(s)/p/f,_=t.length>2,g=i?i.slice(0,-2):s.slice(0,-2),y=[tn.size(g),u,d],w=[{type:12,data:m},{type:12,data:u},{type:12,data:d},{type:12,data:c}];return sq(r,w),w.push(...tf(g,o,l)),_&&w.push(...tf(t[2].dims)),w.push(...tf(y)),{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${p};${h};${f};${n}`,inputDependencies:_?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:a?a(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:w}),getShaderSource:i=>{let a=tk("batch_dims",t[0].dataType,g.length),u=tx("a",t[0].dataType,o.length,h),d=tx("b",t[1].dataType,l.length,p),c=tv("output",t[0].dataType,y.length,p),m=tp(c.type.tensor),w=sF(r,c.type.value,m),b=[u,d],x="";if(_){let r=n?p:1;b.push(tx("bias",t[2].dataType,t[2].dims.length,r)),x=`${n?`value += bias[col / ${r}];`:`value += ${c.type.value}(bias[row + i]);`}`}let v=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return sV(r,v),`
  ${i.registerUniforms(v).registerInternalVariables(a).declareVariables(...b,c)}
  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${p})) * ${p};
    var index1 = global_idx / (uniforms.N / ${p});
    let stride1 = uniforms.M / ${f};
    let row = (index1 % stride1) * ${f};
    let batch = index1 / stride1;

    ${2===s.length?"":`let batch_indices = ${a.offsetToIndices("batch")};`}

    var a_indices: ${u.type.indices};
    ${sK("a_indices",u,u.rank-2,a.rank,"batch_indices")}
    ${u.indicesSet("a_indices",u.rank-2,0)}
    ${u.indicesSet("a_indices",u.rank-1,0)}
    let a_offset = ${u.indicesToOffset("a_indices")};

    var b_indices: ${d.type.indices};
    ${sK("b_indices",d,d.rank-2,a.rank,"batch_indices")}
    ${d.indicesSet("b_indices",d.rank-2,0)}
    ${d.indicesSet("b_indices",d.rank-1,0)}
    let b_offset = ${d.indicesToOffset("b_indices")};
    var values: array<${c.type.value}, ${f}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${(()=>{let t=`var a_data: ${u.type.value};`;for(let r=0;r<h;r++)t+=`
              let b_data${r} = b[(b_offset + (k + ${r}) * uniforms.N + col) / ${p}];`;for(let r=0;r<f;r++){t+=`a_data = a[(a_offset + (row + ${r}) * uniforms.K + k) / ${h}];`;for(let s=0;s<h;s++)t+=`
            values[${r}] = fma(${d.type.value}(a_data${1===h?"":`[${s}]`}), b_data${s}, values[${r}]);
`}return t})()}
    }
    for (var i = 0u; i < ${f}u; i++) {
      var value = values[i];
      ${x}
      ${w}
      let cur_indices = ${c.type.indices}(batch, row + i, col);
      let offset = ${c.indicesToOffset("cur_indices")};
      ${c.setByOffset(`offset / ${p}`,"value")};
    }
  }
  `}}}}),o3=D(()=>{oO(),oU(),oF(),oJ(),o2(),o0(),sY=(t,r)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,sQ=(t,r)=>t?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${3===r?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${3===r?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${3===r?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,sZ=(t,r,s="f32",i,n=!1,a=32,o=!1,l=32)=>{let u=r[1]*t[1],d=r[0]*t[0],c=n?u:a,p=n?a:u,h=c/r[0],f=a/r[1];if(!((n&&4===h&&4===t[1]||!n&&(3===h||4===h))&&c%r[0]==0&&a%r[1]==0&&4===t[0]))throw Error(`If transposeA ${n} is true, innerElementSize ${h} and workPerThread[1] ${t[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${c} must be divisible by workgroupSize[0]${r[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${t[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${s}>, ${c/h}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${s}>, ${d/t[0]}>, ${a}>;

const rowPerThread = ${t[1]};
const colPerThread = ${t[0]};
const innerElementSize = ${h};
const tileInner = ${a};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let num_tiles = ${o?`${Math.ceil(l/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${l}`:"0"};

  var acc: array<vec4<${s}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${f};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${sY(n,i)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${i?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${3===h?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${sQ(n,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},sJ=(t,r)=>t?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,s0=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",s1=(t,r,s="f32",i,n=!1,a=32,o=!1,l=32,u=!1)=>{let d=t[1]*r[1],c=t[0]*r[0],p=n?d:a,h=n?a:d;if(!(h%r[1]==0&&p%r[0]==0&&a%r[1]==0))throw Error(`tileAHight ${h} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}, tileInner ${a} must be divisible by workgroupSize[1]${r[1]}`);let f=h/r[1],m=p/r[0],_=a/r[1],g=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${d};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          ${sJ(n,i)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${i?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${s}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${d};

let tileRowA = i32(localId.y) * ${f};
let tileColA = i32(localId.x) * ${m};
let tileRowB = i32(localId.y) * ${_};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${sJ(n,i)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${i?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${s}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${s0(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${s}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${s}, ${c}>, ${a}>;
  const rowPerThread = ${t[1]};
  const colPerThread = ${t[0]};
  const tileInner = ${a};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(l/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${l}`:"0"};

    var acc : array<array<${s}, colPerThread>, rowPerThread>;
    ${g}
  }
`},s2=(t,r,s,i,n=!1)=>{let[a,o,l,u]=i,d=tp(i[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${sG(t,d)} {
      var value = ${sG(t,d)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${sK("aIndices",o,o.rank-2,a.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${sG(t,d)} {
      var value = ${sG(t,d)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${l.type.indices};
        ${sK("bIndices",l,l.rank-2,a.rank,"batchIndices")}
        ${l.indicesSet("bIndices",l.rank-2,"u32(row)")}
        ${l.indicesSet("bIndices",l.rank-1,"u32(colIn)")}
        value = ${l.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${sG(t,d)}) {
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${n?"bias[colIn]":`${sG(t,d)}(bias[row])`};`:""}
        ${s}
        ${u.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},s3=(t,r,s,i,n=!1,a)=>{let o=t[0].dims,l=t[1].dims,u=o.slice(0,-2),d=l.slice(0,-2),c=i?i.slice(0,-2):s.slice(0,-2),p=tn.size(c),h=o[o.length-2],f=o[o.length-1],m=l[l.length-1],_=f%4==0&&m%4==0,g=h<=8?[4,1,1]:[4,4,1],y=[8,8,1],w=[Math.ceil(m/y[0]/g[0]),Math.ceil(h/y[1]/g[1]),Math.ceil(p/y[2]/g[2])],b=_?4:1,x=[...u,h,f/b],v=x.length,$=[...d,f,m/b],k=$.length,E=[p,h,m/b],S=[{type:6,data:h},{type:6,data:m},{type:6,data:f}];sq(r,S),S.push(...tf(c,x,$));let z=["rank","rank"],T=t.length>2;return T&&(S.push(...tf(t[2].dims)),z.push("rank")),S.push(...tf(E)),{name:"MatMul",shaderCache:{hint:`${g};${r.activation};${_};${n}`,inputDependencies:z},getRunData:()=>({outputs:[{dims:a?a(s):s,dataType:t[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:S}),getShaderSource:s=>{let i=c.length,a=tk("batchDims",t[0].dataType,i,1),o=tp(t[0].dataType),l=tx("a",t[0].dataType,v,b),u=tx("b",t[1].dataType,k,b),d=tv("result",t[0].dataType,E.length,b),p=[l,u];if(T){let r=n?b:1;p.push(tx("bias",t[2].dataType,t[2].dims.length,r))}let h=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];sV(r,h);let f=tp(d.type.tensor),m=s2(b,T,sF(r,d.type.value,f),[a,l,u,d],n);return`
  ${s.registerUniforms(h).registerInternalVariables(a).declareVariables(...p,d)}
  ${m}
  ${_?sZ(g,y,o,a):s1(g,y,o,a)}
                   `}}}}),o4=D(()=>{oO(),oP(),oF(),oJ(),o0(),o1(),o3(),s4=(t,r,s,i,n=!1,a,o=4,l=4,u=4,d="f32")=>{let c=t?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,p=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,h=t?"row":"col",f=t?"col":"row",m=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${h} / outWidth;
    let outCol = ${h} % outWidth;

    let WRow = ${f} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${f} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${f} % inChannels;
    var resData = ${sG(o,d)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"} && xCol >= 0 && xCol < ${t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) {
      ${c}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${(t=>{switch(t){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${d}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw Error(`innerElementSize ${t} is not supported.`)}})(o)}
    }
    return resData;`,_=t?r&&i?`
    let col = colIn * ${o};
    ${m}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${m}
    }
    return ${sG(o,d)}(0.0);`:i&&s?`
    let col = colIn * ${o};
    ${m}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${m}
    }
    return ${sG(o,d)}(0.0);`,g=`${(t=>{switch(t){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw Error(`innerElementSize ${t} is not supported.`)}})(l)}`,y=sG(u,d),w=t?sG(o,d):sG(l,d),b=t?sG(l,d):sG(o,d),x=sF(a,y,d);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${w} {
      ${t?_:g}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${b} {
      ${t?g:_}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${p}
      ${sW(n)}
      ${x}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},s6=(t,r,s,i,n,a,o,l,u)=>{let d="NHWC"===r.format,c=d?t[0].dims[3]:t[0].dims[1],p=s[0],h=d?s[2]:s[3],f=d?s[1]:s[2],m=d?s[3]:s[1],_=d&&(c%4==0||c%3==0)&&m%4==0,g=d?m:h*f,y=d?h*f:m,w=[8,8,1],b=i<=8?[4,1,1]:[4,4,1],x=[Math.ceil(g/w[0]/b[0]),Math.ceil(y/w[1]/b[1]),Math.ceil(p/w[2]/b[2])];e0("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${x}`);let v=_?d&&c%4!=0?3:4:1,$=w[1]*b[1],k=w[0]*b[0],E=Math.max(w[0]*v,w[1]),S=i%$==0,z=n%k==0,T=a%E==0,I=_?[v,4,4]:[1,1,1],C=[{type:6,data:i},{type:6,data:n},{type:6,data:a},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];sq(r,C),C.push(...tf(t[0].dims,t[1].dims));let A=["rank","rank"];return o&&(C.push(...tf(t[2].dims)),A.push("rank")),C.push(...tf(s)),{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${v};${_};${S};${z};${T};${$};${k};${E}`,inputDependencies:A},getRunData:()=>({outputs:[{dims:u?u(s):s,dataType:t[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:C}),getShaderSource:i=>{let n=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];sV(r,n);let a=_?4:1,u=tp(t[0].dataType),c=`
      fn setOutputAtIndex(flatIndex : i32, value : ${_?`vec4<${u}>`:u}) {
        result[flatIndex] = ${_?`vec4<${u}>`:u}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${_?`vec4<${u}>`:u}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${_?"/ 4":""}, value);
      }`,p=[tx("x",t[0].dataType,t[0].dims.length,3===v?1:v),tx("w",t[1].dataType,t[1].dims.length,a)],h=tv("result",t[0].dataType,s.length,a);if(o){let r=tx("bias",t[2].dataType,t[2].dims.length,a);p.push(r),c+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${_?`vec4<${u}>`:u} {
          return bias[coords.${d?"w":"y"}${_?"/ 4":""}];
        }`}return`
        ${sH("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${i.registerUniforms(n).declareVariables(...p,h)}
        ${c}
        ${s4(d,S,z,T,o,r,I[0],I[1],I[2],u)}
        ${_?sZ(b,w,u,void 0,!d,E):s1(b,w,u,void 0,!d,E,!1,void 0,l)}`}}}}),o6=D(()=>{oO(),oP(),oU(),oF(),oJ(),o0(),s8=t=>{let r=1;for(let s=0;s<t.length;s++)r*=t[s];return r},s5=t=>"number"==typeof t?[t,t,t]:t,s9=(t,r)=>r<=1?t:t+(t-1)*(r-1),s7=(t,r,s,i=1)=>{let n=s9(r,i);return Math.floor((t[0]*(s-1)-s+n)/2)},ie=(t,r,s,i,n)=>{null==n&&(n=s7(t,r[0],i[0]));let a=[0,0,0,s];for(let s=0;s<3;s++)t[s]+2*n>=r[s]&&(a[s]=Math.trunc((t[s]-r[s]+2*n)/i[s]+1));return a},it=(t,r,s,i,n,a,o,l,u,d)=>{let c,p,h,f;if("VALID"===t&&(t=0),"number"==typeof t){c={top:t,bottom:t,left:t,right:t,front:t,back:t};let m=ie([r,s,i,1],[l,u,d],1,[n,a,o],t);p=m[0],h=m[1],f=m[2]}else if(Array.isArray(t)){if(!t.every((t,r,s)=>t===s[0]))throw Error(`Unsupported padding parameter: ${t}`);c={top:t[0],bottom:t[1],left:t[2],right:t[3],front:t[4],back:t[5]};let m=ie([r,s,i,1],[l,u,d],1,[n,a,o],t[0]);p=m[0],h=m[1],f=m[2]}else if("SAME_UPPER"===t){p=Math.ceil(r/n),h=Math.ceil(s/a),f=Math.ceil(i/o);let t=(p-1)*n+l-r,m=(h-1)*a+u-s,_=(f-1)*o+d-i,g=Math.floor(t/2),y=Math.floor(m/2),w=Math.floor(_/2);c={top:y,bottom:m-y,left:w,right:_-w,front:g,back:t-g}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:c,outDepth:p,outHeight:h,outWidth:f}},ir=(t,r,s,i,n,a=!1,o="channelsLast")=>{let l,u,d,c,p;if("channelsLast"===o)[l,u,d,c,p]=t;else if("channelsFirst"===o)[l,p,u,d,c]=t;else throw Error(`Unknown dataFormat ${o}`);let[h,,f,m,_]=r,[g,y,w]=s5(s),[b,x,v]=s5(i),$=s9(f,b),k=s9(m,x),E=s9(_,v),{padInfo:S,outDepth:z,outHeight:T,outWidth:I}=it(n,u,d,c,g,y,w,$,k,E),C=a?h*p:h,A=[0,0,0,0,0];return"channelsFirst"===o?A=[l,C,z,T,I]:"channelsLast"===o&&(A=[l,z,T,I,C]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:d,inWidth:c,inChannels:p,outDepth:z,outHeight:T,outWidth:I,outChannels:C,padInfo:S,strideDepth:g,strideHeight:y,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:_,effectiveFilterDepth:$,effectiveFilterHeight:k,effectiveFilterWidth:E,dilationDepth:b,dilationHeight:x,dilationWidth:v,inShape:t,outShape:A,filterShape:r}},is=(t,r,s,i,n,a)=>{let o="channelsLast"===a,l=(o?t[0].dims[3]:t[0].dims[1],[Math.ceil(s8(({x:s.map((t,r)=>r)}).x.map(t=>s[t]))/64),1,1]);e0("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${l}`);let u=[{type:12,data:tn.size(s)},{type:12,data:i},{type:12,data:n},{type:12,data:r.strides},{type:12,data:r.dilations}];sq(r,u),u.push(...tf(t[0].dims,t[1].dims));let d=["rank","rank"],c=3===t.length;return c&&(u.push(...tf(t[2].dims)),d.push("rank")),u.push(...tf(s)),{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${o};1;${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:u}),getShaderSource:a=>{let l=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:i.length},{name:"pads",type:"u32",length:n.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];sV(r,l);let u=tp(t[0].dataType),d=tx("x",t[0].dataType,t[0].dims.length,1),p=tx("W",t[1].dataType,t[1].dims.length,1),h=[d,p],f=tv("result",t[0].dataType,s.length,1),m="";if(c){let r=tx("bias",t[2].dataType,t[2].dims.length,1);h.push(r),m+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${u} {
          return bias[${o?tw("coords",4,5):tw("coords",1,5)}];
        }`}let _=sG(1,u),g=sF(r,_,u);return`
            ${m}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${d.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${p.getByIndices("aIndices")};
            }
          ${a.registerUniforms(l).declareVariables(...h,f)}
          ${a.mainStart()}
          ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${f.offsetToIndices("global_idx")};
              let batch = ${tw("coords",0,d.rank)};
              let d2 = ${o?tw("coords",d.rank-1,d.rank):tw("coords",1,d.rank)};
              let xFRCCorner = vec3<u32>(${o?tw("coords",1,d.rank):tw("coords",2,d.rank)},
              ${o?tw("coords",2,d.rank):tw("coords",3,d.rank)},
              ${o?tw("coords",3,d.rank):tw("coords",4,d.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?tw("uniforms.x_shape",1,d.rank):tw("uniforms.x_shape",2,d.rank)};
              let xShapeZ = ${o?tw("uniforms.x_shape",2,d.rank):tw("uniforms.x_shape",3,d.rank)};
              let xShapeW = ${o?tw("uniforms.x_shape",3,d.rank):tw("uniforms.x_shape",4,d.rank)};
              let xShapeU = ${o?tw("uniforms.x_shape",4,d.rank):tw("uniforms.x_shape",1,d.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${c?"value = value + getBiasByOutputCoords(coords)":""};
              ${g}
              result[global_idx] = f32(value);
          }`}}}}),o8=D(()=>{oO(),oU(),oF(),oJ(),ii=(t,r,s,i)=>{let n=t.length>2,a=n?"value += b[output_channel];":"",o=t[0].dims,l=t[1].dims,u="NHWC"===r.format,d=u?s[3]:s[1],c=d/r.group,p=u&&c>=4?tm(d):1,h=tn.size(s)/p,f=[{type:12,data:h},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:c}];return sq(r,f),f.push(...tf(o,[l[0],l[1],l[2],l[3]/p])),f.push(...tf([s[0],s[1],s[2],s[3]/p])),{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${p}`,inputDependencies:n?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:f}),getShaderSource:i=>{let d=tv("output",t[0].dataType,s.length,p),c=tp(d.type.tensor),h=sF(r,d.type.value,c),f=tx("x",t[0].dataType,o.length),m=tx("w",t[1].dataType,l.length,p),_=[f,m];n&&_.push(tx("b",t[2].dataType,t[2].dims,p));let g=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];sV(r,g);let y=u?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${f.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${m.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${f.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${m.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${i.registerUniforms(g).declareVariables(..._,d)}

  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${d.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${p} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${u?2:1}];

    var value: ${d.type.value} = ${d.type.value}(0);
    ${y}
    ${a}
    ${h}
    ${d.setByOffset("global_idx","value")}
  }`}}},ia=(t,r,s,i)=>{let n=t.length>2,a=tm(s[3]),o=tm(s[2]),l=tn.size(s)/a/o,u=[t[0].dims[0],t[0].dims[1],t[0].dims[2],t[0].dims[3]/a],d=[t[1].dims[0],t[1].dims[1],t[1].dims[2],t[1].dims[3]/a],c=[s[0],s[1],s[2],s[3]/a],p=[{type:12,data:l},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];sq(r,p),p.push(...tf(u,d,c));let h=(o-1)*r.strides[1]+d[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${a};${o};${h};${d[0]};${d[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p}),getShaderSource:s=>{let i=tv("output",t[0].dataType,c.length,a),l=tp(i.type.tensor),p=sF(r,i.type.value,l),f=tx("x",t[0].dataType,u.length,a),m=tx("w",t[1].dataType,d.length,a),_=[f,m];n&&_.push(tx("b",t[2].dataType,t[2].dims,a));let g=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return sV(r,g),`
  ${s.registerUniforms(g).declareVariables(..._,i)}
  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${f.type.value}, ${h}>;
    var values: array<${i.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${h}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${f.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${f.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {
          let w_val = ${m.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${n?"value += b[output_channel];":""}
      ${p}
      ${i.set("batch","row","col + i","output_channel","value")};
    }
  }`}}}}),o5=D(()=>{oU(),o4(),o6(),o3(),o8(),oJ(),o2(),oq(),io=(t,r,s,i,n,a)=>{let o=t[0],l=t.slice(a?1:2,a?3:4),u=l.length,d=r[0],c=r.slice(2).map((t,r)=>t+(t-1)*(s[r]-1)),p=l.map((t,r)=>t+i[r]+i[r+u]).map((t,r)=>Math.floor((t-c[r]+n[r])/n[r]));return p.splice(0,0,o),p.splice(a?3:1,0,d),p},il=[2,3,1,0],iu=(t,r)=>{if(!t||2!==t.length&&3!==t.length)throw Error("Conv requires 2 or 3 inputs");if(t[0].dims.length>5)throw Error("greater than 5D is not supported");if(t[0].dims.length!==t[1].dims.length)throw Error("filter does not have same dimension as input");if(t[0].dims["NHWC"===r.format?t[0].dims.length-1:1]!==t[1].dims[1]*r.group)throw Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===t.length&&(1!==t[2].dims.length||t[1].dims[0]!==t[2].dims[0]))throw Error("invalid bias");let s=t[0].dims.length-2;if(r.dilations.length!==s)throw Error(`dilations should be ${s}D`);if(r.strides.length!==s)throw Error(`strides should be ${s}D`);if(r.pads.length!==2*s)throw Error(`pads should be ${2*s}D`);if(0!==r.kernelShape.length&&r.kernelShape.length!==t[1].dims.length-2)throw Error("invalid kernel shape")},id=(t,r)=>{let s=t.kernelShape.slice();s.length<r[1].dims.length-2&&s.push(...Array(r[1].dims.length-2-s.length).fill(0));for(let t=2;t<r[1].dims.length;++t)0===s[t-2]&&(s[t-2]=r[1].dims[t]);let i=t.pads.slice();ta.adjustPadsBasedOnAutoPad(r[0].dims,t.strides,t.dilations,s,i,"NHWC"===t.format,t.autoPad);let n=Object.assign({},t);return Object.assign(n,{kernelShape:s,pads:i}),n},ic=t=>{let r=sj(t),s=t.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],format:s,dilations:t.dilations,group:t.group,kernelShape:t.kernel_shape,pads:t.pads,strides:t.strides,wIsConst:t.w_is_const(),...r,cacheKey:`${t.format};${r.activation};`}},ip=(t,r,s,i)=>{let n="NHWC"===s.format,a=io(r[0].dims,r[1].dims,s.dilations,s.pads,s.strides,n);if(1!==s.group){let o=[r[0]];if(n){let i=t.kernelCustomData.wT??t.compute(tO(r[1],il),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=i),o.push(i)}else o.push(r[1]);3===r.length&&o.push(r[2]),!t.adapterInfo.isArchitecture("ampere")&&n&&r[1].dims[0]===s.group&&1===r[1].dims[1]&&1===s.dilations[0]&&1===s.dilations[1]?t.compute(ia(o,s,a,i),{inputs:o}):t.compute(ii(o,s,a,i),{inputs:o});return}let o=3===r.length,l=r[0].dims[n?1:2],u=r[0].dims[n?2:3],d=r[0].dims[n?3:1],c=r[1].dims[2],p=r[1].dims[3],h=a[n?1:2],f=a[n?2:3],m=a[n?3:1],_=n&&c===l&&p===u&&0===s.pads[0]&&0===s.pads[1];if(_||1===c&&1===p&&1===s.dilations[0]&&1===s.dilations[1]&&1===s.strides[0]&&1===s.strides[1]&&0===s.pads[0]&&0===s.pads[1]){let c=a[0],p,g,y,w=[];if(n){let i=t.kernelCustomData.wT??t.compute(tO(r[1],il),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];if(s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=i),_){let t=l*u*d;p=r[0].reshape([1,c,t]),g=i.reshape([1,t,m]),y=[1,c,m]}else p=r[0].reshape([c,l*u,d]),g=i.reshape([1,d,m]),y=[c,h*f,m];w.push(p),w.push(g)}else p=r[0].reshape([c,d,l*u]),g=r[1].reshape([1,m,d]),y=[c,m,h*f],w.push(g),w.push(p);o&&w.push(r[2]);let b=y[2],x=w[0].dims[w[0].dims.length-1];b<8&&x<8?t.compute(sX(w,s,a,y,n,i),{inputs:w}):t.compute(s3(w,s,a,y,n,i),{inputs:w});return}let g=t.kernelCustomData.wT??t.compute(tO(r[1],il),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=g);let y=[r[0],g];o&&y.push(r[2]);let w=n?h*f:m,b=n?m:h*f,x=c*p*d;t.compute(s6(y,s,a,w,b,x,o,!0,i),{inputs:y})},ih=(t,r)=>{let s="NHWC"===r.format,i=[t.inputs[0].reshape(s?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];3===t.inputs.length&&i.push(t.inputs[2]);let n=[0,r.pads[0],0,r.pads[1]],a=[1].concat(r.strides),o=[1].concat(r.dilations),l=[1].concat(r.kernelShape),u=id({...r,pads:n,strides:a,dilations:o,kernelShape:l},i);ip(t,i,u,t=>s?[t[0],t[2],t[3]]:[t[0],t[1],t[3]])},im=(t,r,s)=>{let i="NHWC"===s.format?"channelsLast":"channelsFirst",n=id(s,r),a="NOTSET"===s.autoPad?s.pads:s.autoPad,o=ir(r[0].dims,r[1].dims,s.strides,s.dilations,a,!1,i);t.compute(is(r,n,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],i))},i_=(t,r)=>{if(iu(t.inputs,r),3===t.inputs[0].dims.length)ih(t,r);else if(5===t.inputs[0].dims.length)im(t,t.inputs,r);else{let s=id(r,t.inputs);ip(t,t.inputs,s)}}}),o9=D(()=>{oO(),oP(),oU(),oF(),ig=(t,r,s)=>{let i=t.length>2,n=r.outputShape,a="NHWC"===r.format,o=r.group,l=t[1].dims,u=l[2]/o,d=l[3],c=a?tm(d):1,p=tn.size(n)/c,h=[Math.ceil(p/64),1,1];e0("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${h}`);let f=["rank","rank"],m=[r.strides[0],r.strides[1]],_=[r.kernelShape[a?1:2],r.kernelShape[a?2:3]],g=[r.dilations[0],r.dilations[1]],y=[_[0]+(r.dilations[0]<=1?0:(r.kernelShape[a?1:2]-1)*(r.dilations[0]-1)),_[1]+(r.dilations[1]<=1?0:(r.kernelShape[a?2:3]-1)*(r.dilations[1]-1))],w=[y[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),y[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],b=[{type:12,data:p},{type:12,data:m},{type:12,data:_},{type:12,data:g},{type:12,data:y},{type:6,data:w},{type:12,data:u},{type:12,data:d},...tf(t[0].dims,t[1].dims)];return i&&(b.push(...tf(t[2].dims)),f.push("rank")),b.push(...tf(n)),{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${c}`,inputDependencies:f},getRunData:()=>({dispatchGroup:{x:h[0],y:h[1],z:h[2]},outputs:[{dims:s?s(n):n,dataType:t[0].dataType}],programUniforms:b}),getShaderSource:r=>{let s=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:m.length},{name:"filter_dims",type:"u32",length:_.length},{name:"dilations",type:"u32",length:_.length},{name:"effective_filter_dims",type:"u32",length:y.length},{name:"pads",type:"i32",length:w.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],o=tp(t[0].dataType),l=a?1:2,u=a?2:3,d=a?3:1,p=tx("W",t[1].dataType,t[1].dims.length,c),h=tx("Dy",t[0].dataType,t[0].dims.length),f=[h,p];i&&f.push(tx("bias",t[2].dataType,[n[d]].length,c));let g=tv("result",t[0].dataType,n.length,c),b=`
            let outputIndices = ${g.offsetToIndices(`global_idx * ${c}`)};
            let batch = ${g.indicesGet("outputIndices",0)};
            let d1 = ${g.indicesGet("outputIndices",d)};
            let r = ${g.indicesGet("outputIndices",l)};
            let c = ${g.indicesGet("outputIndices",u)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${g.type.value}(0.0);
            for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);

              for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${u}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                  let xValue = ${a?h.get("batch","idyR","idyC","inputChannel"):h.get("batch","inputChannel","idyR","idyC")};
                  let w_offset = ${p.indicesToOffset(`${p.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
                  let wValue = ${p.getByOffset(`w_offset / ${c}`)};
                  dotProd = dotProd + xValue * wValue;
                  inputChannel = inputChannel + 1;
                }
              }
            }
            let value = dotProd${i?` + bias[d1 / ${c}]`:""};
            ${g.setByOffset("global_idx","value")};
          `;return`
    ${r.registerUniforms(s).declareVariables(...f,g)}
      ${r.mainStart()}
      ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${b}}`}}}}),o7=D(()=>{o9(),oJ(),oq(),iy=(t,r,s,i,n,a)=>(t-1)*r+s+(i-1)*n+1-a,iw=(t,r,s,i,n)=>{let a=Math.floor(t/2);"SAME_UPPER"===r?(s[i]=a,s[n]=t-a):"SAME_LOWER"===r&&(s[i]=t-a,s[n]=a)},ib=(t,r,s,i,n,a,o,l,u,d)=>{let c=t.length-2,p=0===d.length;u.length<c&&u.push(...Array(c-u.length).fill(0));let h=t[0],f=r[l?3:1]*n;for(let n=0,h=t.length-c-(l?1:0);n<c;++n,++h){let l=t[h],f=p?l*o[n]:d[n];iw(iy(l,o[n],a[n],r[h],s[n],f),i,a,n,n+c),p&&d.push(o[n]*(l-1)+u[n]+(r[h]-1)*s[n]+1-a[n]-a[n+c])}d.splice(0,0,h),d.splice(l?3:1,0,f)},ix=(t,r)=>{let s=t.kernelShape.slice();if(0===t.kernelShape.length||0===t.kernelShape.reduce((t,r)=>t*r,1)){s.length=0;for(let t=2;t<r[1].dims.length;++t)s.push(r[1].dims[t])}let i="NHWC"===t.format;s.splice(0,0,r[1].dims[0]),s.splice(i?3:1,0,r[1].dims[1]);let n=t.pads.slice(),a=t.outputShape.slice(),o=t.outputPadding.slice(),l=r[0].dims,u=t.dilations.slice();0===u.reduce((t,r)=>t+r,0)&&(u=Array(r[0].dims.length-2).fill(1));let d=t.strides.slice();0===d.reduce((t,r)=>t+r,0)&&(d=Array(r[0].dims.length-2).fill(1)),ib(l,s,u,t.autoPad,t.group,n,d,i,o,a);let c=Object.assign({},t);return Object.assign(c,{kernelShape:s,pads:n,outputPadding:o,outputShape:a,dilations:u,strides:d}),c},iv=t=>{let r=sj(t),s=t.format,i=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof t.autoPad>"u"?0:t.autoPad],n=t.dilations,a=t.group,o=t.kernelShape,l=t.pads,u=t.strides,d=t.wIsConst();return{autoPad:i,format:s,dilations:n,group:a,kernelShape:o,outputPadding:t.outputPadding,outputShape:t.outputShape,pads:l,strides:u,wIsConst:d,...r,cacheKey:`${t.format};${r.activation};`}},i$=(t,r)=>{if(!t||2!==t.length&&3!==t.length)throw Error("Conv requires 2 or 3 inputs");if(4!==t[0].dims.length&&3!==t[0].dims.length)throw Error("currently only support 2-dimensional conv");if(t[0].dims.length!==t[1].dims.length)throw Error("filter does not have same dimension as input");if(t[0].dims["NHWC"===r.format?t[0].dims.length-1:1]!==t[1].dims[0])throw Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=t[1].dims[1]*r.group;if(3===t.length&&(1!==t[2].dims.length||t[2].dims[0]!==s))throw Error("invalid bias");let i=t[0].dims.length-2;if(r.dilations.reduce((t,r)=>t+r,0)>0&&r.dilations.length!==i)throw Error(`dilations should be ${i}D`);if(r.strides.reduce((t,r)=>t+r,0)>0&&r.strides.length!==i)throw Error(`strides should be ${i}D`);if(r.pads.reduce((t,r)=>t+r,0)>0&&r.pads.length!==2*i)throw Error(`pads should be ${2*i}D`);if(r.outputPadding.length!==i&&0!==r.outputPadding.length)throw Error(`output_padding should be ${i}D`);if(r.kernelShape.reduce((t,r)=>t+r,0)>0&&0!==r.kernelShape.length&&r.kernelShape.length!==t[1].dims.length-2)throw Error("invalid kernel shape");if(0!==r.outputShape.length&&r.outputShape.length!==t[0].dims.length-2)throw Error("invalid output shape")},ik=(t,r,s,i)=>{let n=t.kernelCustomData.wT??t.compute(tO(r[1],[2,3,0,1]),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=n);let a=[r[0],n];3===r.length&&a.push(r[2]),t.compute(ig(a,s,i),{inputs:a})},iE=(t,r)=>{let s="NHWC"===r.format,i=[t.inputs[0].reshape(s?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];3===t.inputs.length&&i.push(t.inputs[2]);let n=r.kernelShape;(0===n.length||0===n[0])&&(n=[t.inputs[1].dims[2]]);let a=r.dilations;(0===a.length||0===a[0])&&(a=[1]);let o=r.strides;(0===o.length||0===o[0])&&(o=[1]);let l=r.pads;0===l.length&&(l=[0,0]),l=[0,l[0],0,l[1]],o=[1].concat(o),a=[1].concat(a),n=[1].concat(n);let u=ix({...r,pads:l,strides:o,dilations:a,kernelShape:n},i);ik(t,i,u,t=>s?[t[0],t[2],t[3]]:[t[0],t[1],t[3]])},iS=(t,r)=>{if(i$(t.inputs,r),3===t.inputs[0].dims.length)iE(t,r);else{let s=ix(r,t.inputs);ik(t,t.inputs,s)}}}),le=D(()=>{oO(),oU(),oN(),oF(),iz=(t,r,s,i)=>{let n=tn.size(r),a=r.length,o=tx("input",t,a),l=tv("output",t,a),u=6===s.dataType?s.getInt32Array()[0]:Number(s.getBigInt64Array()[0]),d=tn.normalizeAxis(u,a);return{name:"CumSum",shaderCache:{hint:i.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:12,data:d},...tf(r,r)]}),getShaderSource:t=>{let r=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,s=tw("uniforms.input_shape","uniforms.axis",a),n=i.reverse?r+(i.exclusive?" + 1":""):"0",u=i.reverse?s:r+(i.exclusive?"":" + 1");return`
                ${t.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,l)}
                ${t.mainStart()}
                  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${l.offsetToIndices("global_idx")};
                  var sum = ${l.type.value}(0);
                  let first : i32 = ${n};
                  let last : i32 = ${u};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${l.setByOffset("global_idx","sum")};
                }`}}},iT=(t,r)=>{let s=t.inputs[0].dims,i=t.inputs[0].dataType,n=t.inputs[1];t.compute(iz(i,s,n,r),{inputs:[0]})},iI=t=>{let r=1===t.exclusive,s=1===t.reverse;return tr({exclusive:r,reverse:s})}}),lt=D(()=>{oO(),oU(),oN(),oF(),iC=t=>{if(!t||1!==t.length)throw Error("DepthToSpace requires 1 input.");if(4!==t[0].dims.length)throw Error("DepthToSpace requires 4D input.")},iA=(t,r,s,i)=>{let n=[];n.push(`fn perm(i: ${i.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`);for(let i=0;i<r;++i)n.push(s.indicesSet("a",t[i],`i[${i}]`));return n.push("return a;}"),n.join(`
`)},iM=(t,r)=>{let s,i,n,a,o,l,u="NHWC"===r.format,d=r.blocksize,c="DCR"===r.mode;u?([s,i,n,a]=t.dims,o=c?[s,i,n,d,d,a/d**2]:[s,i,n,a/d**2,d,d],l=c?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([s,i,n,a]=[t.dims[0],t.dims[2],t.dims[3],t.dims[1]],o=c?[s,d,d,a/d**2,i,n]:[s,a/d**2,d,d,i,n],l=c?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let p=t.reshape(o),h=p.dims.length,f=t.dataType,m=tx("a",f,h),_=tv("output",f,h);return{name:"DepthToSpace",shaderCache:{hint:`${t.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:t=>{let r=u?[s,i*d,n*d,a/d**2]:[s,a/d**2,i*d,n*d],o=tn.size(r),c=p.dims,h=tn.sortBasedOnPerm(c,l);return{outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...tf(c,h)]}},getShaderSource:t=>`
  ${t.registerUniform("output_size","u32").declareVariables(m,_)}

  ${iA(l,h,m,_)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${_.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${_.setByOffset("global_idx",m.getByIndices("aIndices"))}
  }`}},iO=(t,r)=>{iC(t.inputs),t.compute(iM(t.inputs[0],r))},iB=t=>tr({blocksize:t.blocksize,mode:t.mode,format:t.format})}),lr=D(()=>{oO(),oU(),oN(),oF(),iD="^"+(iR="("+(iP="[a-zA-Z]|\\.\\.\\.")+")+")+"$",iL="^("+iR+",)*"+iR+"$",iN=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let s=this.symbolToIndices.get(t);void 0===s?s=[r]:s.push(r),this.symbolToIndices.set(t,s)}},iU=class{constructor(t,r){this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=[],this.outputDims=[];let[s,i]=r.includes("->")?r.split("->",2):[r,""];if(!s.match(RegExp(iL)))throw Error("Invalid LHS term");if(s.split(",").forEach((r,s)=>{let i=t[s].dims.slice();if(!r.match(RegExp(iD)))throw Error("Invalid LHS term");let n=this.processTerm(r,!0,i,s);this.lhs.push(n)}),""===i)i+=[...this.symbolToInfo.entries()].filter(([t,r])=>1===r.count||"..."===t).map(([t])=>t).join("");else if(!i.match(RegExp(iR)))throw Error("Invalid RHS");i.match(RegExp(iP,"g"))?.forEach(t=>{if("..."===t)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let r=this.symbolToInfo.get(t);if(void 0===r)throw Error("Invalid RHS symbol");this.outputDims.push(r.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,s){let i=this.symbolToInfo.get(t);if(void 0!==i){if(i.dimValue!==r&&1!==i.count)throw Error("Dimension mismatch");i.count++,i.inputIndices.push(s)}else i={count:1,dimValue:r,inputIndices:[s]};this.symbolToInfo.set(t,i)}processTerm(t,r,s,i=-1){let n=s.length,a=!1,o=[],l=0;if(!t.match(RegExp(iD))&&!r&&""!==t)throw Error("Invalid LHS term");let u=t.match(RegExp(iP,"g")),d=new iN(i);return u?.forEach((t,c)=>{if("..."===t){if(a)throw Error("Only one ellipsis is allowed per input term");a=!0;let t=n-u.length+1;if(t<0)throw Error("Ellipsis out of bounds");if(o=s.slice(l,l+t),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=o;else throw Error("Ellipsis must be specified in the LHS");for(let t=0;t<o.length;t++){let r=String.fromCharCode(48+t);d.addSymbol(r,c+t),this.addSymbol(r,s[l++],i)}}else d.addSymbol(t,c+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(t,s[l++],i)}),d}},iF=t=>t+"_max",iq=(t,r,s,i)=>{let n=t.map(t=>t.length).map((t,s)=>tx(`input${s}`,r,t)),a=tn.size(i),o=tv("output",r,i.length),l=[...s.symbolToInfo.keys()].filter(t=>!s.rhs.symbolToIndices.has(t));return{name:"Einsum",shaderCache:{hint:s.equation,inputDependencies:t.map(()=>"rank")},getRunData:()=>{let n=l.filter(t=>s.symbolToInfo.has(t)).map(t=>({type:12,data:s.symbolToInfo.get(t)?.dimValue||0}));n.push({type:12,data:a});let o=t.map((t,r)=>[...tf(t)]).reduce((t,r)=>t.concat(r),n);return o.push(...tf(i)),{outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o}},getShaderSource:t=>{let r=[],i=[],a=[],u=[],d=[],c=s.symbolToInfo.size===s.rhs.symbolToIndices.size;s.symbolToInfo.forEach((t,l)=>{if(s.rhs.symbolToIndices.has(l)){let i=s.rhs.symbolToIndices.get(l)?.[0];void 0!==i&&s.lhs.forEach((s,a)=>{if(t.inputIndices.includes(a)){let t=s.symbolToIndices.get(l);if(void 0===t)throw Error("Invalid symbol error");t.forEach(t=>{r.push(`${n[a].indicesSet(`input${a}Indices`,t,o.indicesGet("outputIndices",i))}`)})}})}else s.lhs.forEach((r,s)=>{if(t.inputIndices.includes(s)){let t=r.symbolToIndices.get(l);if(void 0===t)throw Error("Invalid symbol error");t.forEach(t=>{i.push(`${n[s].indicesSet(`input${s}Indices`,t,`${l}`)}`)}),d.push(`prod *= ${n[s].getByIndices(`input${s}Indices`)};`)}}),a.push(`for(var ${l}: u32 = 0; ${l} < uniforms.${iF(l)}; ${l}++) {`),u.push("}")});let p=c?[...r,`let sum = ${n.map((t,r)=>t.getByIndices(`input${r}Indices`)).join(" * ")};`]:[...r,"var sum = 0.0;",...a,...i,"var prod = 1.0;",...d,"sum += prod;",...u];return`
            ${t.registerUniforms(l.map(t=>({name:`${iF(t)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...n,o)}

            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${n.map((t,r)=>`var input${r}Indices: ${n[r].type.indices};`).join(`
`)}
            ${p.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`}}},iV=(t,r)=>{let s=new iU(t.inputs,r.equation),i=s.outputDims,n=t.inputs.map((t,r)=>t.dims);t.compute(iq(n,t.inputs[0].dataType,s,i))},ij=t=>{let r=t.equation.replace(/\s+/g,"");return tr({equation:r})}}),ls=D(()=>{oO(),oU(),oF(),iG=t=>{if(!t||2!==t.length)throw Error("Expand requires 2 input.");let r=t[0].dims,s=Array.from(t[1].getBigInt64Array(),Number),i=s.length<r.length?0:s.length-r.length,n=r.length<s.length?0:r.length-s.length;for(;i<s.length&&n<r.length;++i,++n)if(s[i]!==r[n]&&1!==s[i]&&1!==r[n])throw Error("Expand requires shape to be broadcastable to input")},iW=(t,r)=>{let s=t.length-r.length,i=[];for(let r=0;r<s;++r)i.push(t[r]);for(let n=0;n<r.length;++n)i.push(1===r[n]?t[n+s]:r[n]);return i},iH=(t,r)=>t.length>r.length?iW(t,r):iW(r,t),iK=t=>{let r=t[0].dims,s=iH(r,Array.from(t[1].getBigInt64Array(),Number)),i=t[0].dataType,n=9===i||1===tn.size(r),a=9===i||r.length>0&&r[r.length-1]%4==0?4:1,o=n||s.length>0&&s[s.length-1]%4==0?4:1,l=Math.ceil(tn.size(s)/o),u=[{type:12,data:l},...tf(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${a}${o}`,inputDependencies:["rank"]},getShaderSource:t=>{let n=tx("input",i,r.length,a),l=tv("output",i,s.length,o),u;if(9===i){let t=(t,r,s="")=>`
          let outputIndices${r} = ${l.offsetToIndices(`outputOffset + ${r}u`)};
          let offset${r} = ${n.broadcastedIndicesToOffset(`outputIndices${r}`,l)};
          let index${r} = offset${r} / 4u;
          let component${r} = offset${r} % 4u;
          ${t}[${r}] = ${s}(${n.getByOffset(`index${r}`)}[component${r}]);
        `;u=`
        let outputOffset = global_idx * ${o};
        var data = vec4<u32>(0);
        ${t("data",0,"u32")}
        ${t("data",1,"u32")}
        ${t("data",2,"u32")}
        ${t("data",3,"u32")}
        ${l.setByOffset("global_idx","data")}
      }`}else u=`
        let outputIndices = ${l.offsetToIndices(`global_idx * ${o}`)};
        let inputOffset = ${n.broadcastedIndicesToOffset("outputIndices",l)};
        let data = ${l.type.value}(${n.getByOffset(`inputOffset / ${a}`)});
        ${l.setByOffset("global_idx","data")}
      }`;return`
    ${t.registerUniform("vec_size","u32").declareVariables(n,l)}
    ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${u}`},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u})}},iX=t=>{iG(t.inputs),t.compute(iK(t.inputs),{inputs:[0]})}}),li=D(()=>{oO(),oU(),oF(),oX(),iY=t=>{let r=t[0].dataType,s=tn.size(t[0].dims),i=tn.size(t[1].dims),n=i%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:t=>{let s=tx("x",r,[1],4),i=tx("bias",r,[1],4),a=tv("y",r,[1],4),o=t=>`
      let bias${t}_offset: u32 = (global_idx * 4 + ${t}) % uniforms.bias_size;
      let bias${t} = ${i.getByOffset(`bias${t}_offset / 4`)}[bias${t}_offset % 4];`,l=n?`
      let bias = ${i.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${o(0)}${o(1)}${o(2)}${o(3)}
      let bias = ${s.type.value}(bias0, bias1, bias2, bias3);`;return`${t.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(s,i,a)}

    ${sc(th(r))}

    ${t.mainStart(td)}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${s.getByOffset("global_idx")};
      ${l}
      let x_in = x + bias;
      ${a.setByOffset("global_idx",sp("x_in"))}
    }`},getRunData:t=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],programUniforms:[{type:12,data:Math.ceil(s/4)},{type:12,data:i}],dispatchGroup:{x:Math.ceil(s/td/4)}})}},iQ=t=>{t.inputs.length<2||0===tn.size(t.inputs[1].dims)?sh(t):t.compute(iY(t.inputs))}}),ln=D(()=>{oO(),oU(),oN(),oF(),iZ=t=>{if(!t||2!==t.length)throw Error("Gather requires 2 inputs.")},iJ=(t,r)=>{let s=t[0].dims,i=t[1].dims,n=s.length,a=tn.normalizeAxis(r.axis,n),o=s.slice(0);o.splice(a,1,...i);let l=s[a],u=9===t[0].dataType?4:1,d=Math.ceil(tn.size(o)/u),c=[{type:12,data:d},{type:6,data:l},{type:12,data:a},...tf(t[0].dims,t[1].dims,o)];return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:r=>{let s=tx("data",t[0].dataType,t[0].dims.length,u),l=tx("inputIndices",t[1].dataType,t[1].dims.length),d=tv("output",t[0].dataType,o.length,u),c=t=>{let r=i.length,u=`var indicesIndices${t}  = ${l.type.indices}(0);`;for(let s=0;s<r;s++)u+=`${r>1?`indicesIndices${t}[${s}]`:`indicesIndices${t}`} = ${o.length>1?`outputIndices${t}[uniforms.axis + ${s}]`:`outputIndices${t}`};`;u+=`
          var idx${t} = ${l.getByIndices(`indicesIndices${t}`)};
          if (idx${t} < 0) {
            idx${t} = idx${t} + uniforms.axisDimLimit;
          }
          var dataIndices${t} : ${s.type.indices};
        `;for(let s=0,i=0;s<n;s++)s===a?(u+=`${n>1?`dataIndices${t}[${s}]`:`dataIndices${t}`} = u32(idx${t});`,i+=r):(u+=`${n>1?`dataIndices${t}[${s}]`:`dataIndices${t}`} = ${o.length>1?`outputIndices${t}[${i}]`:`outputIndices${t}`};`,i++);return u},p;if(9===t[0].dataType){let t=(t,r,i="")=>`
          let outputIndices${r} = ${d.offsetToIndices(`outputOffset + ${r}u`)};
          ${c(r)};
          let offset${r} = ${s.indicesToOffset(`dataIndices${r}`)};
          let index${r} = offset${r} / 4u;
          let component${r} = offset${r} % 4u;
          ${t}[${r}] = ${i}(${s.getByOffset(`index${r}`)}[component${r}]);
        `;p=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${t("value",0,"u32")}
        ${t("value",1,"u32")}
        ${t("value",2,"u32")}
        ${t("value",3,"u32")}
        ${d.setByOffset("global_idx","value")}
      `}else p=`
      let outputIndices = ${d.offsetToIndices("global_idx")};
      ${c("")};
      let value = ${s.getByIndices("dataIndices")};
      ${d.setByOffset("global_idx","value")};
      `;return`
      ${r.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(s,l,d)}
      ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${p}
      }`}}},i0=t=>tr({axis:t.axis}),i1=(t,r)=>{iZ(t.inputs),t.compute(iJ(t.inputs,r))}}),la=D(()=>{oO(),oU(),oF(),i2=(t,r,s,i,n,a,o,l,u)=>{let d=[{type:12,data:a},{type:12,data:i},{type:12,data:n},{type:12,data:s},{type:12,data:o},{type:12,data:l},{type:12,data:u}],c=[a];return d.push(...tf(r.dims,c)),t.compute({name:"computeSliceOffsets",shaderCache:{hint:`${n.length}_${s.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:c,dataType:t.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:t=>{let i=tx("indices_data",r.dataType,r.dims.length),a=tv("input_slice_offsets_data",12,1,1),o=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:n.length},{name:"sizes_from_slice_dims_data",type:"u32",length:s.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${t.registerUniforms(o).declareVariables(i,a)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${1===n.length?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${1===s.length?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`}},{inputs:[r],outputs:[-1]})[0]},i3=(t,r)=>{let s=t.inputs,i=s[0].dims,n=s[0].dataType,a=s[1].dims,o=a[a.length-1],l=tn.sizeToDimension(a,a.length-1),u=tn.sizeFromDimension(i,r.batchDims+o),d=tn.sizeToDimension(i,r.batchDims),c=tn.sizeFromDimension(i,r.batchDims),p=Array(o),h=u;for(let t=0;t<o;++t)p[o-1-t]=h,h*=i[r.batchDims+o-1-t];let f=i2(t,s[1],p,r.batchDims,i,l,l/d,c,o),m=r.batchDims+o;if(m>i.length)throw Error("last dimension of indices must not be larger than rank of input tensor");let _=a.slice(0,-1).concat(i.slice(m)),g=tn.size(_),y=[{type:12,data:g},{type:12,data:u},...tf(s[0].dims,f.dims,_)];t.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:_,dataType:n}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:y}),getShaderSource:t=>{let r=tx("data",s[0].dataType,s[0].dims.length),i=tx("slice_offsets",12,f.dims.length),n=tv("output",s[0].dataType,_.length);return`
          ${t.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(r,i,n)}
            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`}},{inputs:[s[0],f]})},i4=t=>({batchDims:t.batch_dims,cacheKey:""})}),lo=D(()=>{oO(),oU(),oN(),oF(),i6=(t,r)=>{if(t.length<3||t.length>4)throw Error("GatherBlockQuantized requires 3 or 4 inputs.");let s=tn.normalizeAxis(r.quantizeAxis,t[0].dims.length),i=r.blockSize,n=t[0],a=t[2],o=4===t.length?t[3]:void 0;if(a.dims.length!==n.dims.length||!n.dims.map((t,r)=>r===s?Math.ceil(t/i)===a.dims[r]:t===a.dims[r]).reduce((t,r)=>t&&r,!0))throw Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==n.dataType)throw Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==a.dims.length||!o.dims.map((t,r)=>t===a.dims[r]).reduce((t,r)=>t&&r,!0))throw Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},i8=(t,r)=>{let s=t[0].dims,i=t[1].dims,n=s.length,a=tn.normalizeAxis(r.gatherAxis,n),o=tn.normalizeAxis(r.quantizeAxis,n),l=s.slice(0);l.splice(a,1,...i);let u=tn.size(l),d=t[2].dataType,c=22===t[0].dataType,p=[{type:12,data:u},{type:12,data:o},{type:12,data:a},{type:12,data:r.blockSize},...tf(...t.map((t,r)=>t.dims),l)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${t.filter((t,r)=>1!==r).map(t=>t.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:t.length},(t,r)=>"rank")},getRunData:()=>({outputs:[{dims:l,dataType:d}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:p}),getShaderSource:r=>{let n=tx("data",t[0].dataType,t[0].dims.length),o=tx("inputIndices",t[1].dataType,t[1].dims.length),u=tx("scales",t[2].dataType,t[2].dims.length),p=t.length>3?tx("zeroPoint",t[3].dataType,t[3].dims.length):void 0,h=tv("output",d,l.length),f=[n,o,u];return p&&f.push(p),`
        ${r.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...f,h)}
        ${r.mainStart()}
        let output_indices = ${h.offsetToIndices("global_idx")};
        var indices_indices = ${o.type.indices}(0);
        ${i.length>1?`
          for (var i: u32 = 0; i < ${i.length}; i++) {
            let index = ${h.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${o.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${h.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${n.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${h.indicesGet("output_indices","i")};
          ${n.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${o.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${s[a]};
        }
        ${n.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${l.length}; i++) {
          let index = ${h.indicesGet("output_indices",`i + ${i.length} - 1`)};
          ${n.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${n.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${n.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${u.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${u.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${u.getByIndices("scale_indices")};
        ${p?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${p.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${p.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${th(d)}(quantized_data - zero_point) * scale;
        ${h.setByOffset("global_idx","dequantized_data")};
    }`}}},i5=(t,r)=>{i6(t.inputs,r),t.compute(i8(t.inputs,r))},i9=t=>tr({blockSize:t.blockSize,gatherAxis:t.gatherAxis,quantizeAxis:t.quantizeAxis})}),ll=D(()=>{oO(),oU(),oN(),oF(),i7=t=>{if(!t||2!==t.length)throw Error("GatherElements requires 2 inputs.");if(t[0].dims.length<1)throw Error("GatherElements requires that the data input be rank >= 1.");if(t[0].dims.length!==t[1].dims.length)throw Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},ne=(t,r)=>{let s=t[0].dims,i=t[0].dataType,n=s.length,a=t[1].dims,o=t[1].dataType,l=tn.normalizeAxis(r.axis,n),u=s[l],d=a.slice(0),c=tn.size(d),p=tx("input",i,n),h=tx("indicesInput",o,a.length),f=tv("output",i,d.length),m=[{type:12,data:c},{type:6,data:u},{type:12,data:l}];return m.push(...tf(s,a,d)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:m}),getShaderSource:t=>`
      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,h,f)}
      ${t.mainStart()}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${f.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${f.setByOffset("global_idx","value")};
  }`}},nt=t=>tr({axis:t.axis}),nr=(t,r)=>{i7(t.inputs),t.compute(ne(t.inputs,r))}}),lu=D(()=>{oO(),oU(),oF(),ns=t=>{if(!t)throw Error("Input is missing");if(t.length<2||t.length>3)throw Error("Invaid input number.");if(3===t.length&&t[2].dims.length>2)throw Error("Invalid input shape of C");if(t[0].dataType!==t[1].dataType||3===t.length&&t[0].dataType!==t[2].dataType)throw Error("Input types are mismatched")},ni=(t,r)=>{let s=t[0].dims.slice(),i=t[1].dims.slice(),[n,a,o]=to.getShapeOfGemmResult(s,r.transA,i,r.transB,3===t.length?t[2].dims:void 0),l=[n,a];if(!l)throw Error("Can't use gemm on the given tensors");let u=Math.ceil(a/16),d=Math.ceil(n/16),c=(tn.size(l),[{type:12,data:u},{type:12,data:n},{type:12,data:a},{type:12,data:o},{type:1,data:r.alpha},{type:1,data:r.beta}]),p=["type","type"];return 3===t.length&&(c.push(...tf(t[2].dims)),p.push("rank")),c.push(...tf(l)),{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:l,dataType:t[0].dataType}],dispatchGroup:{x:u*d},programUniforms:c}),getShaderSource:s=>{let i=tx("a",t[0].dataType,t[0].dims),n=tx("b",t[1].dataType,t[1].dims),a=null,o=[i,n];3===t.length&&(a=tx("c",t[2].dataType,t[2].dims.length),o.push(a));let u=tv("output",t[0].dataType,l.length);o.push(u);let d="",c="";r.transA&&r.transB?(c=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${n.type.value}(0);
      }
      `,d="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(c=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${n.type.value}(0);
      }
      `,d="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(c=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${n.type.value}(0);
      }
      `,d="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):r.transA||r.transB||(c=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${n.type.value}(0);
      }
      `,d="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let p=1===r.alpha?"":"value *= uniforms.alpha;";return`
  ${s.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...o)}
  var<workgroup> tile_a: array<array<${i.type.storage}, 16>, 16>;
  var<workgroup> tile_b: array<array<${n.type.storage}, 16>, 16>;
  ${s.mainStart([16,16,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;
    let num_tiles = (uniforms.K - 1) / 16 + 1;
    var k_start = 0u;
    var value = ${u.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${c}
      k_start = k_start + 16;
      workgroupBarrier();

      for (var k: u32 = 0u; k < 16; k++) {
        ${d}
      }
      workgroupBarrier();
    }

    ${p}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${null!=a?`let cOffset = ${a.broadcastedIndicesToOffset("vec2(m, n)",u)}; value += ${u.type.value}(uniforms.beta) * ${a.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`}}},nn=t=>({transA:t.transA,transB:t.transB,alpha:t.alpha,beta:t.beta,cacheKey:`${t.transA};${t.transB};${1===t.alpha}`}),na=(t,r)=>{ns(t.inputs),t.compute(ni(t.inputs,r))}}),ld=D(()=>{oO(),oU(),oN(),oF(),[no,nl,nu,nd]=[0,1,2,3],nc=t=>{if(4!==t[0].dims.length)throw Error("only 4-D tensor is supported.");if(t[0].dims.length!==t[1].dims.length)throw Error("input dimensions must be equal to grid dimensions");if(t[0].dims.length-2!==t[1].dims[t[1].dims.length-1])throw Error(`last dimension of grid must be equal to ${t[0].dims.length-2}`);if(t[0].dims[0]!==t[1].dims[0])throw Error("grid batch size must match input batch size")},np=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,nh=t=>`
  fn gs_bicubic_interpolate(p: mat4x4<${t}>, x: f32, y: f32) -> ${t} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${t}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,nf=t=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${0===t.alignCorners?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,nm=t=>`
  ${"reflection"===t.paddingMode?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,n_=(t,r,s)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${no}] = batch;
     indices[${nl}] = channel;`+(()=>{switch(s.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${nu}] = u32(r);
            indices[${nd}] = u32(c);
          }
        `;case"border":return`
          indices[${nu}] = u32(clamp(r, 0, H - 1));
          indices[${nd}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${nu}] = gs_reflect(r, border[1], border[3]);
          indices[${nd}] = gs_reflect(c, border[0], border[2]);
        `;default:throw Error(`padding mode ${s.paddingMode} is not supported`)}})()+`
    return ${t.getByIndices("indices")};
  }
`,ng=(t,r,s)=>(()=>{switch(s.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${no}], indices[${nl}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${no}], indices[${nl}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${no}], indices[${nl}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${no}], indices[${nl}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${no}], indices[${nl}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${no}], indices[${nl}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw Error(`mode ${s.mode} is not supported`)}})()+`${t.setByOffset("global_idx","result")}`,ny=(t,r)=>{let s=tx("x",t[0].dataType,t[0].dims.length),i=[t[1].dims[0],t[1].dims[1],t[1].dims[2]],n=tx("grid",t[1].dataType,i.length,2),a=[t[0].dims[0],t[0].dims[1],t[1].dims[1],t[1].dims[2]];"NHWC"===r.format&&(a=[t[0].dims[0],t[1].dims[1],t[1].dims[2],t[0].dims[3]],[no,nl,nu,nd]=[0,3,1,2]);let o=tv("output",t[0].dataType,a.length),l=s.type.value,u=[{type:12,data:tn.size(a)},...tf(t[0].dims,i,a)];return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:t=>{let r=tn.size(a);return{outputs:[{dims:a,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:u}},getShaderSource:t=>`
  ${t.registerUniform("output_size","u32").declareVariables(s,n,o)}
  ${np}
  ${nh(l)}
  ${nf(r)}
  ${nm(r)}
  ${n_(s,l,r)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${nu}]);
      let W_in = i32(uniforms.x_shape[${nd}]);

      ${0===r.alignCorners?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${no}], indices[${nu}], indices[${nd}]);
      let nxy = ${n.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${ng(o,l,r)}
  }`}},nw=(t,r)=>{nc(t.inputs),t.compute(ny(t.inputs,r))},nb=t=>tr({alignCorners:t.align_corners,mode:t.mode,paddingMode:t.padding_mode,format:t.format})}),lc=D(()=>{oO(),oU(),oN(),oD(),oW(),oF(),oq(),nx=(t,r)=>t.length>r&&t[r].dims.length>0?t[r]:void 0,nv=(t,r)=>{let s,i=t[0],n=nx(t,1),a=nx(t,2),o=nx(t,3),l=nx(t,4),u=nx(t,5),d=nx(t,6),c=nx(t,7);if(3!==i.dims.length&&5!==i.dims.length)throw Error("Input query is expected to have 3 or 5 dimensions");let p=i.dims[0],h=i.dims[1],f=3===i.dims.length?i.dims[2]:r.numHeads*i.dims[4],m=h,_=0,g=0,y=Math.floor(f/r.numHeads);if(d&&c&&tn.size(d.dims)&&tn.size(c.dims)){if(4!==d.dims.length)throw Error('Input "past_key" is expected to have 4 dimensions');if(d.dims[0]!==p||d.dims[1]!==r.numHeads||d.dims[3]!==y)throw Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==y)throw Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==c.dims[2])throw Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==c.dims.length)throw Error('Input "past_value" is expected to have 4 dimensions');_=d.dims[2],g=d.dims[2]}else if(d&&tn.size(d.dims)||c&&tn.size(c.dims))throw Error('Input "past_key" and "past_value" shall be both present or both absent');if(n&&tn.size(n.dims)>0){if(3!==i.dims.length)throw Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==n.dims[0])throw Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===n.dims.length){if(n.dims[2]!==i.dims[2])throw Error('Input "query" and "key" shall have same dim 2 (hidden_size)');s=2,m=n.dims[1]}else if(5===n.dims.length){if(n.dims[2]!==r.numHeads||2!==n.dims[3]||n.dims[4]!==y)throw Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw Error('Expect "value" be none when "key" has packed kv format.');s=5,m=n.dims[1]}else{if(n.dims[1]!==r.numHeads||n.dims[3]!==y)throw Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');s=0,m=n.dims[2]}}else{if(5!==i.dims.length)throw Error('Input "query" is expected to have 5 dimensions when key is empty');if(i.dims[2]!==r.numHeads||3!==i.dims[3])throw Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');s=3}if(o&&tn.size(o.dims)>0){if(1!==o.dims.length)throw Error('Input "bias" is expected to have 1 dimension');if(n&&5===n.dims.length&&2===n.dims[3])throw Error("bias is not allowed for packed kv.")}let w=_+m,b=0;if(l&&tn.size(l.dims)>0){b=8;let t=l.dims;throw 1===t.length?t[0]===p?b=1:t[0]===3*p+2&&(b=3):2===t.length&&t[0]===p&&t[1]===w&&(b=5),8===b?Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):Error("Mask not supported")}let x=!1,v=f;if(a&&tn.size(a.dims)>0){if(3!==a.dims.length&&4!==a.dims.length)throw Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==a.dims[0])throw Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===a.dims.length){if(m!==a.dims[1])throw Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=a.dims[2]}else{if(m!==a.dims[2])throw Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=a.dims[1]*a.dims[3],x=!0}}if(l&&tn.size(l.dims)>0)throw Error("Key padding mask is not supported");if(u&&tn.size(u.dims)>0){if(4!==u.dims.length)throw Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==p||u.dims[1]!==r.numHeads||u.dims[2]!==h||u.dims[3]!==w)throw Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:h,pastSequenceLength:_,kvSequenceLength:m,totalSequenceLength:w,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:f,vHiddenSize:v,headSize:y,vHeadSize:Math.floor(v/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:b,scale:r.scale,broadcastResPosBias:!1,passPastInKv:x,qkvFormat:s}},n$=t=>tr({...t}),nk=tr({perm:[0,2,1,3]}),nE=(t,r,s,i,n,a,o)=>{let l=[i,n,a],u=tn.size(l),d=[{type:12,data:u},{type:12,data:o},{type:12,data:a}];return t.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let i=tv("qkv_with_bias",r.dataType,l),n=tx("qkv",r.dataType,l),a=tx("bias",s.dataType,l);return`
  ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(n,a,i)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`}},{inputs:[r,s],outputs:[-1]})[0]},nS=(t,r,s,i,n,a,o,l)=>{let u=a;if(!(o&&tn.size(o.dims)>0))return 3===a.dims.length&&(u=a.reshape([r,i,s,n])),1===s||1===i?u:t.compute(tO(u,nk.perm),{inputs:[u],outputs:[-1]})[0];if(1===i)throw Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=(u=nE(t,a,o,r,i,s*n,l)).reshape([r,i,s,n]),1===s||1===i?u:t.compute(tO(u,nk.perm),{inputs:[u],outputs:[-1]})[0]},nz=(t,r)=>{let s=nv(t.inputs,r),i=t.inputs[0],n=nx(t.inputs,1),a=nx(t.inputs,2),o=nx(t.inputs,3),l=nx(t.inputs,4),u=nx(t.inputs,5),d=nx(t.inputs,6),c=nx(t.inputs,7);if(5===i.dims.length)throw Error("Packed QKV is not implemented");if(n?.dims.length===5)throw Error("Packed KV is not implemented");let p=n&&a&&4===n.dims.length&&4===a.dims.length,h=nS(t,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,i,o,0);if(p)return rT(t,h,n,a,l,void 0,d,c,u,s);if(!n||!a)throw Error("key and value must be provided");let f=nS(t,s.batchSize,s.numHeads,s.kvSequenceLength,s.headSize,n,o,s.hiddenSize),m=nS(t,s.batchSize,s.numHeads,s.kvSequenceLength,s.vHeadSize,a,o,2*s.hiddenSize);rT(t,h,f,m,l,void 0,d,c,u,s)}}),lp=D(()=>{oO(),oU(),oN(),oF(),nT=t=>{if(!t||t.length<1)throw Error("too few inputs")},nI=(t,r)=>{let s=[],i=r.numOutputs;return t[1].dims[0]>0&&(t[1].getBigInt64Array().forEach(t=>s.push(Number(t))),i=s.length),tr({numOutputs:i,axis:r.axis,splitSizes:s})},nC=t=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {
    if (index < ${tw("uniforms.size_in_split_axis","i",t)}) {
        return i;
    }
    }
    return ${t}u;
}`,nA=t=>{let r=t.length,s=[];for(let i=0;i<r;++i){let n=t[i].setByIndices("indices","input[global_idx]");1===r?s.push(n):0===i?s.push(`if (output_number == ${i}u) { ${n} }`):i===r-1?s.push(`else { ${n} }`):s.push(`else if (output_number == ${i}) { ${n} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${t[0].type.indices}, global_idx: u32) {
        ${s.join(`
`)}
      }`},nM=(t,r)=>{let s=t[0].dims,i=tn.size(s),n=t[0].dataType,a=tn.normalizeAxis(r.axis,s.length),o=Array(r.numOutputs),l=tx("input",n,s.length),u=Array(r.numOutputs),d=[],c=[],p=0,h=[{type:12,data:i}];for(let i=0;i<r.numOutputs;i++){p+=r.splitSizes[i],u[i]=p;let l=s.slice();l[a]=r.splitSizes[i],c.push(l),o[i]=tv(`output${i}`,n,l.length),d.push({dims:c[i],dataType:t[0].dataType})}return h.push({type:12,data:u},...tf(s,...c)),{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:t=>`
  ${t.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(l,...o)}
  ${nC(u.length)}
  ${nA(o)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${l.offsetToIndices("global_idx")};
    var index = ${l.indicesGet("indices",a)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${tw("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${l.indicesSet("indices",a,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`,getRunData:()=>({outputs:d,dispatchGroup:{x:Math.ceil(i/64)},programUniforms:h})}},nO=(t,r)=>{nT(t.inputs);let s=1===t.inputs.length?r:nI(t.inputs,r);t.compute(nM(t.inputs,s),{inputs:[0]})},nB=t=>{let r=t.axis,s=t.splitSizes,i=t.numOutputs<0?s.length:t.numOutputs;if(i!==s.length)throw Error("numOutputs and splitSizes lengh must be equal");return tr({axis:r,numOutputs:i,splitSizes:s})}}),lh=D(()=>{oN(),oW(),lc(),lp(),oq(),nP=(t,r)=>{if(r.doRotary&&t.length<=7)throw Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let s=t[0],i=t[1],n=t[2],a=t[3],o=t[4];if(-1!==r.localWindowSize)throw Error("Local attention is not supported");if(0!==r.softcap)throw Error("Softcap is not supported");if(0!==r.rotaryInterleaved)throw Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw Error("Smooth softmax is not supported");if(3!==s.dims.length&&5!==s.dims.length)throw Error("Input query is expected to have 3 or 5 dimensions");let l=s.dims[0],u=s.dims[1],d=3===s.dims.length?s.dims[2]:r.numHeads*s.dims[4],c=u,p=0,h=!i||0===i.dims.length,f=Math.floor(h?d/(r.numHeads+2*r.kvNumHeads):d/r.numHeads);h&&(d=f*r.numHeads);let m=a&&0!==a.dims.length,_=o&&0!==o.dims.length;if(m&&4===a.dims.length&&a.dims[0]===l&&a.dims[1]!==r.kvNumHeads&&a.dims[2]===r.kvNumHeads&&a.dims[3]===f)throw Error("BSNH pastKey/pastValue is not supported");if(m&&_){if(4!==a.dims.length)throw Error('Input "past_key" is expected to have 4 dimensions');if(4!==o.dims.length)throw Error('Input "past_value" is expected to have 4 dimensions');p=a.dims[2]}else if(m||_)throw Error('Input "past_key" and "past_value" shall be both present or both absent');let g=1;if(i&&i.dims.length>0){if(3!==s.dims.length)throw Error('Input "query" is expected to have 3 dimensions when key is given');if(i.dims.length<3||i.dims.length>5)throw Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(s.dims[0]!==i.dims[0])throw Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===i.dims.length){if(s.dims[2]%i.dims[2]!=0)throw Error('Dimension 2 of "query" should be a multiple of "key"');c=i.dims[1]}else if(5===i.dims.length){if(i.dims[2]!==r.numHeads||2!==i.dims[3]||i.dims[4]!==f)throw Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw Error('Expect "value" be none when "key" has packed kv format.');c=i.dims[1]}else{if(i.dims[1]!==r.numHeads||i.dims[3]!==f)throw Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');c=i.dims[2]}}else{if(3!==s.dims.length&&5!==s.dims.length)throw Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===s.dims.length&&(s.dims[2]!==r.numHeads||3!==s.dims[3]))throw Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}let y=!1,w=r.kvNumHeads?f*r.kvNumHeads:d;if(n&&n.dims.length>0){if(3!==n.dims.length&&4!==n.dims.length)throw Error('Input "value" is expected to have 3 or 4 dimensions');if(s.dims[0]!==n.dims[0])throw Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===n.dims.length){if(c!==n.dims[1])throw Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');w=n.dims[2]}else{if(c!==n.dims[2])throw Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');w=n.dims[1]*n.dims[3],y=!0}}let b=t.length>4?t[5]:void 0;if(b&&1!==b.dims.length&&b.dims[0]!==l)throw Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:u,pastSequenceLength:p,kvSequenceLength:c,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:d,vHiddenSize:w,headSize:f,vHeadSize:Math.floor(w/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:r.scale,broadcastResPosBias:!1,passPastInKv:y,qkvFormat:g}},nR=tr({perm:[0,2,1,3]}),nD=(t,r,s)=>{let i=r,n=s.kvNumHeads;return 3===r.dims.length&&0!==s.kvSequenceLength&&(i=r.reshape([s.batchSize,s.kvSequenceLength,n,s.headSize]),i=t.compute(tO(i,nR.perm),{inputs:[i],outputs:[-1]})[0]),i},nL=(t,r)=>{let s=nP(t.inputs,r);if(5===t.inputs[0].dims.length)throw Error("Packed QKV is not implemented");if(t.inputs[1]?.dims.length===5)throw Error("Packed KV is not implemented");let i=t.inputs[0],n=t.inputs[1]&&t.inputs[1].dims.length>0?t.inputs[1]:void 0,a=t.inputs[2]&&t.inputs[2].dims.length>0?t.inputs[2]:void 0,o=t.inputs[3]&&0!==t.inputs[3].dims.length?t.inputs[3]:void 0,l=t.inputs[4]&&0!==t.inputs[4].dims.length?t.inputs[4]:void 0,u=t.inputs.length>4?t.inputs[5]:void 0,d=t.inputs.length>5?t.inputs[6]:void 0,c=s.kvNumHeads?s.kvNumHeads:s.numHeads,p=tr({axis:2,numOutputs:3,splitSizes:[s.numHeads*s.headSize,c*s.headSize,c*s.headSize]}),[h,f,m]=n||a?[i,n,a]:t.compute(nM([i],p),{inputs:[i],outputs:[-1,-1,-1]}),_=nS(t,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,h,void 0,0);rT(t,_,nD(t,f,s),nD(t,m,s),void 0,void 0,o,l,void 0,s,u,d)}}),lf=D(()=>{oO(),oU(),oq(),oF(),nN=(t,r,s,i,n,a,o,l)=>{let u=tm(a),d=1===u?"f32":`vec${u}f`,c=1===u?"vec2f":`mat2x${u}f`,p=n*o,h=64;1===p&&(h=256);let f=[n,o,a/u],m=[n,o,2],_=[];return _.push(...tf(f,m)),t.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${l};${h}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:m,dataType:1}],dispatchGroup:{x:p},programUniforms:_}),getShaderSource:t=>{let n=tx("x",r.dataType,3,u),a=[n,tx("scale",s.dataType,s.dims),tx("bias",i.dataType,i.dims),tv("output",1,3,2)];return`
  var<workgroup> workgroup_shared : array<${c}, ${h}>;
  const workgroup_size = ${h}u;
  ${t.declareVariables(...a)}
  ${t.mainStart(h)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${d}(0);
    var squared_sum = ${d}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${d}(${n.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${c}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${ty("workgroup_shared[0][0]",u)} / f32(hight * ${u});
      let squared_sum_final = ${ty("workgroup_shared[0][1]",u)} / f32(hight * ${u});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${l}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`}},{inputs:[r,s,i],outputs:[-1]})[0]},nU=(t,r,s)=>{let i=r[0].dims,n=i[0],a=i[1],o=tn.sizeFromDimension(i,2),l=tm(o),u=tn.size(i)/l,d=nN(t,r[0],r[1],r[2],n,o,a,s.epsilon),c=[n,a,o/l],p=[n,a];t.compute({name:"InstanceNormalization",shaderCache:{hint:`${l}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},...tf(c,p,c)]}),getShaderSource:t=>{let s=tx("x",r[0].dataType,c.length,l),i=tx("scale_shift",1,p.length,2),n=tv("output",r[0].dataType,c.length,l),a=[s,i,n];return`
  ${t.registerUniform("output_size","u32").declareVariables(...a)}
  ${t.mainStart()}
  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${n.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${i.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${s.getByOffset("global_idx")} * ${n.type.value}(scale_shift.x) + ${n.type.value}(scale_shift.y);
      ${n.setByOffset("global_idx","value")};
  }`}},{inputs:[r[0],d]})},nF=(t,r,s)=>{let i=r[0].dims,n=i[0],a=i[i.length-1],o=tn.sizeFromDimension(i,1)/a,l=tm(a),u=tn.size(i)/l,d=[{type:12,data:o},{type:12,data:Math.floor(a/l)}],c=!1,p=[0,i.length-1];for(let t=0;t<i.length-2;t++)c=c||1!==i[t+1],p.push(t+1);let h=(c=c&&1!==i[i.length-1])?t.compute(tO(t.inputs[0],p),{inputs:[t.inputs[0]],outputs:[-1]})[0]:t.inputs[0].reshape(Array.from({length:i.length},(t,r)=>i[p[r]])),f=nN(t,h,r[1],r[2],n,o,a,s.epsilon);t.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let s=tp(r[0].dataType),n=1===l?"vec2f":`mat${l}x2f`,a=t=>{let r=0===t?"x":"y",i=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${s}(${i}(scale.${r}))`;case 2:return`vec2<${s}>(${i}(scale[0].${r}, scale[1].${r}))`;case 4:return`vec4<${s}>(${i}(scale[0].${r}, scale[1].${r}, scale[2].${r}, scale[3].${r}))`;default:throw Error(`Not supported compoents ${l}`)}},o=tx("input",r[0].dataType,r[0].dims,l),u=tv("output",r[0].dataType,i,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${o.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${n}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${u.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${t.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${a(0)}, ${a(1)});
  }`}},{inputs:[r[0],f]})},nq=(t,r)=>{"NHWC"===r.format?nF(t,t.inputs,r):nU(t,t.inputs,r)}}),lm=D(()=>{oO(),oU(),oF(),nV=t=>{if(!t||t.length<2)throw Error("layerNorm requires at least 2 inputs.")},nj=(t,r,s)=>{let i=r.simplified,n=t[0].dims,a=t[1],o=!i&&t[2],l=tn.normalizeAxis(r.axis,n.length),u=tn.sizeToDimension(n,l),d=tn.sizeFromDimension(n,l),c=tn.size(a.dims),p=o?tn.size(o.dims):0;if(c!==d||o&&p!==d)throw Error(`Size of X.shape()[axis:] == ${d}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let t=0;t<n.length;++t)t<l?h.push(n[t]):h.push(1);let f=tm(d),m=["type","type"],_=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/f)},{type:1,data:r.epsilon}];o&&m.push("type");let g=s>1,y=s>2,w=[{dims:n,dataType:t[0].dataType}];return g&&w.push({dims:h,dataType:1}),y&&w.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${s};${i}`,inputDependencies:m},getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:r=>{let s=tp(t[0].dataType),l=[tx("x",t[0].dataType,t[0].dims,f),tx("scale",a.dataType,a.dims,f)];return o&&l.push(tx("bias",o.dataType,o.dims,f)),l.push(tv("output",t[0].dataType,n,f)),g&&l.push(tv("mean_data_output",1,h)),y&&l.push(tv("inv_std_output",1,h)),`
  ${r.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...l)}
  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${t_("f32",f)};
    var mean_square_vector = ${t_("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${tg(s,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${ty("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${ty("mean_square_vector",f)} / uniforms.norm_size ${i?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${tg(s,f,"x[j + offset]")};
      let f32scale = ${tg(s,f,"scale[j]")};
      output[j + offset] = ${l[0].type.value}((f32input ${i?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${tg(s,f,"bias[j]")}`:""}
      );
    }

    ${g?"mean_data_output[global_idx] = mean":""};
    ${y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`}}},nG=(t,r)=>{nV(t.inputs),t.compute(nj(t.inputs,r,t.outputCount))}}),l_=D(()=>{oU(),o2(),o3(),nW=t=>{if(!t||2!==t.length)throw Error("MatMul requires 2 inputs.");if(t[0].dims[t[0].dims.length-1]!==t[1].dims[t[1].dims.length-2])throw Error("shared dimension does not match.")},nH=t=>{nW(t.inputs);let r=ti.calcShape(t.inputs[0].dims,t.inputs[1].dims,!0);if(!r)throw Error("Can't use matmul on the given tensors");let s=r[r.length-1],i=t.inputs[0].dims[t.inputs[0].dims.length-1];if(s<8&&i<8)t.compute(sX(t.inputs,{activation:""},r));else{let n=r[r.length-2],a=tn.size(t.inputs[0].dims.slice(0,-2)),o=tn.size(t.inputs[1].dims.slice(0,-2));if(1!==a&&1===n&&1===o){let n=t.inputs[0].reshape([1,a,i]),o=t.inputs[1].reshape([1,i,s]),l=[1,a,s],u=[n,o];t.compute(s3(u,{activation:""},r,l),{inputs:u})}else t.compute(s3(t.inputs,{activation:""},r))}}}),lg=D(()=>{oO(),oU(),oN(),oF(),nK=(t,r)=>{if(t.length<3||t.length>4)throw Error("MatMulNBits requires 3 or 4 inputs");let s=t[0],i=s.dims.length;if(s.dims[i-1]!==r.k)throw Error("The last dim of input shape does not match the k value");let n=Math.floor((r.k+r.blockSize-1)/r.blockSize),a=r.blockSize/8*r.bits,o=t[1];if(!tn.areEqual(o.dims,[r.n,n,a]))throw Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let l=t[2].dims;if(tn.size(l)!==r.n*n)throw Error("scales input size error.");if(4===t.length){let s=t[3].dims,i=r.bits>4?r.n*n:r.n*Math.floor((n+1)/2);if(tn.size(s)!==i)throw Error("zeroPoints input size error.")}},nX=(t,r)=>{let s=t[0].dims,i=s.length,n=s[i-2],a=r.k,o=r.n,l=s.slice(0,i-2),u=tn.size(l),d=t[1].dims[2]/4,c=t[0].dataType,p=tm(r.k),h=tm(d),f=tm(o),m=l.concat([n,o]),_=n>1&&o/f%2==0?2:1,g=tn.size(m)/f/_,y=[],w=[u,n,a/p],b=tn.convertShape(t[1].dims).slice();b.splice(-1,1,d/h),y.push(...tf(w)),y.push(...tf(b)),y.push(...tf(t[2].dims)),4===t.length&&y.push(...tf(tn.convertShape(t[3].dims)));let x=[u,n,o/f];return y.push(...tf(x)),{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${p};${h};${f};${_};64`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:c}],dispatchGroup:{x:g},programUniforms:y}),getShaderSource:s=>{let i=w.length,n=tx("a",t[0].dataType,i,p),a=tx("b",12,b.length,h),o=tx("scales",t[2].dataType,t[2].dims.length),l=[n,a,o],u=4===t.length?tx("zero_points",12,t[3].dims.length):void 0;u&&l.push(u);let c=x.length,m=tv("output",t[0].dataType,c,f),g=tp(t[0].dataType),y=(()=>{switch(p){case 1:return`array<${g}, 8>`;case 2:return`mat4x2<${g}>`;case 4:return`mat2x4<${g}>`;default:throw Error(`${p}-component is not supported.`)}})();return`
        var<workgroup> workgroup_shared: array<${m.type.value}, ${64*_}>;
        ${s.declareVariables(...l,m)}
        ${s.mainStart([64,1,1])}
          let output_indices = ${m.offsetToIndices(`(global_idx / 64) * ${_}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/p};
            ${(()=>{let t=`
            var col_index = col * ${f};
            ${u?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${g}(8);`}
            `;for(let r=0;r<f*_;r++)t+=`
            let scale${r} = ${o.getByOffset("col_index * nBlocksPerCol + block")};
            ${u?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${u.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${r} = ${g}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return t})()}
            for (var word: u32 = 0; word < ${d}; word += ${h}) {
              ${(()=>{let t=`col_index = col * ${f};`;for(let r=0;r<f*_;r++)t+=`
            let b${r}_data = ${a.getByIndices(`${a.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return t+`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${y};
            var b_dequantized_values: ${y};`})()}
              for (var i: u32 = 0; i < ${h}; i++) {
                ${(()=>{let t=`
          // reuse a data
            var input_offset = ${n.indicesToOffset(`${n.type.indices}(batch, row, word_offset)`)};
            var a_data: ${y};
            for (var j: u32 = 0; j < ${8/p}; j++) {
              a_data[j] = ${n.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let r=0;r<f*_;r++)t+=`
            b_value = ${1===h?`b${r}_data`:`b${r}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${y}(${Array.from({length:4},(t,r)=>`${g}(b_value_lower[${r}]), ${g}(b_value_upper[${r}])`).join(", ")});
            b_dequantized_values = ${1===p?`${y}(${Array.from({length:8},(t,s)=>`(b_quantized_values[${s}] - ${u?`zero_point${r}`:"zero_point"}) * scale${r}`).join(", ")});`:`(b_quantized_values - ${y}(${Array(8).fill(`${u?`zero_point${r}`:"zero_point"}`).join(",")})) * scale${r};`};
            workgroup_shared[local_id.x * ${_} + ${Math.floor(r/f)}]${f>1?`[${r%f}]`:""} += ${Array.from({length:8/p},(t,r)=>`${1===p?`a_data[${r}] * b_dequantized_values[${r}]`:`dot(a_data[${r}], b_dequantized_values[${r}])`}`).join(" + ")};
          `;return t})()}
                word_offset += ${8/p};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${_}) {
            var output_value: ${m.type.value} = ${m.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < 64u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${_};
            }
            ${m.setByIndices(`${m.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`}}},nY=(t,r)=>{let s=t[0].dims,i=s.length,n=s[i-2],a=r.k,o=r.n,l=s.slice(0,i-2),u=tn.size(l),d=t[1].dims[2]/4,c=t[0].dataType,p=tm(r.k),h=tm(d),f=l.concat([n,o]),m=o%8==0?8:o%4==0?4:1,_=128/m,g=_*h*8,y=g/p,w=g/r.blockSize,b=tn.size(f)/m,x=[],v=[u,n,a/p],$=tn.convertShape(t[1].dims).slice();$.splice(-1,1,d/h),x.push(...tf(v)),x.push(...tf($)),x.push(...tf(t[2].dims)),4===t.length&&x.push(...tf(tn.convertShape(t[3].dims)));let k=[u,n,o];return x.push(...tf(k)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${p};${h};${_};${m}`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:c}],dispatchGroup:{x:b},programUniforms:x}),getShaderSource:s=>{let i=v.length,n=tx("a",t[0].dataType,i,p),a=tx("b",12,$.length,h),o=tx("scales",t[2].dataType,t[2].dims.length),l=[n,a,o],u=4===t.length?tx("zero_points",12,t[3].dims.length):void 0;u&&l.push(u);let d=k.length,c=tv("output",t[0].dataType,d),f=tp(t[0].dataType);return`
        var<workgroup> sub_a: array<${n.type.value}, ${y}>;
        var<workgroup> inter_results: array<array<${c.type.value}, ${_}>, ${m}>;
        ${s.declareVariables(...l,c)}
        ${s.mainStart([_,m,1])}
          let output_indices = ${c.offsetToIndices(`workgroup_index * ${m}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${w} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${y};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${y}; a_offset += 128)
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${n.getByIndices(`${n.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${n.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${w} + local_id.x;
            ${u?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${u.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${f}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${f}(8);`}
            let scale = ${o.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${a.getByIndices(`${a.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/p};
            for (var i: u32 = 0; i < ${h}; i++) {
              ${(()=>{switch(p){case 1:return`
          let a_data0 = vec4<${f}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${f}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${f}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${f}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw Error(`${p}-component is not supported.`)}})()}
              let b_value = ${1===h?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${f}>(${Array.from({length:4},(t,r)=>`${f}(b_value_lower[${r}]), ${f}(b_value_upper[${r}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${f}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(t,r)=>`dot(a_data${r}, b_dequantized_values[${r}])`).join(" + ")};
              word_offset += ${8/p};
            }
            workgroupBarrier();
          }

          if (local_idx < ${m}) {
            var output_value: ${c.type.value} = ${c.type.value}(0);
            for (var b = 0u; b < ${_}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${c.setByIndices(`${c.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`}}},nQ=(t,r)=>{nK(t.inputs,r),32===r.blockSize&&t.adapterInfo.isVendor("intel")&&t.adapterInfo.isArchitecture("gen-12lp")?t.compute(nY(t.inputs,r)):t.compute(nX(t.inputs,r))},nZ=t=>tr(t)}),ly=D(()=>{oO(),oU(),oF(),nJ=t=>{if(!t||t.length<1)throw Error("Too few inputs");if(1!==t[0].dataType&&10!==t[0].dataType)throw Error("Input type must be float or float16.");if(t.length>=2){let r=2*t[0].dims.length===t[1].dims[0];if(4===t.length&&(r=2*t[3].dims[0]===t[1].dims[0]),!r)throw Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},n0=(t,r,s)=>{let i="";for(let n=r-1;n>=0;--n)i+=`
            k = i32(${t.indicesGet("indices",n)}) - ${tw("uniforms.pads",n,s)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${tw("uniforms.x_shape",n,r)})) {
              break;
            }
            offset += k * i32(${tw("uniforms.x_strides",n,r)});
        `;return`
          value = ${t.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${i}
            value = x[offset];
          }
      `},n1=(t,r,s)=>{let i="";for(let n=r-1;n>=0;--n)i+=`
                k = i32(${t.indicesGet("indices",n)}) - ${tw("uniforms.pads",n,s)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${tw("uniforms.x_shape",n,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${tw("uniforms.x_shape",n,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${tw("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},n2=(t,r,s)=>{let i="";for(let n=r-1;n>=0;--n)i+=`
                k = i32(${t.indicesGet("indices",n)}) - ${tw("uniforms.pads",n,s)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${tw("uniforms.x_shape",n,r)})) {
                  k = i32(${tw("uniforms.x_shape",n,r)}) - 1;
                }
                offset += k * i32(${tw("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},n3=(t,r,s)=>{let i="";for(let n=r-1;n>=0;--n)i+=`
                k = i32(${t.indicesGet("indices",n)}) - ${tw("uniforms.pads",n,s)};
                if (k < 0)  {
                  k += i32(${tw("uniforms.x_shape",n,r)}]);
                }
                if (k >= i32(${tw("uniforms.x_shape",n,r)})) {
                  k -= i32(${tw("uniforms.x_shape",n,r)});
                }
                offset += k * i32(${tw("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},n4=(t,r,s)=>{switch(s.mode){case 0:return n0(t,r,s.pads.length);case 1:return n1(t,r,s.pads.length);case 2:return n2(t,r,s.pads.length);case 3:return n3(t,r,s.pads.length);default:throw Error("Invalid mode")}},n6=(t,r)=>{let s=tn.padShape(t[0].dims.slice(),r.pads),i=t[0].dims,n=[{type:12,data:tn.size(s)},{type:6,data:r.pads}],a=t.length>=3&&t[2].data;return 0===r.mode&&n.push({type:a?t[2].dataType:1,data:r.value}),n.push(...tf(t[0].dims,s)),{name:"Pad",shaderCache:{hint:`${r.mode}${a}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(tn.size(s)/64)},programUniforms:n}),getShaderSource:n=>{let o=tv("output",t[0].dataType,s.length),l=tx("x",t[0].dataType,i.length),u=l.type.value,d=n4(o,i.length,r),c=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return 0===r.mode&&c.push({name:"constant_value",type:a?u:"f32"}),`
            ${n.registerUniforms(c).declareVariables(l,o)}
            ${n.mainStart()}
            ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${o.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${d}
            output[global_idx] = value;
        }`}}},n8=(t,r)=>{if(!(t.length>1))return r;{let s=t[1].getBigInt64Array(),i=t.length>=3&&t[2].data?10===t[2].dataType?t[2].getUint16Array()[0]:t[2].getFloat32Array()[0]:0,n=t[0].dims.length,a=new Int32Array(2*n).fill(0);if(t.length>=4){let r=t[3].getBigInt64Array();for(let t=0;t<r.length;t++)a[Number(r[t])]=Number(s[t]),a[Number(r[t])+n]=Number(s[t+r.length])}else s.forEach((t,r)=>a[Number(r)]=Number(t));let o=[];return a.forEach(t=>o.push(t)),{mode:r.mode,value:i,pads:o}}},n5=(t,r)=>{nJ(t.inputs);let s=n8(t.inputs,r);t.compute(n6(t.inputs,s),{inputs:[0]})}}),lw=D(()=>{ea(),oO(),oU(),oF(),n9=t=>{if(u.webgpu.validateInputContent&&(!t||1!==t.length))throw Error("Pool ops requires 1 input.")},n7=(t,r,s)=>{let i="NHWC"===r.format,n=t.dims.slice();i&&n.splice(1,0,n.pop());let a=Object.hasOwnProperty.call(r,"dilations"),o=r.kernelShape.slice(),l=r.strides.slice(),u=a?r.dilations.slice():[],d=r.pads.slice();ta.adjustPoolAttributes(s,n,o,l,u,d);let c=ta.computePoolOutputShape(s,n,l,u,o,d,r.autoPad),p=Object.assign({},r);a?Object.assign(p,{kernelShape:o,strides:l,pads:d,dilations:u,cacheKey:r.cacheKey}):Object.assign(p,{kernelShape:o,strides:l,pads:d,cacheKey:r.cacheKey});let h=c.slice();return h.push(h.splice(1,1)[0]),[p,i?h:c]},ae=(t,r)=>{let s="NHWC"===r.format,i=[{type:12,data:tn.size(t)},{type:12,data:tn.size(r.kernelShape)}],n=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let t=r.kernelShape[r.kernelShape.length-1],s=r.strides[r.strides.length-1],a=r.pads[r.pads.length/2-1],o=r.pads[r.pads.length-1],l=!!(a+o);i.push({type:12,data:t},{type:12,data:s},{type:12,data:a},{type:12,data:o}),n.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(2===r.kernelShape.length){let t=r.kernelShape[r.kernelShape.length-2],s=r.strides[r.strides.length-2],a=r.pads[r.pads.length/2-2],o=r.pads[r.pads.length-2];u=!!(a+o),i.push({type:12,data:t},{type:12,data:s},{type:12,data:a},{type:12,data:o}),n.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,n,!0,l,u]}{if(s)throw Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let t=tn.computeStrides(r.kernelShape);return i.push({type:12,data:t},{type:12,data:r.pads},{type:12,data:r.strides}),n.push({name:"kernelStrides",type:"u32",length:t.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length}),[i,n,!!r.pads.reduce((t,r)=>t+r),!1,!1]}},at=(t,r,s,i,n,a,o,l,u,d,c,p)=>{let h="NHWC"===n.format,f=r.type.value,m=tv("output",r.type.tensor,i);if(n.kernelShape.length<=2){let i="",d="",_="",g=s-(h?2:1);if(i=c?`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${g}] < 0 || xIndices[${g}]
                      >= uniforms.x_shape[${g}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${a}
                }`:`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${a}
                }`,2===n.kernelShape.length){let t=s-(h?3:2);d=p?`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${t}] = indices[${t}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${t}] < 0 || xIndices[${t}] >= uniforms.x_shape[${t}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${t}] = indices[${t}] * uniforms.sh - uniforms.phStart + j;
                `,_=`
              }
            `}return`
            ${t.registerUniforms(u).declareVariables(r,m)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${m.offsetToIndices("global_idx")};
              var xIndices = ${m.offsetToIndices("global_idx")};

              var value = ${f}(${l});
              var pad = 0;
              ${d}
              ${i}
              ${_}
              ${o}

              output[global_idx] = value;
            }`}{if(h)throw Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let i=n.kernelShape.length,c=n.pads.length,p="";return p=d?`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${a}
              }`:`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${a}
            `,`
            ${t.registerUniforms(u).declareVariables(r,m)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${m.offsetToIndices("global_idx")};
              var xIndices = ${m.offsetToIndices("global_idx")};

              var offsets: array<u32, ${i}>;

              var value = ${f}(${l});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${i-1}u; j++) {
                  offsets[j] = offset / ${tw("uniforms.kernelStrides","j",i)};
                  offset -= offsets[j] * ${tw("uniforms.kernelStrides","j",i)};
                }
                offsets[${i-1}] = offset;

                isPad = false;
                for (var j = ${s-i}u; j < ${s}u; j++) {
                  xIndices[j] = indices[j] * ${tw("uniforms.strides",`j - ${s-i}u`,i)}
                    + offsets[j - ${s-i}u] - ${tw("uniforms.pads","j - 2u",c)};
                  ${p}
              }
              ${o}

              output[global_idx] = value;
            }`}},ar=t=>`${t.format};${t.ceilMode};${t.autoPad};${t.kernelShape.length}`,as=t=>`${ar(t)};${t.countIncludePad}`,ai=t=>`${ar(t)};${t.storageOrder};${t.dilations}`,an=t=>({format:t.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}),aa=(t,r,s,i)=>{let[n,a]=n7(r,i,s),o=tx("x",r.dataType,r.dims.length),l=o.type.value,u="";n.countIncludePad?u+=`value /= ${l}(uniforms.kernelSize);`:u+=`value /= ${l}(i32(uniforms.kernelSize) - pad);`;let[d,c,p,h,f]=ae(a,n);return d.push(...tf(r.dims,a)),{name:t,shaderCache:{hint:`${i.cacheKey};${p};${h};${f}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(tn.size(a)/64)},programUniforms:d}),getShaderSource:t=>at(t,o,r.dims.length,a.length,n,"value += x_val;",u,0,c,p,h,f)}},ao=t=>{let r=0!==t.count_include_pad,s=an(t);if(0!==s.ceilMode)throw Error("using ceil() in shape computation is not yet supported for AveragePool");let i={countIncludePad:r,...s,cacheKey:""};return{...i,cacheKey:as(i)}},al=(t,r)=>{n9(t.inputs),t.compute(aa("AveragePool",t.inputs[0],!1,r))},au={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},ad=t=>{let r=t.format;return{format:r,...au,cacheKey:r}},ac=(t,r)=>{n9(t.inputs),t.compute(aa("GlobalAveragePool",t.inputs[0],!0,r))},ap=(t,r,s,i)=>{let[n,a]=n7(r,i,s),o=`
      value = max(x_val, value);
    `,l=tx("x",r.dataType,r.dims.length),[u,d,c,p,h]=ae(a,n);return u.push(...tf(r.dims,a)),{name:t,shaderCache:{hint:`${i.cacheKey};${c};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(tn.size(a)/64)},programUniforms:u}),getShaderSource:t=>at(t,l,r.dims.length,a.length,n,o,"",10===r.dataType?-65504:-1e5,d,c,p,h)}},ah=(t,r)=>{n9(t.inputs),t.compute(ap("MaxPool",t.inputs[0],!1,r))},af=t=>{let r=t.storage_order,s=t.dilations,i=an(t);if(0!==r)throw Error("column major storage order is not yet supported for MaxPool");if(0!==i.ceilMode)throw Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:r,dilations:s,...i,cacheKey:""};return{...n,cacheKey:ai(n)}},am=t=>{let r=t.format;return{format:r,...au,cacheKey:r}},a_=(t,r)=>{n9(t.inputs),t.compute(ap("GlobalMaxPool",t.inputs[0],!0,r))}}),lb=D(()=>{oO(),oU(),oN(),oF(),ag=(t,r)=>{if(t.length<2||t.length>3)throw Error("DequantizeLinear requires 2 or 3 inputs.");if(3===t.length&&t[1].dims===t[2].dims)throw Error("x-scale and x-zero-point must have the same shape.");if(3===t.length&&t[0].dataType!==t[2].dataType)throw Error("x and x-zero-point must have the same data type.");if(6===t[0].dataType&&t.length>2)throw Error("In the case of dequantizing int32 there is no zero point.");if(0!==t[1].dims.length&&1!==t[1].dims.length&&t[1].dims.length!==t[0].dims.length)throw Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(t.length>2){if(t[0].dataType!==t[2].dataType)throw Error("x and x-zero-point must have the same data type.");if(t[1].dims.length!==t[2].dims.length)throw Error("scale and zero-point inputs must have the same rank.");if(!t[1].dims.map((r,s)=>r===t[2].dims[s]).reduce((t,r)=>t&&r,!0))throw Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(0===t[1].dims.length||1===t[1].dims.length&&1===t[1].dims[0])throw Error("blockSize must be set only for block quantization.");if(!t[1].dims.map((s,i)=>i===r.axis||s===t[0].dims[i]).reduce((t,r)=>t&&r,!0))throw Error("For block qunatization, scale input shape to match the input shape except for the axis");if(t[1].dims.length!==t[0].dims.length)throw Error("For block qunatization the scale input rank must be the same as the x rank.");let s=t[0].dims[r.axis],i=t[1].dims[r.axis];if(r.blockSize<Math.ceil(s/i)||r.blockSize>Math.ceil(s/(i-1)-1))throw Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},ay=(t,r)=>{let s=tn.normalizeAxis(r.axis,t[0].dims.length),i=t[0].dataType,n=3===i,a=t[0].dims,o=t[1].dataType,l=tn.size(a),u=3===i||2===i,d=u?[Math.ceil(tn.size(t[0].dims)/4)]:t[0].dims,c=t[1].dims,p=t.length>2?t[2]:void 0,h=p?u?[Math.ceil(tn.size(p.dims)/4)]:p.dims:void 0,f=0===c.length||1===c.length&&1===c[0],m=!1===f&&1===c.length,_=tm(l),g=f&&(!u||4===_),y=g?_:1,w=tx("input",u?12:i,d.length,g&&!u?_:1),b=tx("scale",o,c.length),x=p?tx("zero_point",u?12:i,h.length):void 0,v=tv("output",o,a.length,y),$=[w,b];x&&$.push(x);let k=[d,c];p&&k.push(h);let E=[{type:12,data:l/y},{type:12,data:s},{type:12,data:r.blockSize},...tf(...k,a)];return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:x?["rank","rank","rank"]:["rank","rank"]},getShaderSource:t=>`
      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...$,v)}
      ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${v.offsetToIndices("global_idx")};

          // Set input x
          ${u?`
            let input = ${w.getByOffset("global_idx / 4")};
            let x_vec = ${n?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${1===y?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${w.getByOffset("global_idx")};`};

          // Set scale input
          ${f?`let scale_value= ${b.getByOffset("0")}`:m?`
            let scale_index = ${v.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${b.getByOffset("scale_index")};`:`
            var scale_indices: ${b.type.indices} = output_indices;
            let index = ${b.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${b.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${b.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${x?f?u?`
                let zero_point_input = ${x.getByOffset("0")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${x.getByOffset("0")}`:m?u?`
                let zero_point_index = ${v.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${x.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${v.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${x.getByOffset("zero_point_index")};`:u?`
                let zero_point_offset = ${b.indicesToOffset("scale_indices")};
                let zero_point_input = ${x.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${x.getByIndices("scale_indices")};`:`let zero_point_value = ${u?n?"i32":"u32":w.type.value}(0);`};
      // Compute and write output
      ${v.setByOffset("global_idx",`${v.type.value}(x_value - zero_point_value) * scale_value`)};
      }`,getRunData:()=>({outputs:[{dims:a,dataType:o}],dispatchGroup:{x:Math.ceil(l/y/64),y:1,z:1},programUniforms:E})}},aw=(t,r)=>{ag(t.inputs,r),t.compute(ay(t.inputs,r))},ab=t=>tr({axis:t.axis,blockSize:t.blockSize})}),lx=D(()=>{ea(),oO(),oF(),ax=(t,r,s)=>{if(t===r||t<r&&s<0||t>r&&s>0)throw Error("Range these inputs' contents are invalid.")},av=(t,r,s,i)=>{let n=Math.abs(Math.ceil((r-t)/s)),a=[n],o=[{type:12,data:n},{type:i,data:t},{type:i,data:s},...tf(a)];return{name:"Range",shaderCache:{hint:`${i}`},getShaderSource:t=>{let r=tv("output",i,a.length),s=r.type.value;return`
        ${t.registerUniforms([{name:"outputSize",type:"u32"},{name:"start",type:s},{name:"delta",type:s}]).declareVariables(r)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${s}(global_idx) * uniforms.delta;
      }`},getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:o})}},a$=t=>{let r=0,s=0,i=0;6===t.inputs[0].dataType?(r=t.inputs[0].getInt32Array()[0],s=t.inputs[1].getInt32Array()[0],i=t.inputs[2].getInt32Array()[0]):1===t.inputs[0].dataType&&(r=t.inputs[0].getFloat32Array()[0],s=t.inputs[1].getFloat32Array()[0],i=t.inputs[2].getFloat32Array()[0]),u.webgpu.validateInputContent&&ax(r,s,i),t.compute(av(r,s,i,t.inputs[0].dataType),{inputs:[]})}}),lv=D(()=>{oO(),oU(),oN(),oF(),ak=(t,r,s,i)=>{if("none"!==t&&"i32"!==i&&"u32"!==i&&"f32"!==i)throw Error(`Input ${i} is not supported with reduction ${t}.`);let n=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,a=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(t){case"none":return`${r}=${s};`;case"add":return"i32"===i||"u32"===i?`atomicAdd(&${r}, bitcast<${i}>(${s}));`:`
              ${n}bitcast<${i}>(oldValue) + (${s})${a}`;case"max":return"i32"===i||"u32"===i?`atomicMax(&${r}, bitcast<${i}>(${s}));`:`
                ${n}max(bitcast<f32>(oldValue), (${s}))${a}`;case"min":return"i32"===i||"u32"===i?`atomicMin(&${r}, bitcast<${i}>(${s}));`:`${n}min(bitcast<${i}>(oldValue), (${s}))${a}`;case"mul":return`${n}(bitcast<${i}>(oldValue) * (${s}))${a}`;default:throw Error(`Reduction ${t} is not supported.`)}},aE=(t,r)=>{let s=t[0].dims,i=t[1].dims,n=Math.ceil(tn.size(i)/1),a=i[i.length-1],o=tn.sizeFromDimension(s,a),l=[{type:12,data:n},{type:12,data:a},{type:12,data:o},...tf(t[1].dims,t[2].dims,s)];return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:l}),getShaderSource:i=>{let n=tx("indices",t[1].dataType,t[1].dims.length),a=tx("updates",t[2].dataType,t[2].dims.length,1),o="none"!==r.reduction&&""!==r.reduction?t$("output",t[0].dataType,s.length):tv("output",t[0].dataType,s.length,1);return`
      ${i.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(n,a,o)}
      ${i.mainStart()}
        ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${1===t[0].dims.length?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${ak(r.reduction,"output[data_offset + i]","value",o.type.value)}
  }

      }`}}},aS=t=>tr({reduction:t.reduction}),az=(t,r)=>{t.compute(aE(t.inputs,r),{inputs:[t.inputs[1],t.inputs[2]],outputs:[]})}}),l$=D(()=>{oO(),oU(),oN(),oF(),aT=(t,r)=>{if(t.every(t=>t>0||(()=>{throw Error("Resize requires scales input values to be positive")})),t.length>0){if("linear"===r.mode){if(!(2===t.length||3===t.length||4===t.length&&1===t[0]&&1===t[1]||4===t.length&&1===t[0]&&1===t[3]||5===t.length&&1===t[0]&&1===t[1]))throw Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if("cubic"===r.mode&&!(2===t.length||4===t.length&&1===t[0]&&1===t[1]||4===t.length&&1===t[0]&&1===t[3]))throw Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},aI=(t,r,s)=>{r.every(t=>t>=0&&t<s||(()=>{throw Error("Resize requires axes input values to be positive and less than rank")}));let i=Array(s).fill(1);return r.forEach((r,s)=>i[r]=t[s]),i},aC=(t,r,s,i,n,a)=>{let[o,l,u]=s>10?[1,2,3]:[-1,t.length>1?1:-1,-1],d=t[0].dims.length;if(o>0&&t.length>o&&t[o].dims.length>0)t[o].getFloat32Array().forEach(t=>a.push(t));else if("tf_crop_and_resize"===r.coordinateTransformMode)throw Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(l>0&&t.length>l&&1===t[l].dims.length&&t[l].dims[0]>0){if(t[l].getFloat32Array().forEach(t=>i.push(t)),0!==i.length&&i.length!==d&&s>=18&&i.length!==r.axes.length)throw Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");aT(i,r),r.axes.length>0&&aI(i,r.axes,d).forEach((t,r)=>i[r]=t)}if(u>0&&t.length>u&&1===t[u].dims.length&&t[u].dims[0]>0&&(t[u].getBigInt64Array().forEach(t=>n.push(Number(t))),0!==n.length&&n.length!==d&&s>=18&&n.length!==r.axes.length))throw Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(0!==i.length&&i.length!==r.axes.length)throw Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==n.length&&n.length!==r.axes.length)throw Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if("u">typeof i&&"u">typeof n&&i.length>0&&n.length>d)throw Error("Resize requires only of scales or sizes to be specified")},aA=(t,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(t){case"asymmetric":return`return ${r}(xResized) / ${r}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${r}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${r}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${r}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw Error(`Coordinate transform mode ${t} is not supported`)}})()+"}",aM=(t,r,s)=>`fn getNearestPixelFromOriginal(xOriginal: ${s}, isDownSample: bool) -> ${s} {`+(()=>{switch(t){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw Error(`Nearest mode ${t} is not supported`)}})()+"}",aO=(t,r,s)=>{let i=Array(s).fill(0).concat(Array(s).fill(1)),n=0===t.length?i:t.slice();return r.length>0?(r.forEach((t,a)=>{i[t]=n[a],i[a+s]=n[r.length+a]}),i):n},aB=(t,r,s,i)=>{let n=[];if(s.length>0){if(i.length>0){if(t.forEach(t=>n.push(t)),Math.max(...i)>t.length)throw Error("axes is out of bound");i.forEach((t,r)=>n[t]=s[r])}else s.forEach(t=>n.push(t))}else{if(0===r.length)throw Error("Resize requires either scales or sizes.");n=t.map((t,s)=>Math.round(t*r[s]))}return n},aP=(t,r,s)=>{let i=(()=>{switch(s.keepAspectRatioPolicy){case"not_larger":return s.axes.length>0?Math.min(...s.axes.map(t=>r[t]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return s.axes.length>0?Math.max(...s.axes.map(t=>r[t]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw Error(`Keep aspect ratio policy ${s.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let n=t.slice();return s.axes.length>0?(s.axes.forEach(t=>r[t]=i),s.axes.forEach(s=>n[s]=Math.round(t[s]*r[s]))):(r.fill(i,0,r.length),n.forEach((t,s)=>n[s]=Math.round(t*r[s]))),n},aR=(t,r,s,i,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> array<${t.type.value}, ${s.length}> {
      var original_indices: array<${t.type.value}, ${s.length}>;
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var scale = ${tw("uniforms.scales","i",i)};
        var roi_low = ${tw("uniforms.roi","i",n)};
        var roi_hi = ${tw("uniforms.roi",`i + ${r.length}`,n)};
        if (scale == 1.0) {
          original_indices[i] = ${t.type.value}(output_index);
        } else {
          var input_shape_i = ${tw("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${tw("uniforms.output_shape","i",s.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,aD=(t,r,s,i,n,a,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${t.type.indices} {
      var input_indices: ${t.type.indices};
      for (var i:u32 = 0; i < ${i.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${tw("uniforms.scales","i",n)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${tw("uniforms.roi","i",a)};
          var roi_hi = ${tw("uniforms.roi",`i + ${s.length}`,a)};
          var input_shape_i = ${tw("uniforms.input_shape","i",s.length)};
          var output_shape_i = ${tw("uniforms.output_shape","i",i.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${t.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,aL=(t,r)=>`
    fn checkInputIndices(input_indices: ${t.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${t.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${tw("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,aN=(t,r,s,i)=>t.rank>i?`
    ${t.indicesSet("input_indices",r,"channel")};
    ${t.indicesSet("input_indices",s,"batch")};
`:"",aU=(t,r,s,i,n)=>{let[a,o,l,u]=2===s.length?[-1,0,1,-1]:[0,2,3,1],d=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",o,`max(0, min(row, ${s[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(col, ${s[l]} - 1))`)};
      ${aN(t,u,a,2)}
      return ${t.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${o}];
      var col:${d} = originalIndices[${l}];
      ${i?`if (row < 0 || row > (${s[o]} - 1) || col < 0 || col > (${s[l]} - 1)) {
        return ${n};
      }`:""};
      row = max(0, min(row, ${s[o]} - 1));
      col = max(0, min(col, ${s[l]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${s.length>2?`u32(originalIndices[${u}])`:"0"};
      var batch: u32 =  ${s.length>2?`u32(originalIndices[${a}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},aF=(t,r,s,i,n,a,o,l,u,d)=>{let[c,p]=2===s.length?[0,1]:[2,3],h=t.type.value,f=o=>{let p=o===c?"row":"col";return`
      fn ${p}CubicInterpolation(input_indices: ${t.type.indices}, output_indices: ${r.type.indices}) -> ${h} {
        var output_index = ${r.indicesGet("output_indices",o)};
        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[o]},
        ${i[o]}, ${s[o]}, ${a[o]}, ${a[o]} + ${s.length});
        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${l} && (originalIdx < 0 || originalIdx > (${s[o]} - 1))) {
          return ${u};
        }
        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${p}: ${h} = originalIdx + ${h}(i);
          if (${p} < 0 || ${p} >= ${s[o]}) {
            ${d?`coefs[i + 1] = 0.0;
                        continue;`:l?`return ${u};`:`${p} = max(0, min(${p}, ${s[o]} - 1));`};
          }
        var input_indices_copy: ${t.type.indices} = input_indices;
          ${t.indicesSet("input_indices_copy",o,`u32(${p})`)};
          data[i + 1] = ${o===c?t.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(c)};
    ${f(p)};
  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {
    var absS = abs(s);
    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${h} = 1.0 - absS;
    var twoMinusAbsS: ${h} = 2.0 - absS;
    var onePlusAbsS: ${h} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {
    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${h} {
    var input_indices: ${t.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},aq=(t,r,s,i,n)=>{let[a,o,l,u,d]=3===s.length?[-1,0,1,2,-1]:[0,2,3,4,1],c=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${c} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",o,`max(0, min(depth, ${s[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(height, ${s[l]} - 1))`)};
      ${t.indicesSet("input_indices",u,`max(0, min(width, ${s[u]} - 1))`)};
      ${aN(t,d,a,3)}
      return ${t.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${c} = originalIndices[${o}];
      var height:${c} = originalIndices[${l}];
      var width:${c} = originalIndices[${u}];
      ${i?`if (depth < 0 || depth > (${s[o]} - 1) || height < 0 || height > (${s[l]} - 1) || width < 0 || (width > ${s[u]} - 1)) {
      return ${n};
        }`:""};

    depth = max(0, min(depth, ${s[o]} - 1));
      height = max(0, min(height, ${s[l]} - 1));
      width = max(0, min(width, ${s[u]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${s.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${s.length>3?`u32(originalIndices[${a}])`:"0"};

      var x111: ${c} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${c} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${c} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${c} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${c} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${c} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${c} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${c} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${c} = abs(depth - ${c}(depth1));
      var dx2: ${c} = abs(${c}(depth2) - depth);
      var dy1: ${c} = abs(height - ${c}(height1));
      var dy2: ${c} = abs(${c}(height2) - height);
      var dz1: ${c} = abs(width - ${c}(width1));
      var dz2: ${c} = abs(${c}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},aV=(t,r,s,i,n,a)=>{let o=t.dims,l=aO(a,r.axes,o.length),u=aB(o,i,n,r.axes),d=i.slice();0===i.length&&(d=o.map((t,r)=>0===t?1:u[r]/t),"stretch"!==r.keepAspectRatioPolicy&&(u=aP(o,d,r)));let c=tv("output",t.dataType,u.length),p=tx("input",t.dataType,o.length),h=tn.size(u),f=o.length===u.length&&o.every((t,r)=>t===u[r]),m="tf_crop_and_resize"===r.coordinateTransformMode,_=r.extrapolationValue,g=p.type.value;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${s}|${d.length>0?d:""}|${n.length>0?n:""}|${l.length>0?l:""}|${f}|${o}`,inputDependencies:["rank"]},getShaderSource:t=>`
      ${f?"":`
      ${aA(r.coordinateTransformMode,g)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${aL(p,o)};
              ${aM(r.nearestMode,s,g)};
              ${aD(p,c,o,u,d.length,l.length,m)};
              `;case"linear":return`
              ${aR(c,o,u,d.length,l.length)};
              ${(()=>{if(2===o.length||4===o.length)return`${aU(p,c,o,m,_)}`;if(3===o.length||5===o.length)return`${aq(p,c,o,m,_)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(2===o.length||4===o.length)return`${aF(p,c,o,u,d,l,r.cubicCoeffA,m,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${t.registerUniform("output_size","u32").registerUniform("scales","f32",d.length).registerUniform("roi","f32",l.length).declareVariables(p,c)}
      ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${f?"output[global_idx] = input[global_idx];":`
        let output_indices = ${c.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${2===o.length||4===o.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`,getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:d},{type:1,data:l},...tf(o,u)]})}},aj=t=>{let r=t.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},aG=(t,r)=>{let s=[],i=[],n=[],a=aj(t);if(0!==r.antialias)throw Error("Only default value (0) for Antialias attribute is supported");aC(t.inputs,r,a,s,i,n),t.compute(aV(t.inputs[0],r,a,s,i,n),{inputs:[0]})},aW=t=>{let r=t.antialias,s=t.axes,i=t.coordinateTransformMode,n=t.cubicCoeffA,a=0!==t.excludeOutside,o=t.extrapolationValue,l=t.keepAspectRatioPolicy,u=t.mode,d=""===t.nearestMode?"simple":t.nearestMode;return tr({antialias:r,axes:s,coordinateTransformMode:i,cubicCoeffA:n,excludeOutside:a,extrapolationValue:o,keepAspectRatioPolicy:l,mode:u,nearestMode:d})}}),lk=D(()=>{oO(),oU(),oN(),oF(),aH=(t,r)=>{let[s,i,n,a]=t,{numHeads:o,rotaryEmbeddingDim:l}=r;if(3!==s.dims.length&&4!==s.dims.length)throw Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${s.dims.length}`);if(!tn.areEqual(i.dims,[])&&!tn.areEqual(i.dims,[1])&&2!==i.dims.length)throw Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${i.dims.length}`);if(2!==n.dims.length)throw Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(2!==a.dims.length)throw Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(!tn.areEqual(n.dims,a.dims))throw Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(l>0&&0===o)throw Error("num_heads must be provided if rotary_embedding_dim is specified");let u=s.dims[0],d=s.dims[s.dims.length-2],c=n.dims[0],p=tn.sizeFromDimension(s.dims,1)/d,h=0===l?2*n.dims[1]:p/o;if(l>h)throw Error("rotary_embedding_dim must be less than or equal to head_size");if(2===i.dims.length){if(u!==i.dims[0])throw Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${i.dims[0]}`);if(d!==i.dims[1])throw Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${i.dims[1]}`)}if(h/2!==n.dims[1]&&l/2!==n.dims[1])throw Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(d>c)throw Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},aK=(t,r)=>{let{interleaved:s,numHeads:i,rotaryEmbeddingDim:n,scale:a}=r,o=t[0].dims[0],l=tn.sizeFromDimension(t[0].dims,1),u=t[0].dims[t[0].dims.length-2],d=l/u,c=t[2].dims[1],p=0===n?2*c:d/i,h=[o,u,d/p,p-c],f=tn.computeStrides(h),m=[{type:1,data:a},{type:12,data:h},{type:12,data:f},...3===t[0].dims.length?Array({type:12,data:[l,d,p,1]}):[],...4===t[0].dims.length?Array({type:12,data:[l,p,u*p,1]}):[],...tf(t[0].dims,t[1].dims,t[2].dims,t[3].dims,t[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:tr({interleaved:s}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:r=>{let i=tx("input",t[0].dataType,t[0].dims.length),n=tx("position_ids",t[1].dataType,t[1].dims.length),a=tx("cos_cache",t[2].dataType,t[2].dims.length),o=tx("sin_cache",t[3].dataType,t[3].dims.length),l=tv("output",t[0].dataType,t[0].dims.length);return r.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:h.length},{name:"global_strides",type:"u32",length:f.length},{name:"input_output_strides",type:"u32",length:f.length}]),`
        ${r.declareVariables(i,n,a,o,l)}

        ${r.mainStart(td)}
          let half_rotary_emb_dim = uniforms.${a.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${r.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${n.broadcastedIndicesToOffset("bsnh.xy",tv("",n.type.tensor,2))};
            let position_id =
                u32(${n.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${s});
            let j = i + select(half_rotary_emb_dim, 1, ${s});
            let re = ${i.getByOffset("i")} * ${a.get("position_id","bsnh[3]")} -
                ${i.getByOffset("j")} * ${o.get("position_id","bsnh[3]")};
            ${l.setByOffset("i","re")}
            let im = ${i.getByOffset("i")} * ${o.get("position_id","bsnh[3]")} +
                ${i.getByOffset("j")} * ${a.get("position_id","bsnh[3]")};
            ${l.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${l.setByOffset("k",i.getByOffset("k"))}
          }
        }`},getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(tn.size(h)/td)},programUniforms:m})}},aX=(t,r)=>{aH(t.inputs,r),t.compute(aK(t.inputs,r))}}),lE=D(()=>{oO(),oU(),oF(),aY=t=>{if(!t||t.length<3)throw Error("layerNorm requires at least 3 inputs.");let r=t[0],s=t[1],i=t[2];if(r.dataType!==s.dataType||r.dataType!==i.dataType)throw Error("All inputs must have the same data type");if(3!==r.dims.length&&2!==r.dims.length)throw Error("Input must be 2D or 3D");if(3!==s.dims.length&&2!==s.dims.length)throw Error("Skip must be 2D or 3D");let n=r.dims[r.dims.length-1],a=r.dims[r.dims.length-2];if(s.dims[s.dims.length-1]!==n)throw Error("Skip must have the same hidden size as input");if(s.dims[s.dims.length-2]!==a)throw Error("Skip must have the same sequence length as input");if(1!==i.dims.length)throw Error("Gamma must be 1D");if(i.dims[i.dims.length-1]!==n)throw Error("Gamma must have the same hidden size as input");if(t.length>3){let r=t[3];if(1!==r.dims.length)throw Error("Beta must be 1D");if(r.dims[r.dims.length-1]!==n)throw Error("Beta must have the same hidden size as input")}if(t.length>4){let r=t[4];if(1!==r.dims.length)throw Error("Bias must be 1D");if(r.dims[r.dims.length-1]!==n)throw Error("Bias must have the same hidden size as input")}},aQ=(t,r,s,i)=>{let n=r.simplified,a=t[0].dims,o=tn.size(a),l=a.slice(-1)[0],u=i?a.slice(0,-1).concat(1):[],d=!n&&t.length>3,c=t.length>4,p=i&&s>1,h=i&&s>2,f=s>3,m=tm(l),_=[{type:12,data:o},{type:12,data:m},{type:12,data:l},{type:1,data:r.epsilon}],g=[{dims:a,dataType:t[0].dataType}];return s>1&&g.push({dims:u,dataType:1}),s>2&&g.push({dims:u,dataType:1}),s>3&&g.push({dims:a,dataType:t[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${m};${p};${h};${f}`,inputDependencies:t.map((t,r)=>"type")},getShaderSource:r=>{let s=[tx("x",t[0].dataType,t[0].dims,m),tx("skip",t[1].dataType,t[1].dims,m),tx("gamma",t[2].dataType,t[2].dims,m)];d&&s.push(tx("beta",t[3].dataType,t[3].dims,m)),c&&s.push(tx("bias",t[4].dataType,t[4].dims,m)),s.push(tv("output",t[0].dataType,a,m)),p&&s.push(tv("mean_output",1,u)),h&&s.push(tv("inv_std_output",1,u)),f&&s.push(tv("input_skip_bias_sum",t[0].dataType,a,m));let i=tp(t[0].dataType),o=tp(1,m);return`

      ${r.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...s)}
      var<workgroup> sum_shared : array<${o}, 64>;
      var<workgroup> sum_squared_shared : array<${o}, 64>;

      ${r.mainStart([64,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / 64;

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / 64;
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == 63) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${c?"bias[offset1d + i]":i+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${f?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${tg(i,m,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = 64;
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${ty("sum",m)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${ty("square_sum",m)} / f32(uniforms.hidden_size) ${n?"":"- mean * mean"} + uniforms.epsilon);
        ${p?"mean_output[global_idx] = mean;":""}
        ${h?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${n?"":`- ${i}(mean)`}) *
            ${i}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},getRunData:()=>({outputs:g,dispatchGroup:{x:Math.ceil(o/l)},programUniforms:_})}},aZ=(t,r)=>{aY(t.inputs);let s=[0];t.outputCount>1&&s.push(-3),t.outputCount>2&&s.push(-3),t.outputCount>3&&s.push(3),t.compute(aQ(t.inputs,r,t.outputCount,!1),{outputs:s})}}),lS=D(()=>{oO(),oU(),oN(),oF(),aJ=(t,r)=>{if(!t||t.length<1)throw Error("too few inputs");if(0!==r.axes.length){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw Error("starts and ends must have the same length");t.slice(1).forEach((r,s)=>{if(6!==t[s+1].dataType&&7!==t[s+1].dataType)throw Error(`Input ${s} must be an array of int32 or int64`)})},a0=(t,r)=>{let s=[];if(t.length>r){if(7===t[r].dataType)t[r].getBigInt64Array().forEach(t=>s.push(Number(t)));else if(6===t[r].dataType)t[r].getInt32Array().forEach(t=>s.push(Number(t)));else throw Error(`Input ${r} must be an array of int32 or int64`)}return s},a1=(t,r)=>{if(!(t.length>1))return r;{let r=a0(t,1),s=a0(t,2),i=a0(t,3);return 0===i.length&&(i=[...Array(t[0].dims.length).keys()]),tr({starts:r,ends:s,axes:i})}},a2=(t,r,s,i,n)=>{let a=t;return t<0&&(a+=s[i[r]]),n[r]<0?Math.max(0,Math.min(a,s[i[r]]-1)):Math.max(0,Math.min(a,s[i[r]]))},a3=(t,r,s)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${t.type.indices} {
          var input_indices: ${t.type.indices};
          var carry = 0u;
          for (var i = ${s.length}; i >= 0; i--) {
            let input_shape_i = ${tw("uniforms.input_shape","i",s.length)};
            let steps_i = ${tw("uniforms.steps","i",s.length)};
            let signs_i = ${tw("uniforms.signs","i",s.length)};
            let starts_i = ${tw("uniforms.starts","i",s.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${t.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,a4=(t,r)=>{let s=t[0].dims,i=tn.size(s),n=r.axes.length>0?tn.normalizeAxes(r.axes,s.length):[...Array(s.length).keys()],a=a0(t,4);a.forEach(t=>0!==t||(()=>{throw Error("step cannot be 0")})),0===a.length&&(a=Array(n.length).fill(1));let o=r.starts.map((t,r)=>a2(t,r,s,n,a)),l=r.ends.map((t,r)=>a2(t,r,s,n,a));if(n.length!==o.length||n.length!==l.length)throw Error("start, ends and axes should have the same number of elements");if(n.length!==s.length)for(let t=0;t<s.length;++t)n.includes(t)||(o.splice(t,0,0),l.splice(t,0,s[t]),a.splice(t,0,1));let u=a.map(t=>Math.sign(t));a.forEach((t,r,s)=>{if(t<0){let i=(l[r]-o[r])/t,n=o[r],u=n+i*a[r];o[r]=u,l[r]=n,s[r]=-t}});let d=s.slice(0);n.forEach((t,r)=>{d[t]=Math.ceil((l[t]-o[t])/a[t])});let c={dims:d,dataType:t[0].dataType},p=tv("output",t[0].dataType,d.length),h=tx("input",t[0].dataType,t[0].dims.length),f=tn.size(d),m=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:a.length}],_=[{type:12,data:f},{type:12,data:o},{type:6,data:u},{type:12,data:a},...tf(t[0].dims,d)];return{name:"Slice",shaderCache:{hint:`${u.length}_${o.length}_${a.length}`,inputDependencies:["rank"]},getShaderSource:t=>`
      ${t.registerUniforms(m).declareVariables(h,p)}
        ${a3(h,p,s)}
        ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:_})}},a6=(t,r)=>{aJ(t.inputs,r);let s=a1(t.inputs,r);t.compute(a4(t.inputs,s),{inputs:[0]})},a8=t=>{let r=t.starts,s=t.ends,i=t.axes;return tr({starts:r,ends:s,axes:i})}}),lz=D(()=>{oO(),oU(),oN(),oq(),oF(),a5=t=>{if(!t||1!==t.length)throw Error("Softmax op requires 1 input.")},a9=(t,r)=>{let s=t.inputs[0],i=s.dims,n=tn.size(i),a=i.length,o=tn.normalizeAxis(r.axis,a),l=o<i.length-1,u,d=[];l?((d=Array.from({length:a},(t,r)=>r))[o]=a-1,d[a-1]=o,u=t.compute(tO(s,d),{inputs:[s],outputs:[-1]})[0]):u=s;let c=u.dims,p=c[a-1],h=n/p,f=tm(p),m=p/f,_=64;1===h&&(_=256);let g=(t,r)=>4===r?`max(max(${t}.x, ${t}.y), max(${t}.z, ${t}.w))`:2===r?`max(${t}.x, ${t}.y)`:3===r?`max(max(${t}.x, ${t}.y), ${t}.z)`:t,y=tx("x",u.dataType,u.dims,f),w=tv("result",u.dataType,u.dims,f),b=y.type.value,x="f32"===tp(u.dataType)?`var threadMax = ${b}(-3.402823e+38f);`:`var threadMax = ${b}(-65504.0h);`,v=t.compute({name:"Softmax",shaderCache:{hint:`${f};${_}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:c,dataType:u.dataType}],dispatchGroup:{x:h},programUniforms:[{type:6,data:m}]}),getShaderSource:t=>`
      var<workgroup> rowMaxShared : ${b};
      var<workgroup> rowSumShared : ${b};
      var<workgroup> threadShared : array<${b}, ${_}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${b} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${b}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${t.registerUniform("packedCols","i32").declareVariables(y,w)}
      ${t.mainStart(_)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${_};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${x}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${b}(${g("threadShared[0]",f)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${b}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${b}(${ty("threadShared[0]",f)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`},{inputs:[u],outputs:[l?-1:0]})[0];l&&t.compute(tO(v,d),{inputs:[v]})},a7=(t,r)=>{a5(t.inputs),a9(t,r)},oe=t=>tr({axis:t.axis})}),lT=D(()=>{oO(),oU(),oF(),ot=t=>Array.from(t.getBigInt64Array(),Number),or=t=>{if(!t||2!==t.length)throw Error("Tile requires 2 inputs.");if(1!==t[0].dataType&&10!==t[0].dataType&&6!==t[0].dataType&&12!==t[0].dataType)throw Error("Tile only support float, float16, int32, and uint32 data types");if(7!==t[1].dataType)throw Error("Tile `repeats` input should be of int64 data type");if(1!==t[1].dims.length)throw Error("Tile `repeats` input should be 1-D");if(ot(t[1]).length!==t[0].dims.length)throw Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},os=(t,r)=>{let s=[];for(let i=0;i<t.length;++i)s.push(t[i]*r[i]);return s},oi=(t,r)=>{let s=t[0].dims,i=r??ot(t[1]),n=os(s,i),a=tn.size(n),o=t[0].dataType,l=tx("input",o,s.length),u=tv("output",o,n.length);return{name:"Tile",shaderCache:{hint:`${i}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...tf(t[0].dims,n)]}),getShaderSource:t=>`
      const inputShape = ${l.indices(...s)};
      ${t.registerUniform("output_size","u32").declareVariables(l,u)}
      ${t.mainStart()}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${u.offsetToIndices("global_idx")};
      var input_indices: ${l.type.indices};
      for (var i = 0; i < ${s.length}; i++) {
        let input_dim_i = ${l.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${u.indicesGet("output_indices","i")}  % input_dim_i;

        ${l.indicesSet("input_indices","i","input_dim_value")}
      }
      ${u.setByOffset("global_idx",l.getByIndices("input_indices"))}
    }`}},on=t=>{or(t.inputs),t.compute(oi(t.inputs),{inputs:[0]})}}),lI=D(()=>{oO(),oU(),oF(),oa=(t,r,s,i,n)=>{let a=tv("output_data",n,s.length,4),o=tx("a_data",r[1].dataType,r[1].dims.length,4),l=tx("b_data",r[2].dataType,r[2].dims.length,4),u=tx("c_data",r[0].dataType,r[0].dims.length,4),d,c=(t,r,s)=>`select(${r}, ${t}, ${s})`;if(i){let t=(t,r,s="")=>{let i=`a_data[index_a${r}][component_a${r}]`,n=`b_data[index_b${r}][component_b${r}]`,d=`bool(c_data[index_c${r}] & (0xffu << (component_c${r} * 8)))`;return`
            let output_indices${r} = ${a.offsetToIndices(`global_idx * 4u + ${r}u`)};
            let offset_a${r} = ${o.broadcastedIndicesToOffset(`output_indices${r}`,a)};
            let offset_b${r} = ${l.broadcastedIndicesToOffset(`output_indices${r}`,a)};
            let offset_c${r} = ${u.broadcastedIndicesToOffset(`output_indices${r}`,a)};
            let index_a${r} = offset_a${r} / 4u;
            let index_b${r} = offset_b${r} / 4u;
            let index_c${r} = offset_c${r} / 4u;
            let component_a${r} = offset_a${r} % 4u;
            let component_b${r} = offset_b${r} % 4u;
            let component_c${r} = offset_c${r} % 4u;
            ${t}[${r}] = ${s}(${c(i,n,d)});
          `};d=9===n?`
            var data = vec4<u32>(0);
            ${t("data",0,"u32")}
            ${t("data",1,"u32")}
            ${t("data",2,"u32")}
            ${t("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${t("output_data[global_idx]",0)}
            ${t("output_data[global_idx]",1)}
            ${t("output_data[global_idx]",2)}
            ${t("output_data[global_idx]",3)}
          `}else d=a.setByOffset("global_idx",c(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`
        ${t.registerUniform("vec_size","u32").declareVariables(u,o,l,a)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${d}
      }`},oo=t=>{let r=t[1].dims,s=t[2].dims,i=t[0].dims,n=t[1].dataType,a=!(tn.areEqual(r,s)&&tn.areEqual(s,i)),o=r,l=tn.size(r);if(a){let t=ti.calcShape(ti.calcShape(r,s,!1),i,!1);if(!t)throw Error("Can't perform where op on the given tensors");o=t,l=tn.size(o)}let u=Math.ceil(l/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:r=>oa(r,t,o,a,n),getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:u},...tf(i,r,s,o)]})}},ol=t=>{t.compute(oo(t.inputs))}}),lC=D(()=>{oG(),oW(),oH(),oK(),oY(),oQ(),oZ(),o5(),o7(),le(),lt(),lr(),ls(),li(),ln(),la(),lo(),ll(),lu(),ld(),lh(),lf(),lm(),l_(),lg(),lc(),ly(),lw(),lb(),lx(),lv(),oj(),l$(),lk(),lE(),lS(),lz(),lp(),lT(),oq(),oX(),lI(),ou=new Map([["Abs",[rU]],["Acos",[rF]],["Acosh",[rq]],["Add",[sE]],["ArgMax",[rx,rv]],["ArgMin",[rb,rv]],["Asin",[rV]],["Asinh",[rj]],["Atan",[rG]],["Atanh",[rW]],["Attention",[rC]],["AveragePool",[al,ao]],["BatchNormalization",[rB]],["BiasAdd",[rD]],["BiasSplitGelu",[sx]],["Cast",[rK,rH]],["Ceil",[rQ]],["Clip",[rY]],["Concat",[sN,sU]],["Conv",[i_,ic]],["ConvTranspose",[iS,iv]],["Cos",[rZ]],["Cosh",[rJ]],["CumSum",[iT,iI]],["DepthToSpace",[iO,iB]],["DequantizeLinear",[aw,ab]],["Div",[sS]],["Einsum",[iV,ij]],["Elu",[r1,r0]],["Equal",[sz]],["Erf",[r3]],["Exp",[r4]],["Expand",[iX]],["FastGelu",[iQ]],["Floor",[r6]],["FusedConv",[i_,ic]],["Gather",[i1,i0]],["GatherElements",[nr,nt]],["GatherBlockQuantized",[i5,i9]],["GatherND",[i3,i4]],["Gelu",[r8]],["Gemm",[na,nn]],["GlobalAveragePool",[ac,ad]],["GlobalMaxPool",[a_,am]],["Greater",[sA]],["GreaterOrEqual",[sO]],["GridSample",[nw,nb]],["GroupQueryAttention",[nL]],["HardSigmoid",[si,ss]],["InstanceNormalization",[nq]],["LayerNormalization",[nG]],["LeakyRelu",[r5,r0]],["Less",[sM]],["LessOrEqual",[sB]],["Log",[sm]],["MatMul",[nH]],["MatMulNBits",[nQ,nZ]],["MaxPool",[ah,af]],["Mul",[sT]],["MultiHeadAttention",[nz,n$]],["Neg",[r7]],["Not",[r9]],["Pad",[n5]],["Pow",[sI]],["QuickGelu",[sy,r0]],["Range",[a$]],["Reciprocal",[se]],["ReduceMin",[rf]],["ReduceMean",[ru]],["ReduceMax",[rh]],["ReduceSum",[r_]],["ReduceProd",[rm]],["ReduceL1",[rd]],["ReduceL2",[rc]],["ReduceLogSum",[ry]],["ReduceLogSumExp",[rp]],["ReduceSumSquare",[rg]],["Relu",[st]],["Resize",[aG,aW]],["RotaryEmbedding",[aX]],["ScatterND",[az,aS]],["Sigmoid",[sr]],["Sin",[sn]],["Sinh",[sa]],["Slice",[a6,a8]],["SkipLayerNormalization",[aZ]],["Split",[nO,nB]],["Sqrt",[so]],["Softmax",[a7,oe]],["Sub",[sC]],["Tan",[sl]],["Tanh",[sd]],["ThresholdedRelu",[sf,r0]],["Tile",[on]],["Transpose",[tB,tP]],["Where",[ol]]])}),lA=D(()=>{ea(),oP(),oF(),od=class{constructor(t){this.backend=t,this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,s,i,n){T(t.programInfo.name);let a=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let l=[];for(let t of r)l.push({binding:l.length,resource:{buffer:t.buffer}});for(let t of s)l.push({binding:l.length,resource:{buffer:t.buffer}});n&&l.push({binding:l.length,resource:n});let u=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:l,label:t.programInfo.name});if("capturing"===this.backend.sessionStatus){let r={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:u,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(r)}o.setPipeline(t.computePipeline),o.setBindGroup(0,u),o.dispatchWorkgroups(...i),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),I(t.programInfo.name)}dispose(){}build(t,r){T(t.name);let s=this.backend.device,i=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(t=>{s.features.has(t.feature)&&i.push(`enable ${t.extension};`)});let n=tS(r,this.backend.device.limits),a=t.getShaderSource(n),o=`${i.join(`
`)}
${n.additionalImplementations}
${a}`,l=s.createShaderModule({code:o,label:t.name});e0("verbose",()=>`[WebGPU] ${t.name} shader code: ${o}`);let u=s.createComputePipeline({compute:{module:l,entryPoint:"main"},layout:"auto",label:t.name});return I(t.name),{programInfo:t,computePipeline:u,uniformVariablesInfo:n.variablesInfo}}normalizeDispatchGroupSize(t){let r="number"==typeof t?t:t.x,s="number"==typeof t?1:t.y||1,i="number"==typeof t?1:t.z||1,n=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=n&&s<=n&&i<=n)return[r,s,i];let a=r*s*i,o=Math.ceil(Math.sqrt(a));if(!(o>n))return[o,o,1];if((o=Math.ceil(Math.cbrt(a)))>n)throw Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}}}),lM=D(()=>{ea(),oO(),oP(),oR(),oL(),lC(),lA(),oc=(t,r)=>{if(r.length!==t.length)throw Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${t.length}.`);let s=[];for(let i=0;i<t.length;++i){let n=t[i].dataType;switch(r[i]){case"none":s.push("");break;case"type":s.push(`${n}`);break;case"rank":{let r=t[i].dims.length;s.push(`${n};${r}`);break}case"dims":{let r=t[i].dims.join(",");s.push(`${n};${r}`);break}default:throw Error(`unsupported input dependency: ${r[i]}`)}}return s.join("|")},op=(t,r,s)=>{let i=t.name;return t.shaderCache?.hint&&(i+="["+t.shaderCache.hint+"]"),i+=":"+s+`:${oc(r,t.shaderCache?.inputDependencies??Array(r.length).fill("dims"))}`},oh=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},of=class{constructor(t){this.subgroupsSupported=t.features.has("subgroups"),this.subgroupsF16Supported=t.features.has("subgroups");let r=t.limits;this.subgroupsSupported&&r.minSubgroupSize&&r.maxSubgroupSize?this.subgroupSizeRange=[r.minSubgroupSize,r.maxSubgroupSize]:this.subgroupSizeRange=void 0}},om=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let s=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:s},n=t=>r.features.has(t)&&s.push(t)&&!0;n("chromium-experimental-timestamp-query-inside-passes")||n("timestamp-query"),n("shader-f16"),n("subgroups")&&n("subgroups-f16"),this.device=await r.requestDevice(i),this.deviceInfo=new of(this.device),this.adapterInfo=new oh(r.info||await r.requestAdapterInfo()),this.gpuDataManager=te(this),this.programManager=new od(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,eZ(t.logLevel,!!t.debug),this.device.onuncapturederror=t=>{t.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${t.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){"u">typeof this.querySet&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};"at-passes"===this.queryType&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){let t;this.commandEncoder&&(T(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),t=this.device.createBuffer({size:16*this.pendingDispatchNumber,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,16*this.pendingDispatchNumber)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),s=this.pendingQueries.get(t);for(let t=0;t<r.length/2;t++){let i=s[t],n=i.kernelId,a=this.kernels.get(n),o=a.kernelType,l=a.kernelName,u=i.programName,d=i.inputTensorViews,c=i.outputTensorViews,p=r[2*t],h=r[2*t+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=p);let f=Number(p-this.queryTimeBase),m=Number(h-this.queryTimeBase);if(!Number.isSafeInteger(f)||!Number.isSafeInteger(m))throw RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(t=>({dims:t.dims,dataType:eU(t.dataType)})),outputsMetadata:c.map(t=>({dims:t.dims,dataType:eU(t.dataType)})),kernelId:n,kernelType:o,kernelName:l,programName:u,startTime:f,endTime:m});else{let t="";d.forEach((r,s)=>{t+=`input[${s}]: [${r.dims}] | ${eU(r.dataType)}, `});let r="";c.forEach((t,s)=>{r+=`output[${s}]: [${t.dims}] | ${eU(t.dataType)}, `}),console.log(`[profiling] kernel "${n}|${o}|${l}|${u}" ${t}${r}execution time: ${m-f} ns`)}S("GPU",`${u}::${p}::${h}`)}t.unmap(),this.pendingQueries.delete(t)}),I())}run(t,r,s,i,n,a){let o;T(t.name);let l=[];for(let t=0;t<r.length;++t){let s=r[t].data;if(0===s)continue;let i=this.gpuDataManager.get(s);if(!i)throw Error(`no GPU data for input: ${s}`);l.push(i)}let{outputs:u,dispatchGroup:d,programUniforms:c}=t.getRunData(r),p=0===s.length?u.map((t,r)=>r):s;if(p.length!==u.length)throw Error(`Output size ${p.length} must be equal to ${u.length}.`);let h=[],f=[];for(let t=0;t<u.length;++t){if(!Number.isInteger(p[t])||p[t]<-3||p[t]>=a)throw Error(`Invalid output index: ${p[t]}`);if(-3===p[t])continue;let r=-1===p[t],s=-2===p[t],o=r||s?n(u[t].dataType,u[t].dims):i(p[t],u[t].dataType,u[t].dims);if(h.push(o),0===o.data)continue;let l=this.gpuDataManager.get(o.data);if(!l)throw Error(`no GPU data for output: ${o.data}`);if(r&&this.temporaryData.push(l),s){let t=this.kernelPersistentData.get(this.currentKernelId);t||(t=[],this.kernelPersistentData.set(this.currentKernelId,t)),t.push(l)}f.push(l)}if(l.length!==r.length||f.length!==h.length){if(0===f.length)return I(t.name),h;throw Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(c){let t=0,r=[];c.forEach(s=>{let i="number"==typeof s.data?[s.data]:s.data;if(0===i.length)return;let n=10===s.type?2:4,a,o;10===s.type?(o=i.length>4?16:i.length>2?8:i.length*n,a=i.length>4?16:n*i.length):(o=i.length<=2?i.length*n:16,a=16),t=Math.ceil(t/o)*o,r.push(t);let l=10===s.type?8:4;t+=i.length>4?Math.ceil(i.length/l)*a:i.length*n});let s=new ArrayBuffer(t=16*Math.ceil(t/16));c.forEach((t,i)=>{let n=r[i],a="number"==typeof t.data?[t.data]:t.data;if(6===t.type)new Int32Array(s,n,a.length).set(a);else if(12===t.type)new Uint32Array(s,n,a.length).set(a);else if(10===t.type)new Uint16Array(s,n,a.length).set(a);else if(1===t.type)new Float32Array(s,n,a.length).set(a);else throw Error(`Unsupported uniform type: ${eU(t.type)}`)});let i=this.gpuDataManager.create(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(i.buffer,0,s,0,t),this.gpuDataManager.release(i.id),o={offset:0,size:t,buffer:i.buffer}}let m=this.programManager.normalizeDispatchGroupSize(d),_=op(t,r,1===m[1]&&1===m[2]),g=this.programManager.getArtifact(_);if(g||(g=this.programManager.build(t,m),this.programManager.setArtifact(_,g),e0("info",()=>`[artifact] key: ${_}, programName: ${t.name}`)),c&&g.uniformVariablesInfo){if(c.length!==g.uniformVariablesInfo.length)throw Error(`Uniform variables count mismatch: expect ${g.uniformVariablesInfo.length}, got ${c.length} in program "${g.programInfo.name}".`);for(let t=0;t<c.length;t++){let r=c[t],s=r.type,i="number"==typeof r.data?1:r.data.length,[n,a]=g.uniformVariablesInfo[t];if(s!==n||i!==a)throw Error(`Uniform variable ${t} mismatch: expect type ${n} with size ${a}, got type ${s} with size ${i} in program "${g.programInfo.name}".`)}}if(e0("info",()=>`[ProgramManager] run "${t.name}" (key=${_}) with ${m[0]}x${m[1]}x${m[2]}`),"none"!==this.queryType||"capturing"===this.sessionStatus){let t={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:r,outputTensorViews:h};this.pendingKernels.push(t),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(t)}return this.programManager.run(g,l,f,m,o),I(t.name),h}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,s,i){let n=ou.get(t);if(!n)throw Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:n[0],attributes:[n[1],s]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,s){let i=this.kernels.get(t);if(!i)throw Error(`kernel not created: ${t}`);let n=i.kernelType,a=i.kernelName,o=i.kernelEntry,l=i.attributes;if(null!==this.currentKernelId)throw Error(`kernel "[${n}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,l[0]&&(l[1]=l[0](l[1]),l[0]=void 0),e0("info",()=>`[WebGPU] Start to run kernel "[${n}] ${a}"...`);let u=this.env.debug;this.temporaryData=[];try{return u&&this.device.pushErrorScope("validation"),o(r,l[1]),0}catch(t){return s.push(Promise.resolve(`[WebGPU] Kernel "[${n}] ${a}" failed. ${t}`)),1}finally{for(let t of(u&&s.push(this.device.popErrorScope().then(t=>t?`GPU validation error for kernel "[${n}] ${a}": ${t.message}`:null)),this.temporaryData))this.gpuDataManager.release(t.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,s,i){let n=this.sessionExternalDataMapping.get(t);n||(n=new Map,this.sessionExternalDataMapping.set(t,n));let a=n.get(r),o=this.gpuDataManager.registerExternalBuffer(s,i,a);return n.set(r,[o,s]),o}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,s){return async()=>{let i=await e9(this,t,r);return e1(i.buffer,s)}}writeTimestamp(t){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:16*this.maxDispatchNumber,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){e0("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){e0("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){e0("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),s=t.length;this.pendingKernels=[];for(let i=0;i<s;i++){let s=this.getComputePassEncoder(),n=t[i];this.writeTimestamp(2*this.pendingDispatchNumber),s.setPipeline(n.computePipeline),s.setBindGroup(0,n.bindGroup),s.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}}),lO=D(()=>{oP(),o_=1,og=()=>o_++,oy=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),ow=(t,r)=>{let s=oy.get(t);if(!s)throw Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((t,r)=>t*r)*s/8):0},ob=class{constructor(t){this.sessionId=t.sessionId,this.mlContext=t.context,this.mlTensor=t.tensor,this.dataType=t.dataType,this.tensorShape=t.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return ow(this.dataType,this.tensorShape)}destroy(){e0("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(t){this.mlContext.writeTensor(this.mlTensor,t)}async read(t){return t?this.mlContext.readTensor(this.mlTensor,t):this.mlContext.readTensor(this.mlTensor)}sameTypeAndShape(t,r){return this.dataType===t&&this.tensorShape.length===r.length&&this.tensorShape.every((t,s)=>t===r[s])}},ox=class{constructor(t,r){this.tensorManager=t,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(t,r,s){if(this.wrapper){if(this.wrapper.sameTypeAndShape(t,r))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==ow(t,r))throw Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let i=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(t,r,i,!0,!0),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(t){if(this.wrapper){if(t.byteLength===this.wrapper.byteLength){this.wrapper.write(t);return}e0("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor()}this.activeUpload?this.activeUpload.set(t):this.activeUpload=new Uint8Array(t)}async download(t){if(this.activeUpload)return t?void(t instanceof ArrayBuffer?new Uint8Array(t).set(this.activeUpload):new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(this.activeUpload)):this.activeUpload.buffer;if(!this.wrapper)throw Error("Tensor has not been created.");return t?this.wrapper.read(t):this.wrapper.read()}},ov=class{constructor(t){this.backend=t,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let t=og();return this.tensorTrackersById.set(t,new ox(this)),t}releaseTensorId(t){let r=this.tensorTrackersById.get(t);r&&(this.tensorTrackersById.delete(t),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(t,r,s,i){e0("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${t}, dataType: ${r}, shape: ${s}, copyOld: ${i}}`);let n=this.tensorTrackersById.get(t);if(!n)throw Error("Tensor not found.");return n.ensureTensor(r,s,i)}upload(t,r){let s=this.tensorTrackersById.get(t);if(!s)throw Error("Tensor not found.");s.upload(r)}async download(t,r){e0("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${t}, dstBuffer: ${r?.byteLength}}`);let s=this.tensorTrackersById.get(t);if(!s)throw Error("Tensor not found.");return s.download(r)}releaseTensorsForSession(t){for(let r of this.freeTensors)r.sessionId===t&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==t)}registerTensor(t,r,s,i){let n=og(),a=new ob({sessionId:this.backend.currentSessionId,context:t,tensor:r,dataType:s,shape:i});return this.tensorTrackersById.set(n,new ox(this,a)),this.externalTensors.add(a),n}async getCachedTensor(t,r,s,i,n){let a=this.backend.currentSessionId;for(let[s,i]of this.freeTensors.entries())if(i.sameTypeAndShape(t,r)){e0("verbose",()=>`[WebNN] Reusing tensor {dataType: ${t}, shape: ${r}}`);let i=this.freeTensors.splice(s,1)[0];return i.sessionId=a,i}let o=this.backend.currentContext;e0("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${t}, shape: ${r}}`);let l=await o.createTensor({dataType:t,shape:r,dimensions:r,usage:s,writable:i,readable:n});return new ob({sessionId:a,context:o,tensor:l,dataType:t,shape:r})}releaseTensor(t){this.externalTensors.has(t)&&this.externalTensors.delete(t),this.freeTensors.push(t)}},o$=(...t)=>new ov(...t)}),lB=D(()=>{oO(),oI(),oR(),lO(),oP(),ok=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),oE=(t,r)=>{if(t===r)return!0;if(void 0===t||void 0===r)return!1;let s=Object.keys(t).sort(),i=Object.keys(r).sort();return s.length===i.length&&s.every((s,n)=>s===i[n]&&t[s]===r[s])},oS=class{constructor(t){this.tensorManager=o$(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],eZ(t.logLevel,!!t.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw Error("No active session");return this.activeSessionId}onRunStart(t){this.activeSessionId=t}async createMLContext(t){if(t instanceof GPUDevice){let r=this.mlContextCache.findIndex(r=>r.gpuDevice===t);if(-1!==r)return this.mlContextCache[r].mlContext;{let r=await navigator.ml.createContext(t);return this.mlContextCache.push({gpuDevice:t,mlContext:r}),r}}if(void 0===t){let t=this.mlContextCache.findIndex(t=>void 0===t.options&&void 0===t.gpuDevice);if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:t}),t}}let r=this.mlContextCache.findIndex(r=>oE(r.options,t));if(-1!==r)return this.mlContextCache[r].mlContext;{let r=await navigator.ml.createContext(t);return this.mlContextCache.push({options:t,mlContext:r}),r}}get currentContext(){let t=this.getMLContext(this.currentSessionId);if(!t)throw Error(`No MLContext found for session ${this.currentSessionId}`);return t}registerMLContext(t,r){this.mlContextBySessionId.set(t,r);let s=this.sessionIdsByMLContext.get(r);s||(s=new Set,this.sessionIdsByMLContext.set(r,s)),s.add(t)}onReleaseSession(t){let r=this.mlContextBySessionId.get(t);if(!r)return;this.tensorManager.releaseTensorsForSession(t),this.mlContextBySessionId.delete(t);let s=this.sessionIdsByMLContext.get(r);if(s.delete(t),0===s.size){this.sessionIdsByMLContext.delete(r);let t=this.mlContextCache.findIndex(t=>t.mlContext===r);-1!==t&&this.mlContextCache.splice(t,1)}}getMLContext(t){return this.mlContextBySessionId.get(t)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(t){e0("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t)}async ensureTensor(t,r,s,i){let n=ok.get(r);if(!n)throw Error(`Unsupported ONNX data type: ${r}`);return this.tensorManager.ensureTensor(t,n,s,i)}uploadTensor(t,r){if(!eI().shouldTransferToMLTensor)throw Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");e0("verbose",()=>`[WebNN] uploadTensor {tensorId: ${t}, data: ${r.byteLength}}`),this.tensorManager.upload(t,r)}async downloadTensor(t,r){return this.tensorManager.download(t,r)}createMLTensorDownloader(t,r){return async()=>{let s=await this.tensorManager.download(t);return e1(s,r)}}registerMLTensor(t,r,s){let i=ok.get(r);if(!i)throw Error(`Unsupported ONNX data type: ${r}`);let n=this.tensorManager.registerTensor(this.currentContext,t,i,s);return e0("verbose",()=>`[WebNN] registerMLTensor {tensor: ${t}, dataType: ${i}, dimensions: ${s}} -> {tensorId: ${n}}`),n}registerMLConstant(t,r,s,i,n,a){if(!a)throw Error("External mounted files are not available.");let o=t;t.startsWith("./")&&(o=t.substring(2));let l=a.get(o);if(!l)throw Error(`File with name ${o} not found in preloaded files.`);if(r+s>l.byteLength)throw Error("Out of bounds: data offset and length exceed the external file data size.");let u=l.slice(r,r+s).buffer,d;switch(n.dataType){case"float32":d=new Float32Array(u);break;case"float16":d=new Uint16Array(u);break;case"int32":d=new Int32Array(u);break;case"uint32":d=new Uint32Array(u);break;case"int64":d=new BigInt64Array(u);break;case"uint64":d=new BigUint64Array(u);break;case"int8":d=new Int8Array(u);break;case"int4":case"uint4":case"uint8":d=new Uint8Array(u);break;default:throw Error(`Unsupported data type: ${n.dataType} in creating WebNN Constant from external data.`)}return e0("verbose",()=>`[WebNN] registerMLConstant {dataType: ${n.dataType}, shape: ${n.shape}}}`),i.constant(n,d)}flush(){}}}),lP={};L(lP,{init:()=>lL});var lR,lD,lL,lN,lU,lF,lq,lV,lj,lG,lW,lH,lK,lX,lY,lQ,lZ,lJ,l0,l1,l2,l3,l4,l6,l8,l5,l9,l7,ue,ut,ur,us,ui,un,ua,uo,ul=D(()=>{oO(),lM(),oP(),oU(),lB(),lR=class t{constructor(t,r,s,i){this.module=t,this.dataType=r,this.data=s,this.dims=i}getFloat32Array(){if(1!==this.dataType)throw Error("Invalid data type");let t=tn.size(this.dims);return 0===t?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(7!==this.dataType)throw Error("Invalid data type");let t=tn.size(this.dims);return 0===t?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(6!==this.dataType)throw Error("Invalid data type");let t=tn.size(this.dims);return 0===t?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw Error("Invalid data type");let t=tn.size(this.dims);return 0===t?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(r){if(tn.size(r)!==tn.size(this.dims))throw Error("Invalid new shape");return new t(this.module,this.dataType,this.data,r)}},lD=class{constructor(t,r,s){this.module=t,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo,this.deviceInfo=r.deviceInfo;let i=t.PTR_SIZE,n=s/t.PTR_SIZE,a=4===i?"i32":"i64";this.opKernelContext=Number(t.getValue(i*n++,a));let o=Number(t.getValue(i*n++,a));this.outputCount=Number(t.getValue(i*n++,a)),this.customDataOffset=Number(t.getValue(i*n++,"*")),this.customDataSize=Number(t.getValue(i*n++,a));let l=[];for(let r=0;r<o;r++){let r=Number(t.getValue(i*n++,a)),s=Number(t.getValue(i*n++,"*")),o=Number(t.getValue(i*n++,a)),u=[];for(let r=0;r<o;r++)u.push(Number(t.getValue(i*n++,a)));l.push(new lR(t,r,s,u))}this.inputs=l}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let s=r?.inputs?.map(t=>"number"==typeof t?this.inputs[t]:t)??this.inputs,i=r?.outputs??[];return this.backend.run(t,s,i,(t,r,s)=>new lR(this.module,r,this.output(t,s),s),(t,r)=>{let s=eF(t,r);if(!s)throw Error(`Unsupported data type: ${t}`);let i=s>0?this.backend.gpuDataManager.create(s).id:0;return new lR(this.module,t,i,r)},this.outputCount)}output(t,r){let s=this.module.stackSave();try{let s=this.module.PTR_SIZE,i=4===s?"i32":"i64",n=this.module.stackAlloc((1+r.length)*s);this.module.setValue(n,r.length,i);for(let t=0;t<r.length;t++)this.module.setValue(n+s*(t+1),r[t],i);return this.module._JsepOutput(this.opKernelContext,t,n)}catch(s){throw Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(s)}}},lL=async(t,r,s,i)=>{let n=r.jsepInit;if(!n)throw Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===t){let t=new om;await t.initialize(s,i),n("webgpu",[t,r=>t.alloc(Number(r)),r=>t.free(r),(s,i,n,a=!1)=>{if(a)e0("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(s)}, dst=${Number(i)}, size=${Number(n)}`),t.memcpy(Number(s),Number(i));else{e0("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(s)}, gpuDataId=${Number(i)}, size=${Number(n)}`);let a=r.HEAPU8.subarray(Number(s>>>0),Number(s>>>0)+Number(n));t.upload(Number(i),a)}},async(s,i,n)=>{e0("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${i}, size=${n}`),await t.download(Number(s),()=>r.HEAPU8.subarray(Number(i)>>>0,Number(i+n)>>>0))},(s,i,n)=>t.createKernel(s,Number(i),n,r.UTF8ToString(r._JsepGetNodeName(Number(i)))),r=>t.releaseKernel(r),(s,i,n,a)=>{e0("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${n}, kernel=${s}, contextDataOffset=${i}`);let o=new lD(r,t,Number(i));return t.computeKernel(Number(s),o,a)},()=>t.captureBegin(),()=>t.captureEnd(),()=>t.replay()])}else{let t=new oS(s);n("webnn",[t,()=>t.reserveTensorId(),r=>t.releaseTensorId(r),async(r,s,i,n)=>t.ensureTensor(r,s,i,n),(r,s)=>{t.uploadTensor(r,s)},async(r,s)=>t.downloadTensor(r,s)])}}}),uu=D(()=>{oA(),oM(),oO(),oI(),oC(),oB(),lN=(t,r)=>{0!==eI()._OrtInit(t,r)&&eM("Can't initialize onnxruntime.")},lU=async t=>{lN(t.wasm.numThreads,eV(t.logLevel))},lF=async(t,r)=>{{let s=(ul(),U(lP)).init;if("webgpu"===r){if(typeof navigator>"u"||!navigator.gpu)throw Error("WebGPU is not supported in current environment");let r=t.webgpu.adapter;if(r){if("object"!=typeof r.limits||"object"!=typeof r.features||"function"!=typeof r.requestDevice)throw Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let s=t.webgpu.powerPreference;if(void 0!==s&&"low-power"!==s&&"high-performance"!==s)throw Error(`Invalid powerPreference setting: "${s}"`);let i=t.webgpu.forceFallbackAdapter;if(void 0!==i&&"boolean"!=typeof i)throw Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(!(r=await navigator.gpu.requestAdapter({powerPreference:s,forceFallbackAdapter:i})))throw Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await s("webgpu",eI(),t,r)}if("webnn"===r){if(typeof navigator>"u"||!navigator.ml)throw Error("WebNN is not supported in current environment");await s("webnn",eI(),t)}}},lq=new Map,lV=t=>{let r=eI(),s=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);0!==r._OrtGetInputOutputCount(t,i,i+s)&&eM("Can't get session input/output count.");let n=4===s?"i32":"i64";return[Number(r.getValue(i,n)),Number(r.getValue(i+s,n))]}finally{r.stackRestore(s)}},lj=t=>{let r=eI(),s=r._malloc(t.byteLength);if(0===s)throw Error(`Can't create a session. failed to allocate a buffer of size ${t.byteLength}.`);return r.HEAPU8.set(t,s),[s,t.byteLength]},lG=async(t,r)=>{let s,i,n=eI();Array.isArray(t)?[s,i]=t:t.buffer===n.HEAPU8.buffer?[s,i]=[t.byteOffset,t.byteLength]:[s,i]=lj(t);let a=0,o=0,l=0,u=[],d=[],c=[];try{if([o,u]=eL(r),r?.externalData&&n.mountExternalData){let t=[];for(let s of r.externalData){let r="string"==typeof s?s:s.path;t.push(eH("string"==typeof s?s:s.data).then(t=>{n.mountExternalData(r,t)}))}await Promise.all(t)}for(let t of r?.executionProviders??[])if(("string"==typeof t?t:t.name)==="webnn"){if(n.shouldTransferToMLTensor=!1,"string"!=typeof t){let r=t?.context,s=t?.gpuDevice,i=t?.deviceType,a=t?.powerPreference;r?n.currentContext=r:s?n.currentContext=await n.jsepCreateMLContext(s):n.currentContext=await n.jsepCreateMLContext({deviceType:i,powerPreference:a})}else n.currentContext=await n.jsepCreateMLContext();break}a=await n._OrtCreateSession(s,i,o),0===a&&eM("Can't create a session."),n.jsepOnCreateSession?.(),n.currentContext&&(n.jsepRegisterMLContext(a,n.currentContext),n.currentContext=void 0,n.shouldTransferToMLTensor=!0);let[t,p]=lV(a),h=!!r?.enableGraphCapture,f=[],m=[],_=[];for(let r=0;r<t;r++){let t=n._OrtGetInputName(a,r);0===t&&eM("Can't get an input name."),d.push(t),f.push(n.UTF8ToString(t))}for(let t=0;t<p;t++){let s=n._OrtGetOutputName(a,t);0===s&&eM("Can't get an output name."),c.push(s);let i=n.UTF8ToString(s);m.push(i);{if(h&&r?.preferredOutputLocation===void 0){_.push("gpu-buffer");continue}let t="string"==typeof r?.preferredOutputLocation?r.preferredOutputLocation:r?.preferredOutputLocation?.[i]??"cpu";if("cpu"!==t&&"cpu-pinned"!==t&&"gpu-buffer"!==t&&"ml-tensor"!==t)throw Error(`Not supported preferred output location: ${t}.`);if(h&&"gpu-buffer"!==t)throw Error(`Not supported preferred output location: ${t}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);_.push(t)}}let g=null;return _.some(t=>"gpu-buffer"===t||"ml-tensor"===t)&&(l=n._OrtCreateBinding(a),0===l&&eM("Can't create IO binding."),g={handle:l,outputPreferredLocations:_,outputPreferredLocationsEncoded:_.map(t=>eW(t))}),lq.set(a,[a,d,c,g,h,!1]),[a,f,m]}catch(t){throw d.forEach(t=>n._OrtFree(t)),c.forEach(t=>n._OrtFree(t)),0!==l&&0!==n._OrtReleaseBinding(l)&&eM("Can't release IO binding."),0!==a&&0!==n._OrtReleaseSession(a)&&eM("Can't release session."),t}finally{n._free(s),0!==o&&0!==n._OrtReleaseSessionOptions(o)&&eM("Can't release session options."),u.forEach(t=>n._free(t)),n.unmountExternalData?.()}},lW=t=>{let r=eI(),s=lq.get(t);if(!s)throw Error(`cannot release session. invalid session id: ${t}`);let[i,n,a,o,l]=s;o&&(l&&0!==r._OrtClearBoundOutputs(o.handle)&&eM("Can't clear bound outputs."),0!==r._OrtReleaseBinding(o.handle)&&eM("Can't release IO binding.")),r.jsepOnReleaseSession?.(t),n.forEach(t=>r._OrtFree(t)),a.forEach(t=>r._OrtFree(t)),0!==r._OrtReleaseSession(i)&&eM("Can't release session."),lq.delete(t)},lH=(t,r,s,i,n,a=!1)=>{if(!t){r.push(0);return}let o=eI(),l=o.PTR_SIZE,u=t[0],d=t[1],c=t[3],p,h;if("string"===u&&("gpu-buffer"===c||"ml-tensor"===c))throw Error("String tensor is not supported on GPU.");if(a&&"gpu-buffer"!==c)throw Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if("gpu-buffer"===c){let r=t[2].gpuBuffer;h=eF(eN(u),d);let s=o.jsepRegisterBuffer;if(!s)throw Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');p=s(i,n,r,h)}else if("ml-tensor"===c){let r=t[2].mlTensor;h=eF(eN(u),d);let s=o.jsepRegisterMLTensor;if(!s)throw Error('Tensor location "ml-tensor" is not supported without using WebNN.');p=s(r,eN(u),d)}else{let r=t[2];if(Array.isArray(r)){h=l*r.length,p=o._malloc(h),s.push(p);for(let t=0;t<r.length;t++){if("string"!=typeof r[t])throw TypeError(`tensor data at index ${t} is not a string`);o.setValue(p+t*l,eC(r[t],s),"*")}}else h=r.byteLength,p=o._malloc(h),s.push(p),o.HEAPU8.set(new Uint8Array(r.buffer,r.byteOffset,h),p)}let f=o.stackSave(),m=o.stackAlloc(4*d.length);try{d.forEach((t,r)=>o.setValue(m+r*l,t,4===l?"i32":"i64"));let t=o._OrtCreateTensor(eN(u),p,h,m,d.length,eW(c));0===t&&eM(`Can't create tensor for input/output. session=${i}, index=${n}.`),r.push(t)}finally{o.stackRestore(f)}},lK=async(t,r,s,i,n,a)=>{let o=eI(),l=o.PTR_SIZE,u=lq.get(t);if(!u)throw Error(`cannot run inference. invalid session id: ${t}`);let d=u[0],c=u[1],p=u[2],h=u[3],f=u[4],m=u[5],_=r.length,g=i.length,y=0,w=[],b=[],x=[],v=[],$=o.stackSave(),k=o.stackAlloc(_*l),E=o.stackAlloc(_*l),S=o.stackAlloc(g*l),z=o.stackAlloc(g*l);try{let u;o.jsepOnRunStart?.(d),[y,w]=eO(a);for(let i=0;i<_;i++)lH(s[i],b,v,t,r[i],f);for(let r=0;r<g;r++)lH(n[r],x,v,t,_+i[r],f);for(let t=0;t<_;t++)o.setValue(k+t*l,b[t],"*"),o.setValue(E+t*l,c[r[t]],"*");for(let t=0;t<g;t++)o.setValue(S+t*l,x[t],"*"),o.setValue(z+t*l,p[i[t]],"*");if(h&&!m){let{handle:s,outputPreferredLocations:a,outputPreferredLocationsEncoded:l}=h;if(c.length!==_)throw Error(`input count from feeds (${_}) is expected to be always equal to model's input count (${c.length}).`);for(let i=0;i<_;i++){let n=r[i];await o._OrtBindInput(s,c[n],b[i])!==0&&eM(`Can't bind input[${i}] for session=${t}.`)}for(let r=0;r<g;r++){let u=i[r];n[r]?.[3]?0!==o._OrtBindOutput(s,p[u],x[r],0)&&eM(`Can't bind pre-allocated output[${r}] for session=${t}.`):0!==o._OrtBindOutput(s,p[u],0,l[u])&&eM(`Can't bind output[${r}] to ${a[r]} for session=${t}.`)}lq.set(t,[d,c,p,h,f,!0])}u=h?await o._OrtRunWithBinding(d,h.handle,g,S,y):await o._OrtRun(d,E,k,_,z,g,S,y),0!==u&&eM("failed to call OrtRun().");let $=[];for(let t=0;t<g;t++){let r=Number(o.getValue(S+t*l,"*"));if(r===x[t]){$.push(n[t]);continue}let s=o.stackSave(),a=o.stackAlloc(4*l),u=!1,d,c=0;try{0!==o._OrtGetTensorData(r,a,a+l,a+2*l,a+3*l)&&eM(`Can't access output tensor data on index ${t}.`);let s=4===l?"i32":"i64",n=Number(o.getValue(a,s));c=o.getValue(a+l,"*");let p=o.getValue(a+2*l,"*"),f=Number(o.getValue(a+3*l,s)),m=[];for(let t=0;t<f;t++)m.push(Number(o.getValue(p+t*l,s)));0!==o._OrtFree(p)&&eM("Can't free memory for tensor dims.");let _=m.reduce((t,r)=>t*r,1);d=eU(n);let g=h?.outputPreferredLocations[i[t]];if("string"===d){if("gpu-buffer"===g||"ml-tensor"===g)throw Error("String tensor is not supported on GPU.");let t=[];for(let r=0;r<_;r++){let s=o.getValue(c+r*l,"*"),i=o.getValue(c+(r+1)*l,"*"),n=r===_-1?void 0:i-s;t.push(o.UTF8ToString(s,n))}$.push([d,m,t,"cpu"])}else if("gpu-buffer"===g&&_>0){let t=o.jsepGetBuffer;if(!t)throw Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let s=t(c),i=eF(n,_);if(void 0===i||!ej(d))throw Error(`Unsupported data type: ${d}`);u=!0,$.push([d,m,{gpuBuffer:s,download:o.jsepCreateDownloader(s,i,d),dispose:()=>{0!==o._OrtReleaseTensor(r)&&eM("Can't release tensor.")}},"gpu-buffer"])}else if("ml-tensor"===g&&_>0){let t=o.jsepEnsureTensor;if(!t)throw Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===eF(n,_)||!eG(d))throw Error(`Unsupported data type: ${d}`);let s=await t(c,n,m,!1);u=!0,$.push([d,m,{mlTensor:s,download:o.jsepCreateMLTensorDownloader(c,d),dispose:()=>{o.jsepReleaseTensorId(c),o._OrtReleaseTensor(r)}},"ml-tensor"])}else{let t=new(eq(d))(_);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(o.HEAPU8.subarray(c,c+t.byteLength)),$.push([d,m,t,"cpu"])}}finally{o.stackRestore(s),"string"===d&&c&&o._free(c),u||o._OrtReleaseTensor(r)}}return h&&!f&&(0!==o._OrtClearBoundOutputs(h.handle)&&eM("Can't clear bound outputs."),lq.set(t,[d,c,p,h,f,!1])),$}finally{o.stackRestore($),b.forEach(t=>o._OrtReleaseTensor(t)),x.forEach(t=>o._OrtReleaseTensor(t)),v.forEach(t=>o._free(t)),0!==y&&o._OrtReleaseRunOptions(y),w.forEach(t=>o._free(t))}},lX=t=>{let r=eI(),s=lq.get(t);if(!s)throw Error("invalid session id");let i=s[0],n=r._OrtEndProfiling(i);0===n&&eM("Can't get an profile file name."),r._OrtFree(n)},lY=t=>{let r=[];for(let s of t){let t=s[2];!Array.isArray(t)&&"buffer"in t&&r.push(t.buffer)}return r}}),ud=D(()=>{ea(),uu(),oI(),oT(),lQ=()=>!!u.wasm.proxy&&"u">typeof document,lJ=!1,l0=!1,l1=!1,l4=new Map,l6=(t,r)=>{let s=l4.get(t);s?s.push(r):l4.set(t,[r])},l8=()=>{if(lJ||!l0||l1||!lZ)throw Error("worker not ready")},l5=t=>{switch(t.data.type){case"init-wasm":lJ=!1,t.data.err?(l1=!0,l3[1](t.data.err)):(l0=!0,l3[0]()),l2&&(URL.revokeObjectURL(l2),l2=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=l4.get(t.data.type);t.data.err?r.shift()[1](t.data.err):r.shift()[0](t.data.out)}}},l9=async()=>{if(!l0){if(lJ)throw Error("multiple calls to 'initWasm()' detected.");if(l1)throw Error("previous call to 'initWasm()' failed.");if(lJ=!0,lQ())return new Promise((t,r)=>{lZ?.terminate(),eb().then(([s,i])=>{try{(lZ=i).onerror=t=>r(t),lZ.onmessage=l5,l3=[t,r];let n={type:"init-wasm",in:u};lZ.postMessage(n),l2=s}catch(t){r(t)}},r)});try{await eT(u.wasm),await lU(u),l0=!0}catch(t){throw l1=!0,t}finally{lJ=!1}}},l7=async t=>{if(lQ())return l8(),new Promise((r,s)=>{l6("init-ep",[r,s]);let i={type:"init-ep",in:{epName:t,env:u}};lZ.postMessage(i)});await lF(u,t)},ue=async t=>lQ()?(l8(),new Promise((r,s)=>{l6("copy-from",[r,s]),lZ.postMessage({type:"copy-from",in:{buffer:t}},[t.buffer])})):lj(t),ut=async(t,r)=>{if(!lQ())return lG(t,r);if(r?.preferredOutputLocation)throw Error('session option "preferredOutputLocation" is not supported for proxy.');return l8(),new Promise((s,i)=>{l6("create",[s,i]);let n={type:"create",in:{model:t,options:{...r}}},a=[];t instanceof Uint8Array&&a.push(t.buffer),lZ.postMessage(n,a)})},ur=async t=>{if(lQ())return l8(),new Promise((r,s)=>{l6("release",[r,s]),lZ.postMessage({type:"release",in:t})});lW(t)},us=async(t,r,s,i,n,a)=>{if(!lQ())return lK(t,r,s,i,n,a);if(s.some(t=>"cpu"!==t[3]))throw Error("input tensor on GPU is not supported for proxy.");if(n.some(t=>t))throw Error("pre-allocated output tensor is not supported for proxy.");return l8(),new Promise((n,o)=>{l6("run",[n,o]),lZ.postMessage({type:"run",in:{sessionId:t,inputIndices:r,inputs:s,outputIndices:i,options:a}},lY(s))})},ui=async t=>{if(lQ())return l8(),new Promise((r,s)=>{l6("end-profiling",[r,s]),lZ.postMessage({type:"end-profiling",in:t})});lX(t)}}),uc=D(()=>{ea(),ud(),oO(),eo(),oB(),un=(t,r)=>{switch(t.location){case"cpu":return[t.type,t.dims,t.data,"cpu"];case"gpu-buffer":return[t.type,t.dims,{gpuBuffer:t.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[t.type,t.dims,{mlTensor:t.mlTensor},"ml-tensor"];default:throw Error(`invalid data location: ${t.location} for ${r()}`)}},ua=t=>{switch(t[3]){case"cpu":return new E(t[0],t[2],t[1]);case"gpu-buffer":{let r=t[0];if(!ej(r))throw Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:s,download:i,dispose:n}=t[2];return E.fromGpuBuffer(s,{dataType:r,dims:t[1],download:i,dispose:n})}case"ml-tensor":{let r=t[0];if(!eG(r))throw Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:s,download:i,dispose:n}=t[2];return E.fromMLTensor(s,{dataType:r,dims:t[1],download:i,dispose:n})}default:throw Error(`invalid data location: ${t[3]}`)}},uo=class{async fetchModelAndCopyToWasmMemory(t){return ue(await eH(t))}async loadModel(t,r){let s;T(),s="string"==typeof t?await this.fetchModelAndCopyToWasmMemory(t):t,[this.sessionId,this.inputNames,this.outputNames]=await ut(s,r),I()}async dispose(){return ur(this.sessionId)}async run(t,r,s){T();let i=[],n=[];Object.entries(t).forEach(t=>{let r=t[0],s=t[1],a=this.inputNames.indexOf(r);if(-1===a)throw Error(`invalid input '${r}'`);i.push(s),n.push(a)});let a=[],o=[];Object.entries(r).forEach(t=>{let r=t[0],s=t[1],i=this.outputNames.indexOf(r);if(-1===i)throw Error(`invalid output '${r}'`);a.push(s),o.push(i)});let l=i.map((t,r)=>un(t,()=>`input "${this.inputNames[n[r]]}"`)),u=a.map((t,r)=>t?un(t,()=>`output "${this.outputNames[o[r]]}"`):null),d=await us(this.sessionId,n,l,o,u,s),c={};for(let t=0;t<d.length;t++)c[this.outputNames[o[t]]]=a[t]??ua(d[t]);return I(),c}startProfiling(){}endProfiling(){ui(this.sessionId)}}}),up={};L(up,{OnnxruntimeWebAssemblyBackend:()=>uf,initializeFlags:()=>uh,wasmBackend:()=>um});var uh,uf,um,u_=D(()=>{ea(),ud(),uc(),oT(),uh=()=>{if(("number"!=typeof u.wasm.initTimeout||u.wasm.initTimeout<0)&&(u.wasm.initTimeout=0),!1===u.wasm.simd&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),"boolean"!=typeof u.wasm.proxy&&(u.wasm.proxy=!1),"boolean"!=typeof u.wasm.trace&&(u.wasm.trace=!1),"number"!=typeof u.wasm.numThreads||!Number.isInteger(u.wasm.numThreads)||u.wasm.numThreads<=0){if("u">typeof self&&!self.crossOriginIsolated)u.wasm.numThreads=1;else{let t=typeof navigator>"u"?R("node:os").cpus().length:navigator.hardwareConcurrency;u.wasm.numThreads=Math.min(4,Math.ceil((t||1)/2))}}void 0===u.wasm.wasmPaths&&ep&&0!==ep.indexOf("blob:")&&(u.wasm.wasmPaths=ep.substring(0,ep.lastIndexOf("/")+1))},um=new(uf=class{async init(t){uh(),await l9(),await l7(t)}async createInferenceSessionHandler(t,r){let s=new uo;return await s.loadModel(t,r),Promise.resolve(s)}})}),ug={};L(ug,{InferenceSession:()=>A,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>T,TRACE_FUNC_END:()=>I,Tensor:()=>E,default:()=>uy,env:()=>u,registerBackend:()=>s}),ea(),ea(),ea();var uy=en;{let t=(u_(),U(up)).wasmBackend;s("webgpu",t,5),s("webnn",t,5),s("cpu",t,10),s("wasm",t,10)}return Object.defineProperty(u.versions,"web",{value:"1.21.0-dev.20241205-d27fecd3d3",enumerable:!0}),U(ug)})();var e6={},e8=e6&&e6.__createBinding||(Object.create?function(t,r,s,i){void 0===i&&(i=s);var n=Object.getOwnPropertyDescriptor(r,s);(!n||("get"in n?!r.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return r[s]}}),Object.defineProperty(t,i,n)}:function(t,r,s,i){void 0===i&&(i=s),t[i]=r[s]}),e5=e6&&e6.__exportStar||function(t,r){for(var s in t)"default"===s||Object.prototype.hasOwnProperty.call(r,s)||e8(r,t,s)};Object.defineProperty(e6,"__esModule",{value:!0}),e5(x("jV6xv"),e6),e5(x("5Rz8D"),e6),e5(x("4Yomr"),e6),e5(x("h4Sf9"),e6),e5(x("3BAs2"),e6),e5(x("eXTbw"),e6),e5(x("g4dfP"),e6),e5(x("9e5te"),e6),e5(x("9NIDY"),e6),e5(x("DDPMX"),e6);const e9=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),e7=[],te=Symbol.for("onnxruntime");if(te in globalThis)r=globalThis[te];else if(H.IS_NODE_ENV){switch(r=$.default??$,E.platform){case"win32":e7.push("dml");break;case"linux":"x64"===E.arch&&e7.push("cuda")}e7.push("cpu"),t=["cpu"]}else r=e4,H.IS_WEBNN_AVAILABLE&&e7.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),H.IS_WEBGPU_AVAILABLE&&e7.push("webgpu"),e7.push("wasm"),t=["wasm"];const tt=r.InferenceSession;let tr=null;async function ts(t,r,s){tr&&await tr;let i=tt.create(t,r);tr??=i;let n=await i;return n.config=s,n}function ti(t){return t instanceof r.Tensor}const tn=r?.env;function ta(){return tn?.wasm?.proxy}tn?.wasm&&(tn.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${Z.version}/dist/`,tn.wasm.proxy=!1,"undefined"!=typeof crossOriginIsolated&&crossOriginIsolated||(tn.wasm.numThreads=1)),tn?.webgpu&&(tn.webgpu.powerPreference="high-performance"),Z.backends.onnx=tn;const to=async(t,r,s)=>{let i=await ts(new Uint8Array(t),r);return async t=>{let r=ta(),n=Object.fromEntries(Object.entries(t).map(([t,s])=>[t,(r?s.clone():s).ort_tensor])),a=await i.run(n);return Array.isArray(s)?s.map(t=>new td(a[t])):new td(a[s])}};class tl{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=to([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=to([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=to([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=to([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=to([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=to([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=to([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}const tu=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class td{get dims(){return this.ort_tensor.dims}set dims(t){this.ort_tensor.dims=t}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...t){return ti(t[0])?this.ort_tensor=t[0]:this.ort_tensor=new e6.Tensor(t[0],t[1],t[2]),new Proxy(this,{get:(t,r)=>{if("string"==typeof r){let s=Number(r);if(Number.isInteger(s))return t._getitem(s)}return t[r]},set:(t,r,s)=>t[r]=s})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){let[t,...r]=this.dims;if(r.length>0){let s=r.reduce((t,r)=>t*r);for(let i=0;i<t;++i)yield this._subarray(i,s,r)}else yield*this.data}_getitem(t){let[r,...s]=this.dims;if(t=tw(t,r),!(s.length>0))return new td(this.type,[this.data[t]],s);{let r=s.reduce((t,r)=>t*r);return this._subarray(t,r,s)}}indexOf(t){let r=this.data;for(let s=0;s<r.length;++s)if(r[s]==t)return s;return -1}_subarray(t,r,s){let i=t*r,n=(t+1)*r,a="subarray"in this.data?this.data.subarray(i,n):this.data.slice(i,n);return new td(this.type,a,s)}item(){let t=this.data;if(1!==t.length)throw Error(`a Tensor with ${t.length} elements cannot be converted to Scalar`);return t[0]}tolist(){return function(t,r){let s=t.length;if(s!==r.reduce((t,r)=>t*r))throw Error(`cannot reshape array of size ${s} into shape (${r})`);let i=t;for(let t=r.length-1;t>=0;t--)i=i.reduce((s,i)=>{let n=s[s.length-1];return n.length<r[t]?n.push(i):s.push([i]),s},[[]]);return i[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=1/(1+Math.exp(-t[r]));return this}map(t){return this.clone().map_(t)}map_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]=t(r[s],s,r);return this}mul(t){return this.clone().mul_(t)}mul_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]*=t;return this}div(t){return this.clone().div_(t)}div_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]/=t;return this}add(t){return this.clone().add_(t)}add_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]+=t;return this}sub(t){return this.clone().sub_(t)}sub_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]-=t;return this}clone(){return new td(this.type,this.data.slice(),this.dims.slice())}slice(...t){let r=[],s=[];for(let i=0;i<this.dims.length;++i){let n=t[i];if(null==n)s.push([0,this.dims[i]]),r.push(this.dims[i]);else if("number"==typeof n)n=tw(n,this.dims[i],i),s.push([n,n+1]);else if(Array.isArray(n)&&2===n.length){let[t,a]=n;if((t=null===t?0:tw(t,this.dims[i],i,!1))>(a=null===a?this.dims[i]:tw(a,this.dims[i],i,!1)))throw Error(`Invalid slice: ${n}`);let o=[Math.max(t,0),Math.min(a,this.dims[i])];s.push(o),r.push(o[1]-o[0])}else throw Error(`Invalid slice: ${n}`)}let i=s.map(([t,r])=>r-t),n=i.reduce((t,r)=>t*r),a=this.data,o=new a.constructor(n),l=this.stride();for(let t=0;t<n;++t){let r=0;for(let n=i.length-1,a=t;n>=0;--n){let t=i[n];r+=(a%t+s[n][0])*l[n],a=Math.floor(a/t)}o[t]=a[r]}return new td(this.type,o,r)}permute(...t){return function(t,r){let[s,i]=function(t,r,s){let i=Array(s.length),n=Array(s.length);for(let t=s.length-1,a=1;t>=0;--t)n[t]=a,i[t]=r[s[t]],a*=i[t];let a=s.map((t,r)=>n[s.indexOf(r)]),o=new t.constructor(t.length);for(let s=0;s<t.length;++s){let i=0;for(let t=r.length-1,n=s;t>=0;--t)i+=n%r[t]*a[t],n=Math.floor(n/r[t]);o[i]=t[s]}return[o,i]}(t.data,t.dims,r);return new td(t.type,s,i)}(this,t)}transpose(...t){return this.permute(...t)}sum(t=null,r=!1){return this.norm(1,t,r)}norm(t="fro",r=null,s=!1){if("fro"===t)t=2;else if("string"==typeof t)throw Error(`Unsupported norm: ${t}`);let i=this.data;if(null===r){let r=i.reduce((r,s)=>r+s**t,0)**(1/t);return new td(this.type,[r],[])}r=tw(r,this.dims.length);let n=this.dims.slice();n[r]=1;let a=new i.constructor(i.length/this.dims[r]);for(let s=0;s<i.length;++s){let o=0;for(let t=this.dims.length-1,i=s,a=1;t>=0;--t){let s=this.dims[t];t!==r&&(o+=i%s*a,a*=n[t]),i=Math.floor(i/s)}a[o]+=i[s]**t}if(1!==t)for(let r=0;r<a.length;++r)a[r]=a[r]**(1/t);return s||n.splice(r,1),new td(this.type,a,n)}normalize_(t=2,r=1){r=tw(r,this.dims.length);let s=this.norm(t,r,!0),i=this.data,n=s.data;for(let t=0;t<i.length;++t){let s=0;for(let i=this.dims.length-1,n=t,a=1;i>=0;--i){let t=this.dims[i];i!==r&&(s+=n%t*a,a*=this.dims[i]),n=Math.floor(n/t)}i[t]/=n[s]}return this}normalize(t=2,r=1){return this.clone().normalize_(t,r)}stride(){return function(t){let r=Array(t.length);for(let s=t.length-1,i=1;s>=0;--s)r[s]=i,i*=t[s];return r}(this.dims)}squeeze(t=null){return new td(this.type,this.data,tg(this.dims,t))}squeeze_(t=null){return this.dims=tg(this.dims,t),this}unsqueeze(t=null){return new td(this.type,this.data,ty(this.dims,t))}unsqueeze_(t=null){return this.dims=ty(this.dims,t),this}flatten_(t=0,r=-1){r=(r+this.dims.length)%this.dims.length;let s=this.dims.slice(0,t),i=this.dims.slice(t,r+1),n=this.dims.slice(r+1);return this.dims=[...s,i.reduce((t,r)=>t*r,1),...n],this}flatten(t=0,r=-1){return this.clone().flatten_(t,r)}view(...t){let r=-1;for(let s=0;s<t.length;++s)if(-1===t[s]){if(-1!==r)throw Error("Only one dimension can be inferred");r=s}let s=this.data;if(-1!==r){let i=t.reduce((t,s,i)=>i!==r?t*s:t,1);t[r]=s.length/i}return new td(this.type,s,t)}neg_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=-t[r];return this}neg(){return this.clone().neg_()}clamp_(t,r){let s=this.data;for(let i=0;i<s.length;++i)s[i]=Math.min(Math.max(s[i],t),r);return this}clamp(t,r){return this.clone().clamp_(t,r)}round_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=Math.round(t[r]);return this}round(){return this.clone().round_()}mean(t=null,r=!1){return tv(this,t,r)}to(t){let r;if(this.type===t)return this;if(!tu.hasOwnProperty(t))throw Error(`Unsupported type: ${t}`);let s=["int64","uint64"].includes(this.type),i=["int64","uint64"].includes(t);return s&&!i?r=Number:!s&&i&&(r=BigInt),new td(t,tu[t].from(this.data,r),this.dims)}}function tc(t,[r,s],i="bilinear",n=!1){let a=t.dims.at(-3)??1,o=t.dims.at(-2),l=t.dims.at(-1),u=function(t,[r,s,i],[n,a],o="bilinear",l=!1){let u=a/i,d=n/s,c=new t.constructor(n*a*r),p=s*i,h=n*a;for(let o=0;o<n;++o)for(let n=0;n<a;++n){let l=o*a+n,f=(n+.5)/u-.5,m=(o+.5)/d-.5,_=Math.floor(f),g=Math.floor(m),y=Math.min(_+1,i-1),w=Math.min(g+1,s-1),b=f-(_=Math.max(_,0)),x=m-(g=Math.max(g,0)),v=(1-b)*(1-x),$=b*(1-x),k=(1-b)*x,E=b*x,S=g*i,z=w*i,T=S+_,I=S+y,C=z+_,A=z+y;for(let s=0;s<r;++s){let r=s*p;c[s*h+l]=v*t[r+T]+$*t[r+I]+k*t[r+C]+E*t[r+A]}}return c}(t.data,[a,o,l],[r,s],i,n);return new td(t.type,u,[a,r,s])}async function tp(t,{size:r=null,mode:s="bilinear"}={}){let i,n;if(4!==t.dims.length)throw Error("`interpolate_4d` currently only supports 4D input.");if(!r)throw Error("`interpolate_4d` requires a `size` argument.");if(2===r.length)i=[...t.dims.slice(0,2),...r];else if(3===r.length)i=[t.dims[0],...r];else if(4===r.length)i=r;else throw Error("`size` must be of length 2, 3, or 4.");if("bilinear"===s)n=await tl.bilinear_interpolate_4d;else if("bicubic"===s)n=await tl.bicubic_interpolate_4d;else throw Error(`Unsupported mode: ${s}`);let a=new td("int64",new BigInt64Array(i.map(BigInt)),[i.length]);return await n({x:t,s:a})}async function th(t,r){let s=await tl.matmul;return await s({a:t,b:r})}async function tf(t,r){let s=await tl.top_k;return r=null===r?t.dims.at(-1):Math.min(r,t.dims.at(-1)),await s({x:t,k:new td("int64",[BigInt(r)],[1])})}const tm=t=>new td("int64",t,[t.length]);async function t_(t,r,s,i,n){let a=await tl.slice;return await a({x:t,s:tm(r),e:tm(s),a:tm(i),t:tm(n??Array(i.length).fill(1))})}function tg(t,r){return t=t.slice(),null===r?t=t.filter(t=>1!==t):"number"==typeof r?1===t[r]&&t.splice(r,1):Array.isArray(r)&&(t=t.filter((t,s)=>1!==t||!r.includes(s))),t}function ty(t,r){return r=tw(r,t.length+1),(t=t.slice()).splice(r,0,1),t}function tw(t,r,s=null,i=!0){if(i&&(t<-r||t>=r))throw Error(`IndexError: index ${t} is out of bounds for dimension${null===s?"":" "+s} with size ${r}`);return t<0&&(t=(t%r+r)%r),t}function tb(t,r=0){r=tw(r,t[0].dims.length);let s=t[0].dims.slice();s[r]=t.reduce((t,s)=>t+s.dims[r],0);let i=s.reduce((t,r)=>t*r,1),n=new t[0].data.constructor(i),a=t[0].type;if(0===r){let r=0;for(let s of t){let t=s.data;n.set(t,r),r+=t.length}}else{let i=0;for(let a=0;a<t.length;++a){let{data:o,dims:l}=t[a];for(let t=0;t<o.length;++t){let a=0;for(let n=l.length-1,o=t,u=1;n>=0;--n){let t=l[n],d=o%t;n===r&&(d+=i),a+=d*u,u*=s[n],o=Math.floor(o/t)}n[a]=o[t]}i+=l[r]}}return new td(a,n,s)}function tx(t,r=0){return tb(t.map(t=>t.unsqueeze(r)),r)}function tv(t,r=null,s=!1){let i=t.data;if(null===r){let r=i.reduce((t,r)=>t+r,0);return new td(t.type,[r/i.length],[])}let n=t.dims;r=tw(r,n.length);let a=n.slice();a[r]=1;let o=new i.constructor(i.length/n[r]);for(let t=0;t<i.length;++t){let s=0;for(let i=n.length-1,o=t,l=1;i>=0;--i){let t=n[i];i!==r&&(s+=o%t*l,l*=a[i]),o=Math.floor(o/t)}o[s]+=i[t]}if(1!==n[r])for(let t=0;t<o.length;++t)o[t]=o[t]/n[r];return s||a.splice(r,1),new td(t.type,o,a)}function t$(t,r,s,i){return new td(s,new i(t.reduce((t,r)=>t*r,1)).fill(r),t)}function tk(t,r){let s,i;if("number"==typeof r)s="float32",i=Float32Array;else if("bigint"==typeof r)s="int64",i=BigInt64Array;else if("boolean"==typeof r)s="bool",i=Uint8Array;else throw Error(`Unsupported data type: ${typeof r}`);return t$(t,r,s,i)}function tE(t,r){return tk(t.dims,r)}function tS(t){return t$(t,1n,"int64",BigInt64Array)}function tz(t){return t$(t,0n,"int64",BigInt64Array)}class tT{constructor(t=(t,r)=>t>r,r=1/0){this._heap=[],this._comparator=t,this._maxSize=r}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...t){return this.extend(t)}extend(t){for(let r of t)if(this.size<this._maxSize)this._heap.push(r),this._siftUp();else{let t=this._smallest();this._comparator(r,this._heap[t])&&(this._heap[t]=r,this._siftUpFrom(t))}return this.size}pop(){let t=this.peek(),r=this.size-1;return r>0&&this._swap(0,r),this._heap.pop(),this._siftDown(),t}replace(t){let r=this.peek();return this._heap[0]=t,this._siftDown(),r}_parent(t){return(t+1>>>1)-1}_left(t){return(t<<1)+1}_right(t){return t+1<<1}_greater(t,r){return this._comparator(this._heap[t],this._heap[r])}_swap(t,r){let s=this._heap[t];this._heap[t]=this._heap[r],this._heap[r]=s}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(t){for(;t>0&&this._greater(t,this._parent(t));)this._swap(t,this._parent(t)),t=this._parent(t)}_siftDown(){let t=0;for(;this._left(t)<this.size&&this._greater(this._left(t),t)||this._right(t)<this.size&&this._greater(this._right(t),t);){let r=this._right(t)<this.size&&this._greater(this._right(t),this._left(t))?this._right(t):this._left(t);this._swap(t,r),t=r}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class tI{constructor(){this.root=tC.default()}extend(t){for(let r of t)this.push(r)}push(t){let r=this.root;for(let s of t){let t=r.children.get(s);void 0===t&&(t=tC.default(),r.children.set(s,t)),r=t}r.isLeaf=!0}*commonPrefixSearch(t){let r=this.root;if(void 0===r)return;let s="";for(let i of t){if(s+=i,void 0===(r=r.children.get(i)))return;r.isLeaf&&(yield s)}}}class tC{constructor(t,r){this.isLeaf=t,this.children=r}static default(){return new tC(!1,new Map)}}class tA{constructor(t,r,s){this.chars=Array.from(t),this.len=this.chars.length,this.bosTokenId=r,this.eosTokenId=s,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);let i=new tM(this.bosTokenId,0,0,0,0),n=new tM(this.eosTokenId,1,this.len,0,0);this.nodes.push(i.clone()),this.nodes.push(n.clone()),this.beginNodes[this.len].push(n),this.endNodes[0].push(i)}insert(t,r,s,i){let n=new tM(i,this.nodes.length,t,r,s);this.beginNodes[t].push(n),this.endNodes[t+r].push(n),this.nodes.push(n)}viterbi(){let t=this.len,r=0;for(;r<=t;){if(0==this.beginNodes[r].length)return[];for(let t of this.beginNodes[r]){t.prev=null;let s=0,i=null;for(let n of this.endNodes[r]){let r=n.backtraceScore+t.score;(null===i||r>s)&&(i=n.clone(),s=r)}if(null===i)return[];t.prev=i,t.backtraceScore=s}++r}let s=[],i=this.beginNodes[t][0].prev;if(null===i)return[];let n=i.clone();for(;null!==n.prev;)s.push(n.clone()),n=n.clone().prev.clone();return s.reverse(),s}piece(t){return this.chars.slice(t.pos,t.pos+t.length).join("")}tokens(){return this.viterbi().map(t=>this.piece(t))}tokenIds(){return this.viterbi().map(t=>t.tokenId)}}class tM{constructor(t,r,s,i,n){this.tokenId=t,this.nodeId=r,this.pos=s,this.length=i,this.score=n,this.prev=null,this.backtraceScore=0}clone(){let t=new tM(this.tokenId,this.nodeId,this.pos,this.length,this.score);return t.prev=this.prev,t.backtraceScore=this.backtraceScore,t}}var tO=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),tB=Object.freeze({set:tO.Set,for:tO.For,in:tO.In,is:tO.Is,if:tO.If,else:tO.Else,endif:tO.EndIf,elif:tO.ElseIf,endfor:tO.EndFor,and:tO.And,or:tO.Or,not:tO.Not,"not in":tO.NotIn,macro:tO.Macro,endmacro:tO.EndMacro,true:tO.BooleanLiteral,false:tO.BooleanLiteral,none:tO.NullLiteral,True:tO.BooleanLiteral,False:tO.BooleanLiteral,None:tO.NullLiteral}),tP=class{constructor(t,r){this.value=t,this.type=r}};function tR(t){return/\w/.test(t)}function tD(t){return/[0-9]/.test(t)}var tL=[["{%",tO.OpenStatement],["%}",tO.CloseStatement],["{{",tO.OpenExpression],["}}",tO.CloseExpression],["(",tO.OpenParen],[")",tO.CloseParen],["{",tO.OpenCurlyBracket],["}",tO.CloseCurlyBracket],["[",tO.OpenSquareBracket],["]",tO.CloseSquareBracket],[",",tO.Comma],[".",tO.Dot],[":",tO.Colon],["|",tO.Pipe],["<=",tO.ComparisonBinaryOperator],[">=",tO.ComparisonBinaryOperator],["==",tO.ComparisonBinaryOperator],["!=",tO.ComparisonBinaryOperator],["<",tO.ComparisonBinaryOperator],[">",tO.ComparisonBinaryOperator],["+",tO.AdditiveBinaryOperator],["-",tO.AdditiveBinaryOperator],["*",tO.MultiplicativeBinaryOperator],["/",tO.MultiplicativeBinaryOperator],["%",tO.MultiplicativeBinaryOperator],["=",tO.Equals]],tN=new Map([["n","\n"],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]),tU=class{type="Statement"},tF=class extends tU{constructor(t){super(),this.body=t}type="Program"},tq=class extends tU{constructor(t,r,s){super(),this.test=t,this.body=r,this.alternate=s}type="If"},tV=class extends tU{constructor(t,r,s,i){super(),this.loopvar=t,this.iterable=r,this.body=s,this.defaultBlock=i}type="For"},tj=class extends tU{constructor(t,r){super(),this.assignee=t,this.value=r}type="Set"},tG=class extends tU{constructor(t,r,s){super(),this.name=t,this.args=r,this.body=s}type="Macro"},tW=class extends tU{type="Expression"},tH=class extends tW{constructor(t,r,s){super(),this.object=t,this.property=r,this.computed=s}type="MemberExpression"},tK=class extends tW{constructor(t,r){super(),this.callee=t,this.args=r}type="CallExpression"},tX=class extends tW{constructor(t){super(),this.value=t}type="Identifier"},tY=class extends tW{constructor(t){super(),this.value=t}type="Literal"},tQ=class extends tY{type="NumericLiteral"},tZ=class extends tY{type="StringLiteral"},tJ=class extends tY{type="BooleanLiteral"},t0=class extends tY{type="NullLiteral"},t1=class extends tY{type="ArrayLiteral"},t2=class extends tY{type="TupleLiteral"},t3=class extends tY{type="ObjectLiteral"},t4=class extends tW{constructor(t,r,s){super(),this.operator=t,this.left=r,this.right=s}type="BinaryExpression"},t6=class extends tW{constructor(t,r){super(),this.operand=t,this.filter=r}type="FilterExpression"},t8=class extends tW{constructor(t,r){super(),this.iterable=t,this.test=r}type="SelectExpression"},t5=class extends tW{constructor(t,r,s){super(),this.operand=t,this.negate=r,this.test=s}type="TestExpression"},t9=class extends tW{constructor(t,r){super(),this.operator=t,this.argument=r}type="UnaryExpression"},t7=class extends tW{constructor(t,r,s){super(),this.start=t,this.stop=r,this.step=s}type="SliceExpression"},re=class extends tW{constructor(t,r){super(),this.key=t,this.value=r}type="KeywordArgumentExpression"};function rt(t,r,s=1){void 0===r&&(r=t,t=0);let i=[];for(let n=t;n<r;n+=s)i.push(n);return i}function rr(t,r,s,i=1){let n=Math.sign(i);n>=0?(r=(r??=0)<0?Math.max(t.length+r,0):Math.min(r,t.length),s=(s??=t.length)<0?Math.max(t.length+s,0):Math.min(s,t.length)):(r=(r??=t.length-1)<0?Math.max(t.length+r,-1):Math.min(r,t.length-1),s=(s??=-1)<-1?Math.max(t.length+s,-1):Math.min(s,t.length-1));let a=[];for(let o=r;n*o<n*s;o+=i)a.push(t[o]);return a}function rs(t){return t.replace(/\b\w/g,t=>t.toUpperCase())}var ri=class{type="RuntimeValue";value;builtins=new Map;constructor(t){this.value=t}__bool__(){return new ro(!!this.value)}},rn=class extends ri{type="NumericValue"},ra=class extends ri{type="StringValue";builtins=new Map([["upper",new rp(()=>new ra(this.value.toUpperCase()))],["lower",new rp(()=>new ra(this.value.toLowerCase()))],["strip",new rp(()=>new ra(this.value.trim()))],["title",new rp(()=>new ra(rs(this.value)))],["length",new rn(this.value.length)],["rstrip",new rp(()=>new ra(this.value.trimEnd()))],["lstrip",new rp(()=>new ra(this.value.trimStart()))]])},ro=class extends ri{type="BooleanValue"},rl=class extends ri{type="ObjectValue";__bool__(){return new ro(this.value.size>0)}builtins=new Map([["get",new rp(([t,r])=>{if(!(t instanceof ra))throw Error(`Object key must be a string: got ${t.type}`);return this.value.get(t.value)??r??new rh})],["items",new rp(()=>new rd(Array.from(this.value.entries()).map(([t,r])=>new rd([new ra(t),r]))))]])},ru=class extends rl{type="KeywordArgumentsValue"},rd=class extends ri{type="ArrayValue";builtins=new Map([["length",new rn(this.value.length)]]);__bool__(){return new ro(this.value.length>0)}},rc=class extends rd{type="TupleValue"},rp=class extends ri{type="FunctionValue"},rh=class extends ri{type="NullValue"},rf=class extends ri{type="UndefinedValue"},rm=class{constructor(t){this.parent=t}variables=new Map([["namespace",new rp(t=>{if(0===t.length)return new rl(new Map);if(1!==t.length||!(t[0]instanceof rl))throw Error("`namespace` expects either zero arguments or a single object argument");return t[0]})]]);tests=new Map([["boolean",t=>"BooleanValue"===t.type],["callable",t=>t instanceof rp],["odd",t=>{if("NumericValue"!==t.type)throw Error(`Cannot apply test "odd" to type: ${t.type}`);return t.value%2!=0}],["even",t=>{if("NumericValue"!==t.type)throw Error(`Cannot apply test "even" to type: ${t.type}`);return t.value%2==0}],["false",t=>"BooleanValue"===t.type&&!t.value],["true",t=>"BooleanValue"===t.type&&t.value],["none",t=>"NullValue"===t.type],["string",t=>"StringValue"===t.type],["number",t=>"NumericValue"===t.type],["integer",t=>"NumericValue"===t.type&&Number.isInteger(t.value)],["iterable",t=>"ArrayValue"===t.type||"StringValue"===t.type],["mapping",t=>"ObjectValue"===t.type],["lower",t=>{let r=t.value;return"StringValue"===t.type&&r===r.toLowerCase()}],["upper",t=>{let r=t.value;return"StringValue"===t.type&&r===r.toUpperCase()}],["none",t=>"NullValue"===t.type],["defined",t=>"UndefinedValue"!==t.type],["undefined",t=>"UndefinedValue"===t.type],["equalto",(t,r)=>t.value===r.value],["eq",(t,r)=>t.value===r.value]]);set(t,r){return this.declareVariable(t,function t(r){switch(typeof r){case"number":return new rn(r);case"string":return new ra(r);case"boolean":return new ro(r);case"undefined":return new rf;case"object":if(null===r)return new rh;if(Array.isArray(r))return new rd(r.map(t));return new rl(new Map(Object.entries(r).map(([r,s])=>[r,t(s)])));case"function":return new rp((s,i)=>t(r(...s.map(t=>t.value))??null));default:throw Error(`Cannot convert to runtime value: ${r}`)}}(r))}declareVariable(t,r){if(this.variables.has(t))throw SyntaxError(`Variable already declared: ${t}`);return this.variables.set(t,r),r}setVariable(t,r){return this.variables.set(t,r),r}resolve(t){if(this.variables.has(t))return this;if(this.parent)return this.parent.resolve(t);throw Error(`Unknown variable: ${t}`)}lookupVariable(t){try{return this.resolve(t).variables.get(t)??new rf}catch{return new rf}}},r_=class{global;constructor(t){this.global=t??new rm}run(t){return this.evaluate(t,this.global)}evaluateBinaryExpression(t,r){let s=this.evaluate(t.left,r);switch(t.operator.value){case"and":return s.__bool__().value?this.evaluate(t.right,r):s;case"or":return s.__bool__().value?s:this.evaluate(t.right,r)}let i=this.evaluate(t.right,r);switch(t.operator.value){case"==":return new ro(s.value==i.value);case"!=":return new ro(s.value!=i.value)}if(s instanceof rf||i instanceof rf)throw Error("Cannot perform operation on undefined values");if(s instanceof rh||i instanceof rh)throw Error("Cannot perform operation on null values");if(s instanceof rn&&i instanceof rn)switch(t.operator.value){case"+":return new rn(s.value+i.value);case"-":return new rn(s.value-i.value);case"*":return new rn(s.value*i.value);case"/":return new rn(s.value/i.value);case"%":return new rn(s.value%i.value);case"<":return new ro(s.value<i.value);case">":return new ro(s.value>i.value);case">=":return new ro(s.value>=i.value);case"<=":return new ro(s.value<=i.value)}else if(s instanceof rd&&i instanceof rd){if("+"===t.operator.value)return new rd(s.value.concat(i.value))}else if(i instanceof rd){let r=void 0!==i.value.find(t=>t.value===s.value);switch(t.operator.value){case"in":return new ro(r);case"not in":return new ro(!r)}}if((s instanceof ra||i instanceof ra)&&"+"===t.operator.value)return new ra(s.value.toString()+i.value.toString());if(s instanceof ra&&i instanceof ra)switch(t.operator.value){case"in":return new ro(i.value.includes(s.value));case"not in":return new ro(!i.value.includes(s.value))}if(s instanceof ra&&i instanceof rl)switch(t.operator.value){case"in":return new ro(i.value.has(s.value));case"not in":return new ro(!i.value.has(s.value))}throw SyntaxError(`Unknown operator "${t.operator.value}" between ${s.type} and ${i.type}`)}evaluateArguments(t,r){let s=[],i=new Map;for(let n of t)if("KeywordArgumentExpression"===n.type)i.set(n.key.value,this.evaluate(n.value,r));else{if(i.size>0)throw Error("Positional arguments must come before keyword arguments");s.push(this.evaluate(n,r))}return[s,i]}evaluateFilterExpression(t,r){let s=this.evaluate(t.operand,r);if("Identifier"===t.filter.type){let r=t.filter;if("tojson"===r.value)return new ra(rg(s));if(s instanceof rd)switch(r.value){case"list":return s;case"first":return s.value[0];case"last":return s.value[s.value.length-1];case"length":return new rn(s.value.length);case"reverse":return new rd(s.value.reverse());case"sort":return new rd(s.value.sort((t,r)=>{if(t.type!==r.type)throw Error(`Cannot compare different types: ${t.type} and ${r.type}`);switch(t.type){case"NumericValue":return t.value-r.value;case"StringValue":return t.value.localeCompare(r.value);default:throw Error(`Cannot compare type: ${t.type}`)}}));default:throw Error(`Unknown ArrayValue filter: ${r.value}`)}else if(s instanceof ra)switch(r.value){case"length":return new rn(s.value.length);case"upper":return new ra(s.value.toUpperCase());case"lower":return new ra(s.value.toLowerCase());case"title":return new ra(rs(s.value));case"capitalize":return new ra(s.value.charAt(0).toUpperCase()+s.value.slice(1));case"trim":return new ra(s.value.trim());case"indent":return new ra(s.value.split("\n").map((t,r)=>0===r||0===t.length?t:"    "+t).join("\n"));case"string":return s;default:throw Error(`Unknown StringValue filter: ${r.value}`)}else if(s instanceof rn){if("abs"===r.value)return new rn(Math.abs(s.value));throw Error(`Unknown NumericValue filter: ${r.value}`)}else if(s instanceof rl)switch(r.value){case"items":return new rd(Array.from(s.value.entries()).map(([t,r])=>new rd([new ra(t),r])));case"length":return new rn(s.value.size);default:throw Error(`Unknown ObjectValue filter: ${r.value}`)}throw Error(`Cannot apply filter "${r.value}" to type: ${s.type}`)}if("CallExpression"===t.filter.type){let i=t.filter;if("Identifier"!==i.callee.type)throw Error(`Unknown filter: ${i.callee.type}`);let n=i.callee.value;if("tojson"===n){let[,t]=this.evaluateArguments(i.args,r),n=t.get("indent")??new rh;if(!(n instanceof rn||n instanceof rh))throw Error("If set, indent must be a number");return new ra(rg(s,n.value))}if(s instanceof rd){switch(n){case"selectattr":case"rejectattr":{let t;let a="selectattr"===n;if(s.value.some(t=>!(t instanceof rl)))throw Error(`\`${n}\` can only be applied to array of objects`);if(i.args.some(t=>"StringLiteral"!==t.type))throw Error(`arguments of \`${n}\` must be strings`);let[o,l,u]=i.args.map(t=>this.evaluate(t,r));if(l){let s=r.tests.get(l.value);if(!s)throw Error(`Unknown test: ${l.value}`);t=s}else t=(...t)=>t[0].__bool__().value;return new rd(s.value.filter(r=>{let s=r.value.get(o.value),i=!!s&&t(s,u);return a?i:!i}))}case"map":{let[,t]=this.evaluateArguments(i.args,r);if(t.has("attribute")){let r=t.get("attribute");if(!(r instanceof ra))throw Error("attribute must be a string");let i=t.get("default");return new rd(s.value.map(t=>{if(!(t instanceof rl))throw Error("items in map must be an object");return t.value.get(r.value)??i??new rf}))}throw Error("`map` expressions without `attribute` set are not currently supported.")}}throw Error(`Unknown ArrayValue filter: ${n}`)}if(s instanceof ra){if("indent"===n){let[t,n]=this.evaluateArguments(i.args,r),a=t.at(0)??n.get("width")??new rn(4);if(!(a instanceof rn))throw Error("width must be a number");let o=t.at(1)??n.get("first")??new ro(!1),l=t.at(2)??n.get("blank")??new ro(!1),u=s.value.split("\n"),d=" ".repeat(a.value);return new ra(u.map((t,r)=>(o.value||0!==r)&&(l.value||0!==t.length)?d+t:t).join("\n"))}throw Error(`Unknown StringValue filter: ${n}`)}throw Error(`Cannot apply filter "${n}" to type: ${s.type}`)}throw Error(`Unknown filter: ${t.filter.type}`)}evaluateTestExpression(t,r){let s=this.evaluate(t.operand,r),i=r.tests.get(t.test.value);if(!i)throw Error(`Unknown test: ${t.test.value}`);let n=i(s);return new ro(t.negate?!n:n)}evaluateUnaryExpression(t,r){let s=this.evaluate(t.argument,r);if("not"===t.operator.value)return new ro(!s.value);throw SyntaxError(`Unknown operator: ${t.operator.value}`)}evalProgram(t,r){return this.evaluateBlock(t.body,r)}evaluateBlock(t,r){let s="";for(let i of t){let t=this.evaluate(i,r);"NullValue"!==t.type&&"UndefinedValue"!==t.type&&(s+=t.value)}return new ra(s)}evaluateIdentifier(t,r){return r.lookupVariable(t.value)}evaluateCallExpression(t,r){let[s,i]=this.evaluateArguments(t.args,r);i.size>0&&s.push(new ru(i));let n=this.evaluate(t.callee,r);if("FunctionValue"!==n.type)throw Error(`Cannot call something that is not a function: got ${n.type}`);return n.value(s,r)}evaluateSliceExpression(t,r,s){if(!(t instanceof rd||t instanceof ra))throw Error("Slice object must be an array or string");let i=this.evaluate(r.start,s),n=this.evaluate(r.stop,s),a=this.evaluate(r.step,s);if(!(i instanceof rn||i instanceof rf))throw Error("Slice start must be numeric or undefined");if(!(n instanceof rn||n instanceof rf))throw Error("Slice stop must be numeric or undefined");if(!(a instanceof rn||a instanceof rf))throw Error("Slice step must be numeric or undefined");return t instanceof rd?new rd(rr(t.value,i.value,n.value,a.value)):new ra(rr(Array.from(t.value),i.value,n.value,a.value).join(""))}evaluateMemberExpression(t,r){let s,i;let n=this.evaluate(t.object,r);if(t.computed){if("SliceExpression"===t.property.type)return this.evaluateSliceExpression(n,t.property,r);s=this.evaluate(t.property,r)}else s=new ra(t.property.value);if(n instanceof rl){if(!(s instanceof ra))throw Error(`Cannot access property with non-string: got ${s.type}`);i=n.value.get(s.value)??n.builtins.get(s.value)}else if(n instanceof rd||n instanceof ra){if(s instanceof rn)i=n.value.at(s.value),n instanceof ra&&(i=new ra(n.value.at(s.value)));else if(s instanceof ra)i=n.builtins.get(s.value);else throw Error(`Cannot access property with non-string/non-number: got ${s.type}`)}else{if(!(s instanceof ra))throw Error(`Cannot access property with non-string: got ${s.type}`);i=n.builtins.get(s.value)}return i instanceof ri?i:new rf}evaluateSet(t,r){let s=this.evaluate(t.value,r);if("Identifier"===t.assignee.type){let i=t.assignee.value;r.setVariable(i,s)}else if("MemberExpression"===t.assignee.type){let i=t.assignee,n=this.evaluate(i.object,r);if(!(n instanceof rl))throw Error("Cannot assign to member of non-object");if("Identifier"!==i.property.type)throw Error("Cannot assign to member with non-identifier property");n.value.set(i.property.value,s)}else throw Error(`Invalid LHS inside assignment expression: ${JSON.stringify(t.assignee)}`);return new rh}evaluateIf(t,r){let s=this.evaluate(t.test,r);return this.evaluateBlock(s.__bool__().value?t.body:t.alternate,r)}evaluateFor(t,r){let s,i;let n=new rm(r);if("SelectExpression"===t.iterable.type){let r=t.iterable;i=this.evaluate(r.iterable,n),s=r.test}else i=this.evaluate(t.iterable,n);if(!(i instanceof rd))throw Error(`Expected iterable type in for loop: got ${i.type}`);let a=[],o=[];for(let r=0;r<i.value.length;++r){let l;let u=new rm(n),d=i.value[r];if("Identifier"===t.loopvar.type)l=r=>r.setVariable(t.loopvar.value,d);else if("TupleLiteral"===t.loopvar.type){let r=t.loopvar;if("ArrayValue"!==d.type)throw Error(`Cannot unpack non-iterable type: ${d.type}`);if(r.value.length!==d.value.length)throw Error(`Too ${r.value.length>d.value.length?"few":"many"} items to unpack`);l=t=>{for(let s=0;s<r.value.length;++s){if("Identifier"!==r.value[s].type)throw Error(`Cannot unpack non-identifier type: ${r.value[s].type}`);t.setVariable(r.value[s].value,d.value[s])}}}else throw Error(`Invalid loop variable(s): ${t.loopvar.type}`);(!s||(l(u),this.evaluate(s,u).__bool__().value))&&(a.push(d),o.push(l))}let l="",u=!0;for(let r=0;r<a.length;++r){let s=new Map([["index",new rn(r+1)],["index0",new rn(r)],["revindex",new rn(a.length-r)],["revindex0",new rn(a.length-r-1)],["first",new ro(0===r)],["last",new ro(r===a.length-1)],["length",new rn(a.length)],["previtem",r>0?a[r-1]:new rf],["nextitem",r<a.length-1?a[r+1]:new rf]]);n.setVariable("loop",new rl(s)),o[r](n),l+=this.evaluateBlock(t.body,n).value,u=!1}return u&&(l+=this.evaluateBlock(t.defaultBlock,n).value),new ra(l)}evaluateMacro(t,r){return r.setVariable(t.name.value,new rp((r,s)=>{let i;let n=new rm(s);r=r.slice(),r.at(-1)?.type==="KeywordArgumentsValue"&&(i=r.pop());for(let s=0;s<t.args.length;++s){let a=t.args[s],o=r[s];if("Identifier"===a.type){if(!o)throw Error(`Missing positional argument: ${a.value}`);n.setVariable(a.value,o)}else if("KeywordArgumentExpression"===a.type){let t=o??i?.value.get(a.key.value)??this.evaluate(a.value,n);n.setVariable(a.key.value,t)}else throw Error(`Unknown argument type: ${a.type}`)}return this.evaluateBlock(t.body,n)})),new rh}evaluate(t,r){if(void 0===t)return new rf;switch(t.type){case"Program":return this.evalProgram(t,r);case"Set":return this.evaluateSet(t,r);case"If":return this.evaluateIf(t,r);case"For":return this.evaluateFor(t,r);case"Macro":return this.evaluateMacro(t,r);case"NumericLiteral":return new rn(Number(t.value));case"StringLiteral":return new ra(t.value);case"BooleanLiteral":return new ro(t.value);case"NullLiteral":return new rh(t.value);case"ArrayLiteral":return new rd(t.value.map(t=>this.evaluate(t,r)));case"TupleLiteral":return new rc(t.value.map(t=>this.evaluate(t,r)));case"ObjectLiteral":{let s=new Map;for(let[i,n]of t.value){let t=this.evaluate(i,r);if(!(t instanceof ra))throw Error(`Object keys must be strings: got ${t.type}`);s.set(t.value,this.evaluate(n,r))}return new rl(s)}case"Identifier":return this.evaluateIdentifier(t,r);case"CallExpression":return this.evaluateCallExpression(t,r);case"MemberExpression":return this.evaluateMemberExpression(t,r);case"UnaryExpression":return this.evaluateUnaryExpression(t,r);case"BinaryExpression":return this.evaluateBinaryExpression(t,r);case"FilterExpression":return this.evaluateFilterExpression(t,r);case"TestExpression":return this.evaluateTestExpression(t,r);default:throw SyntaxError(`Unknown node type: ${t.type}`)}}};function rg(t,r,s){let i=s??0;switch(t.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(t.value);case"ArrayValue":case"ObjectValue":{let s=r?" ".repeat(r):"",n="\n"+s.repeat(i),a=n+s;if("ArrayValue"===t.type){let s=t.value.map(t=>rg(t,r,i+1));return r?`[${a}${s.join(`,${a}`)}${n}]`:`[${s.join(", ")}]`}{let s=Array.from(t.value.entries()).map(([t,s])=>{let n=`"${t}": ${rg(s,r,i+1)}`;return r?`${a}${n}`:n});return r?`{${s.join(",")}${n}}`:`{${s.join(", ")}}`}}default:throw Error(`Cannot convert to JSON: ${t.type}`)}}var ry=class{parsed;constructor(t){let r=function(t,r={}){let s=[],i=function(t,r={}){return t.endsWith("\n")&&(t=t.slice(0,-1)),t=t.replace(/{#.*?#}/gs,"{##}"),r.lstrip_blocks&&(t=t.replace(/^[ \t]*({[#%])/gm,"$1")),r.trim_blocks&&(t=t.replace(/([#%]})\n/g,"$1")),t.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(t,r),n=0,a=t=>{let r="";for(;t(i[n]);){if("\\"===i[n]){if(++n>=i.length)throw SyntaxError("Unexpected end of input");let t=i[n++],s=tN.get(t);if(void 0===s)throw SyntaxError(`Unexpected escaped character: ${t}`);r+=s;continue}if(r+=i[n++],n>=i.length)throw SyntaxError("Unexpected end of input")}return r};e:for(;n<i.length;){let t=s.at(-1)?.type;if(void 0===t||t===tO.CloseStatement||t===tO.CloseExpression){let t="";for(;n<i.length&&!("{"===i[n]&&("%"===i[n+1]||"{"===i[n+1]));)t+=i[n++];if(t.length>0){s.push(new tP(t,tO.Text));continue}}a(t=>/\s/.test(t));let r=i[n];if("-"===r||"+"===r){let t=s.at(-1)?.type;if(t===tO.Text||void 0===t)throw SyntaxError(`Unexpected character: ${r}`);switch(t){case tO.Identifier:case tO.NumericLiteral:case tO.BooleanLiteral:case tO.NullLiteral:case tO.StringLiteral:case tO.CloseParen:case tO.CloseSquareBracket:break;default:{++n;let t=a(tD);s.push(new tP(`${r}${t}`,t.length>0?tO.NumericLiteral:tO.UnaryOperator));continue}}}for(let[t,r]of tL)if(i.slice(n,n+t.length)===t){s.push(new tP(t,r)),n+=t.length;continue e}if("'"===r||'"'===r){++n;let t=a(t=>t!==r);s.push(new tP(t,tO.StringLiteral)),++n;continue}if(tD(r)){let t=a(tD);s.push(new tP(t,tO.NumericLiteral));continue}if(tR(r)){let t=a(tR),r=Object.hasOwn(tB,t)?tB[t]:tO.Identifier;r===tO.In&&s.at(-1)?.type===tO.Not?(s.pop(),s.push(new tP("not in",tO.NotIn))):s.push(new tP(t,r));continue}throw SyntaxError(`Unexpected character: ${r}`)}return s}(t,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=function(t){let r=new tF([]),s=0;function i(r,i){let n=t[s++];if(!n||n.type!==r)throw Error(`Parser Error: ${i}. ${n.type} !== ${r}.`);return n}function n(...r){return s+r.length<=t.length&&r.some((r,i)=>r!==t[s+i].type)}function a(...r){return s+r.length<=t.length&&r.every((r,i)=>r===t[s+i].type)}function o(t=!1){let r=t?g:l,i=[r()],n=a(tO.Comma);for(;n&&(++s,i.push(r()),a(tO.Comma)););return n?new t2(i):i[0]}function l(){return function(){let t=u();if(a(tO.If)){++s;let r=u();return a(tO.Else)?(++s,new tq(r,[t],[u()])):new t8(t,r)}return t}()}function u(){let r=d();for(;a(tO.Or);){let i=t[s];++s,r=new t4(i,r,d())}return r}function d(){let r=c();for(;a(tO.And);){let i=t[s];++s,r=new t4(i,r,c())}return r}function c(){let r;for(;a(tO.Not);){let i=t[s];++s,r=new t9(i,c())}return r??function(){let r=p();for(;a(tO.ComparisonBinaryOperator)||a(tO.In)||a(tO.NotIn);){let i=t[s];++s,r=new t4(i,r,p())}return r}()}function p(){let r=m();for(;a(tO.AdditiveBinaryOperator);){let i=t[s];++s,r=new t4(i,r,m())}return r}function h(t){let r=new tK(t,f());return a(tO.OpenParen)&&(r=h(r)),r}function f(){i(tO.OpenParen,"Expected opening parenthesis for arguments list");let t=function(){let t=[];for(;!a(tO.CloseParen);){let r=l();if(a(tO.Equals)){if(++s,!(r instanceof tX))throw SyntaxError("Expected identifier for keyword argument");r=new re(r,l())}t.push(r),a(tO.Comma)&&++s}return t}();return i(tO.CloseParen,"Expected closing parenthesis for arguments list"),t}function m(){let r=_();for(;a(tO.MultiplicativeBinaryOperator);){let i=t[s];++s,r=new t4(i,r,_())}return r}function _(){let r=function(){let r=function(){let r=function(){let r=g();for(;a(tO.Dot)||a(tO.OpenSquareBracket);){let n;let o=t[s];++s;let u=o.type!==tO.Dot;if(u)n=function(){let t=[],r=!1;for(;!a(tO.CloseSquareBracket);)a(tO.Colon)?(t.push(void 0),++s,r=!0):(t.push(l()),a(tO.Colon)&&(++s,r=!0));if(0===t.length)throw SyntaxError("Expected at least one argument for member/slice expression");if(r){if(t.length>3)throw SyntaxError("Expected 0-3 arguments for slice expression");return new t7(...t)}return t[0]}(),i(tO.CloseSquareBracket,"Expected closing square bracket");else if("Identifier"!==(n=g()).type)throw SyntaxError("Expected identifier following dot operator");r=new tH(r,n,u)}return r}();return a(tO.OpenParen)?h(r):r}();for(;a(tO.Pipe);){++s;let t=g();if(!(t instanceof tX))throw SyntaxError("Expected identifier for the filter");a(tO.OpenParen)&&(t=h(t)),r=new t6(r,t)}return r}();for(;a(tO.Is);){++s;let t=a(tO.Not);t&&++s;let i=g();if(i instanceof tJ?i=new tX(i.value.toString()):i instanceof t0&&(i=new tX("none")),!(i instanceof tX))throw SyntaxError("Expected identifier for the test");r=new t5(r,t,i)}return r}function g(){let r=t[s];switch(r.type){case tO.NumericLiteral:return++s,new tQ(Number(r.value));case tO.StringLiteral:return++s,new tZ(r.value);case tO.BooleanLiteral:return++s,new tJ("true"===r.value.toLowerCase());case tO.NullLiteral:return++s,new t0(null);case tO.Identifier:return++s,new tX(r.value);case tO.OpenParen:{++s;let r=o();if(t[s].type!==tO.CloseParen)throw SyntaxError(`Expected closing parenthesis, got ${t[s].type} instead`);return++s,r}case tO.OpenSquareBracket:{++s;let t=[];for(;!a(tO.CloseSquareBracket);)t.push(l()),a(tO.Comma)&&++s;return++s,new t1(t)}case tO.OpenCurlyBracket:{++s;let t=new Map;for(;!a(tO.CloseCurlyBracket);){let r=l();i(tO.Colon,"Expected colon between key and value in object literal");let n=l();t.set(r,n),a(tO.Comma)&&++s}return++s,new t3(t)}default:throw SyntaxError(`Unexpected token: ${r.type}`)}}for(;s<t.length;)r.body.push(function r(){switch(t[s].type){case tO.Text:return new tZ(i(tO.Text,"Expected text token").value);case tO.OpenStatement:return function(){let u;switch(i(tO.OpenStatement,"Expected opening statement token"),t[s].type){case tO.Set:++s,u=function t(){let r=l();return a(tO.Equals)?(++s,new tj(r,t())):r}(),i(tO.CloseStatement,"Expected closing statement token");break;case tO.If:++s,u=function n(){let o=l();i(tO.CloseStatement,"Expected closing statement token");let u=[],d=[];for(;!(t[s]?.type===tO.OpenStatement&&(t[s+1]?.type===tO.ElseIf||t[s+1]?.type===tO.Else||t[s+1]?.type===tO.EndIf));)u.push(r());if(t[s]?.type===tO.OpenStatement&&t[s+1]?.type!==tO.EndIf){if(++s,a(tO.ElseIf))i(tO.ElseIf,"Expected elseif token"),d.push(n());else for(i(tO.Else,"Expected else token"),i(tO.CloseStatement,"Expected closing statement token");!(t[s]?.type===tO.OpenStatement&&t[s+1]?.type===tO.EndIf);)d.push(r())}return new tq(o,u,d)}(),i(tO.OpenStatement,"Expected {% token"),i(tO.EndIf,"Expected endif token"),i(tO.CloseStatement,"Expected %} token");break;case tO.Macro:++s,u=function(){let t=g();if("Identifier"!==t.type)throw SyntaxError("Expected identifier following macro statement");let s=f();i(tO.CloseStatement,"Expected closing statement token");let a=[];for(;n(tO.OpenStatement,tO.EndMacro);)a.push(r());return new tG(t,s,a)}(),i(tO.OpenStatement,"Expected {% token"),i(tO.EndMacro,"Expected endmacro token"),i(tO.CloseStatement,"Expected %} token");break;case tO.For:++s,u=function(){let t=o(!0);if(!(t instanceof tX||t instanceof t2))throw SyntaxError(`Expected identifier/tuple for the loop variable, got ${t.type} instead`);i(tO.In,"Expected `in` keyword following loop variable");let u=l();i(tO.CloseStatement,"Expected closing statement token");let d=[];for(;n(tO.OpenStatement,tO.EndFor)&&n(tO.OpenStatement,tO.Else);)d.push(r());let c=[];if(a(tO.OpenStatement,tO.Else))for(++s,++s,i(tO.CloseStatement,"Expected closing statement token");n(tO.OpenStatement,tO.EndFor);)c.push(r());return new tV(t,u,d,c)}(),i(tO.OpenStatement,"Expected {% token"),i(tO.EndFor,"Expected endfor token"),i(tO.CloseStatement,"Expected %} token");break;default:throw SyntaxError(`Unknown statement type: ${t[s].type}`)}return u}();case tO.OpenExpression:return function(){i(tO.OpenExpression,"Expected opening expression token");let t=l();return i(tO.CloseExpression,"Expected closing expression token"),t}();default:throw SyntaxError(`Unexpected token type: ${t[s].type}`)}}());return r}(r)}render(t){let r=new rm;for(let[s,i]of(r.set("false",!1),r.set("true",!0),r.set("raise_exception",t=>{throw Error(t)}),r.set("range",rt),Object.entries(t)))r.set(s,i);return new r_(r).run(this.parsed).value}};const rw=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],rb=new Map(rw),rx=new Map([...rw.map(([t,r])=>[r,t]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]),rv="https://github.com/huggingface/transformers.js/issues/new/choose",r$="preprocessor_config.json";async function rk(t,r){let s=await Promise.all([eH(t,"tokenizer.json",!0,r),eH(t,"tokenizer_config.json",!0,r)]);return null!==r.legacy&&(s[1].legacy=r.legacy),s}function rE(t,r=!0){if(void 0!==t.Regex){let r=t.Regex.replace(/\\([#&~])/g,"$1");for(let[t,s]of rO)r=r.replaceAll(t,s);return RegExp(r,"gu")}if(void 0===t.String)return console.warn("Unknown pattern type:",t),null;{let s=et(t.String);return RegExp(r?s:`(${s})`,"gu")}}function rS(t){return new Map(Object.entries(t))}function rz(t){let r=t.dims;switch(r.length){case 1:return t.tolist();case 2:if(1!==r[0])throw Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return t.tolist()[0];default:throw Error(`Expected tensor to have 1-2 dimensions, got ${r.length}.`)}}function rT(t){return t.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function rI(t){return t.replace(/\p{M}/gu,"")}const rC="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",rA=RegExp(`^[${rC}]+$`,"gu"),rM=".,!?…。，、।۔،",rO=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${rM}])]+`,` ?[^\\s${rM}]+`]]);class rB{constructor(t){this.content=t.content,this.id=t.id,this.single_word=t.single_word??!1,this.lstrip=t.lstrip??!1,this.rstrip=t.rstrip??!1,this.special=t.special??!1,this.normalized=t.normalized??null}}class rP extends ee{constructor(t){super(),this.config=t,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(t,...r){switch(t.type){case"WordPiece":return new rR(t);case"Unigram":return new rD(t,...r);case"BPE":return new rU(t);default:if(t.vocab){if(Array.isArray(t.vocab))return new rD(t,...r);return new rF(t,...r)}throw Error(`Unknown TokenizerModel type: ${t.type}`)}}_call(t){return t=this.encode(t),this.fuse_unk&&(t=function(t,r,s){let i=[],n=0;for(;n<t.length;){if(i.push(t[n]),(r.get(t[n])??s)!==s){++n;continue}for(;++n<t.length&&(r.get(t[n])??s)===s;)r.get(i.at(-1))!==s&&(i[i.length-1]+=t[n])}return i}(t,this.tokens_to_ids,this.unk_token_id)),t}encode(t){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(t){return t.map(t=>this.tokens_to_ids.get(t)??this.unk_token_id)}convert_ids_to_tokens(t){return t.map(t=>this.vocab[t]??this.unk_token)}}class rR extends rP{constructor(t){for(let[r,s]of(super(t),this.tokens_to_ids=rS(t.vocab),this.unk_token_id=this.tokens_to_ids.get(t.unk_token),this.unk_token=t.unk_token,this.max_input_chars_per_word=t.max_input_chars_per_word??100,this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[s]=r}encode(t){let r=[];for(let s of t){let t=[...s];if(t.length>this.max_input_chars_per_word){r.push(this.unk_token);continue}let i=!1,n=0,a=[];for(;n<t.length;){let r=t.length,s=null;for(;n<r;){let i=t.slice(n,r).join("");if(n>0&&(i=this.config.continuing_subword_prefix+i),this.tokens_to_ids.has(i)){s=i;break}--r}if(null===s){i=!0;break}a.push(s),n=r}i?r.push(this.unk_token):r.push(...a)}return r}}class rD extends rP{constructor(t,r){super(t);let s=t.vocab.length;this.vocab=Array(s),this.scores=Array(s);for(let r=0;r<s;++r){let s=t.vocab[r];this.vocab[r]=s[0],this.scores[r]=s[1]}this.unk_token_id=t.unk_id,this.unk_token=this.vocab[t.unk_id],this.tokens_to_ids=new Map(this.vocab.map((t,r)=>[t,r])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=eQ(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new tI,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(t){let r=t.chars,s=0;for(;s<r.length;){let i=!1,n=[],a=r.slice(s).join("");for(let r of this.trie.commonPrefixSearch(a)){n.push(r);let a=this.tokens_to_ids.get(r),o=this.scores[a],l=function(t){let r=0;for(let s of t)++r;return r}(r);t.insert(s,l,o,a),i||1!==l||(i=!0)}i||t.insert(s,1,this.unk_score,this.unk_token_id),s+=1}}tokenize(t){let r=new tA(t,this.bos_token_id,this.eos_token_id);return this.populateNodes(r),r.tokens()}encode(t){let r=[];for(let s of t){let t=this.tokenize(s);r.push(...t)}return r}}const rL=(()=>{let t=[...Array.from({length:94},(t,r)=>r+33),...Array.from({length:12},(t,r)=>r+161),...Array.from({length:82},(t,r)=>r+174)],r=t.slice(),s=0;for(let i=0;i<256;++i)t.includes(i)||(t.push(i),r.push(256+s),s+=1);let i=r.map(t=>String.fromCharCode(t));return Object.fromEntries(t.map((t,r)=>[t,i[r]]))})(),rN=Object.fromEntries(Object.entries(rL).map(([t,r])=>[r,t]));class rU extends rP{constructor(t){for(let[r,s]of(super(t),this.tokens_to_ids=rS(t.vocab),this.unk_token_id=this.tokens_to_ids.get(t.unk_token),this.unk_token=t.unk_token,this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[s]=r;let r=Array.isArray(t.merges[0]);this.merges=r?t.merges:t.merges.map(t=>t.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((t,r)=>[JSON.stringify(t),r])),this.end_of_word_suffix=t.end_of_word_suffix,this.continuing_subword_suffix=t.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(t){if(0===t.length)return[];let r=this.cache.get(t);if(void 0!==r)return r;let s=Array.from(t);this.end_of_word_suffix&&(s[s.length-1]+=this.end_of_word_suffix);let i=[];if(s.length>1){let t=new tT((t,r)=>t.score<r.score),r={token:s[0],bias:0,prev:null,next:null},n=r;for(let r=1;r<s.length;++r){let i={bias:r/s.length,token:s[r],prev:n,next:null};n.next=i,this._add_node(t,n),n=i}for(;!t.isEmpty();){let s=t.pop();if(s.deleted||!s.next||s.next.deleted)continue;if(s.deleted=!0,s.next.deleted=!0,s.prev){let t={...s.prev};s.prev.deleted=!0,s.prev=t,t.prev?t.prev.next=t:r=t}let i={token:s.token+s.next.token,bias:s.bias,prev:s.prev,next:s.next.next};i.prev?(i.prev.next=i,this._add_node(t,i.prev)):r=i,i.next&&(i.next.prev=i,this._add_node(t,i))}for(let t=r;null!==t;t=t.next)i.push(t.token)}else i=s;if(this.continuing_subword_suffix)for(let t=0;t<i.length-1;++t)i[t]+=this.continuing_subword_suffix;return this.cache.set(t,i),i}_add_node(t,r){let s=this.bpe_ranks.get(JSON.stringify([r.token,r.next.token]));void 0!==s&&(r.score=s+r.bias,t.push(r))}encode(t){let r=[];for(let s of t){if(this.ignore_merges&&this.tokens_to_ids.has(s)){r.push(s);continue}for(let t of this.bpe(s))if(this.tokens_to_ids.has(t))r.push(t);else if(this.byte_fallback){let s=Array.from(this.text_encoder.encode(t)).map(t=>`<0x${t.toString(16).toUpperCase().padStart(2,"0")}>`);s.every(t=>this.tokens_to_ids.has(t))?r.push(...s):r.push(this.unk_token)}else r.push(this.unk_token)}return r}}class rF extends rP{constructor(t,r){for(let[s,i]of(super(t),this.tokens_to_ids=rS(r.target_lang?t.vocab[r.target_lang]:t.vocab),this.bos_token=r.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=r.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=r.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[i]=s}encode(t){return t}}class rq extends ee{constructor(t){super(),this.config=t}static fromConfig(t){if(null===t)return null;switch(t.type){case"BertNormalizer":return new rZ(t);case"Precompiled":return new sf(t);case"Sequence":return new rQ(t);case"Replace":return new rV(t);case"NFC":return new rj(t);case"NFKC":return new rG(t);case"NFKD":return new rW(t);case"Strip":return new rH(t);case"StripAccents":return new rK(t);case"Lowercase":return new rX(t);case"Prepend":return new rY(t);default:throw Error(`Unknown Normalizer type: ${t.type}`)}}normalize(t){throw Error("normalize should be implemented in subclass.")}_call(t){return this.normalize(t)}}class rV extends rq{normalize(t){let r=rE(this.config.pattern);return null===r?t:t.replaceAll(r,this.config.content)}}class rj extends rq{normalize(t){return t=t.normalize("NFC")}}class rG extends rq{normalize(t){return t=t.normalize("NFKC")}}class rW extends rq{normalize(t){return t=t.normalize("NFKD")}}class rH extends rq{normalize(t){return this.config.strip_left&&this.config.strip_right?t=t.trim():(this.config.strip_left&&(t=t.trimStart()),this.config.strip_right&&(t=t.trimEnd())),t}}class rK extends rq{normalize(t){return t=rI(t)}}class rX extends rq{normalize(t){return t=t.toLowerCase()}}class rY extends rq{normalize(t){return t=this.config.prepend+t}}class rQ extends rq{constructor(t){super(t),this.normalizers=t.normalizers.map(t=>rq.fromConfig(t))}normalize(t){return this.normalizers.reduce((t,r)=>r.normalize(t),t)}}class rZ extends rq{_tokenize_chinese_chars(t){let r=[];for(let i=0;i<t.length;++i){var s;let n=t[i];(s=n.charCodeAt(0))>=19968&&s<=40959||s>=13312&&s<=19903||s>=131072&&s<=173791||s>=173824&&s<=177983||s>=177984&&s<=178207||s>=178208&&s<=183983||s>=63744&&s<=64255||s>=194560&&s<=195103?(r.push(" "),r.push(n),r.push(" ")):r.push(n)}return r.join("")}stripAccents(t){return t.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(t){switch(t){case"	":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(t)}}_clean_text(t){let r=[];for(let s of t){let t=s.charCodeAt(0);0===t||65533===t||this._is_control(s)||(/^\s$/.test(s)?r.push(" "):r.push(s))}return r.join("")}normalize(t){return this.config.clean_text&&(t=this._clean_text(t)),this.config.handle_chinese_chars&&(t=this._tokenize_chinese_chars(t)),this.config.lowercase?(t=t.toLowerCase(),!1!==this.config.strip_accents&&(t=this.stripAccents(t))):this.config.strip_accents&&(t=this.stripAccents(t)),t}}class rJ extends ee{static fromConfig(t){if(null===t)return null;switch(t.type){case"BertPreTokenizer":return new r0(t);case"Sequence":return new sm(t);case"Whitespace":return new s_(t);case"WhitespaceSplit":return new sg(t);case"Metaspace":return new sp(t);case"ByteLevel":return new r1(t);case"Split":return new r2(t);case"Punctuation":return new r3(t);case"Digits":return new r4(t);case"Replace":return new sy(t);default:throw Error(`Unknown PreTokenizer type: ${t.type}`)}}pre_tokenize_text(t,r){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(t,r){return(Array.isArray(t)?t.map(t=>this.pre_tokenize_text(t,r)):this.pre_tokenize_text(t,r)).flat()}_call(t,r){return this.pre_tokenize(t,r)}}class r0 extends rJ{constructor(t){super(),this.pattern=RegExp(`[^\\s${rC}]+|[${rC}]`,"gu")}pre_tokenize_text(t,r){return t.trim().match(this.pattern)||[]}}class r1 extends rJ{constructor(t){super(),this.config=t,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=rL,this.text_encoder=new TextEncoder}pre_tokenize_text(t,r){return this.add_prefix_space&&!t.startsWith(" ")&&(t=" "+t),(this.use_regex?t.match(this.pattern)||[]:[t]).map(t=>Array.from(this.text_encoder.encode(t),t=>this.byte_encoder[t]).join(""))}}class r2 extends rJ{constructor(t){super(),this.config=t,this.pattern=rE(this.config.pattern,this.config.invert)}pre_tokenize_text(t,r){return null===this.pattern?[]:this.config.invert?t.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?t.split(this.pattern).filter(t=>t):function(t,r){let s=[],i=0;for(let n of t.matchAll(r)){let r=n[0];i<n.index&&s.push(t.slice(i,n.index)),r.length>0&&s.push(r),i=n.index+r.length}return i<t.length&&s.push(t.slice(i)),s}(t,this.pattern)}}class r3 extends rJ{constructor(t){super(),this.config=t,this.pattern=RegExp(`[^${rC}]+|[${rC}]+`,"gu")}pre_tokenize_text(t,r){return t.match(this.pattern)||[]}}class r4 extends rJ{constructor(t){super(),this.config=t;let r=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=RegExp(r,"gu")}pre_tokenize_text(t,r){return t.match(this.pattern)||[]}}class r6 extends ee{constructor(t){super(),this.config=t}static fromConfig(t){if(null===t)return null;switch(t.type){case"TemplateProcessing":return new r9(t);case"ByteLevel":return new r7(t);case"RobertaProcessing":return new r5(t);case"BertProcessing":return new r8(t);case"Sequence":return new se(t);default:throw Error(`Unknown PostProcessor type: ${t.type}`)}}post_process(t,...r){throw Error("post_process should be implemented in subclass.")}_call(t,...r){return this.post_process(t,...r)}}class r8 extends r6{constructor(t){super(t),this.cls=t.cls[0],this.sep=t.sep[0]}post_process(t,r=null,{add_special_tokens:s=!0}={}){s&&(t=ei([this.cls],t,[this.sep]));let i=Array(t.length).fill(0);if(null!==r){let n=s&&this instanceof r5?[this.sep]:[],a=s?[this.sep]:[];t=ei(t,n,r,a),i=ei(i,Array(r.length+n.length+a.length).fill(1))}return{tokens:t,token_type_ids:i}}}class r5 extends r8{}class r9 extends r6{constructor(t){super(t),this.single=t.single,this.pair=t.pair}post_process(t,r=null,{add_special_tokens:s=!0}={}){let i=null===r?this.single:this.pair,n=[],a=[];for(let o of i)"SpecialToken"in o?s&&(n.push(o.SpecialToken.id),a.push(o.SpecialToken.type_id)):"Sequence"in o&&("A"===o.Sequence.id?(n=ei(n,t),a=ei(a,Array(t.length).fill(o.Sequence.type_id))):"B"===o.Sequence.id&&(n=ei(n,r),a=ei(a,Array(r.length).fill(o.Sequence.type_id))));return{tokens:n,token_type_ids:a}}}class r7 extends r6{post_process(t,r=null){return r&&(t=ei(t,r)),{tokens:t}}}class se extends r6{constructor(t){super(t),this.processors=t.processors.map(t=>r6.fromConfig(t))}post_process(t,r=null,s={}){let i;for(let n of this.processors)if(n instanceof r7)t=n.post_process(t).tokens,r&&(r=n.post_process(r).tokens);else{let a=n.post_process(t,r,s);t=a.tokens,i=a.token_type_ids}return{tokens:t,token_type_ids:i}}}class st extends ee{constructor(t){super(),this.config=t,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=t.trim_offsets}static fromConfig(t){if(null===t)return null;switch(t.type){case"WordPiece":return new sa(t);case"Metaspace":return new sh(t);case"ByteLevel":return new so(t);case"Replace":return new sr(t);case"ByteFallback":return new ss(t);case"Fuse":return new si(t);case"Strip":return new sn(t);case"Sequence":return new su(t);case"CTC":return new sl(t);case"BPEDecoder":return new sd(t);default:throw Error(`Unknown Decoder type: ${t.type}`)}}_call(t){return this.decode(t)}decode(t){return this.decode_chain(t).join("")}decode_chain(t){throw Error("`decode_chain` should be implemented in subclass.")}}class sr extends st{decode_chain(t){let r=rE(this.config.pattern);return null===r?t:t.map(t=>t.replaceAll(r,this.config.content))}}class ss extends st{constructor(t){super(t),this.text_decoder=new TextDecoder}decode_chain(t){let r=[],s=[];for(let i of t){let t=null;if(6===i.length&&i.startsWith("<0x")&&i.endsWith(">")){let r=parseInt(i.slice(3,5),16);isNaN(r)||(t=r)}if(null!==t)s.push(t);else{if(s.length>0){let t=this.text_decoder.decode(Uint8Array.from(s));r.push(t),s=[]}r.push(i)}}if(s.length>0){let t=this.text_decoder.decode(Uint8Array.from(s));r.push(t),s=[]}return r}}class si extends st{decode_chain(t){return[t.join("")]}}class sn extends st{constructor(t){super(t),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(t){return t.map(t=>{let r=0;for(let s=0;s<this.start&&t[s]===this.content;++s)r=s+1;let s=t.length;for(let r=0;r<this.stop;++r){let i=t.length-r-1;if(t[i]===this.content){s=i;continue}break}return t.slice(r,s)})}}class sa extends st{constructor(t){super(t),this.cleanup=t.cleanup}decode_chain(t){return t.map((t,r)=>(0!==r&&(t=t.startsWith(this.config.prefix)?t.replace(this.config.prefix,""):" "+t),this.cleanup&&(t=rT(t)),t))}}class so extends st{constructor(t){super(t),this.byte_decoder=rN,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(t){let r=new Uint8Array([...t.join("")].map(t=>this.byte_decoder[t]));return this.text_decoder.decode(r)}decode_chain(t){let r=[],s=[];for(let i of t)void 0!==this.added_tokens.find(t=>t.content===i)?(s.length>0&&(r.push(this.convert_tokens_to_string(s)),s=[]),r.push(i)):s.push(i);return s.length>0&&r.push(this.convert_tokens_to_string(s)),r}}class sl extends st{constructor(t){super(t),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(t){if(0===t.length)return"";let r=[t[0]];for(let s=1;s<t.length;++s)t[s]!==r.at(-1)&&r.push(t[s]);let s=r.filter(t=>t!==this.pad_token).join("");return this.cleanup&&(s=rT(s).replaceAll(this.word_delimiter_token," ").trim()),s}decode_chain(t){return[this.convert_tokens_to_string(t)]}}class su extends st{constructor(t){super(t),this.decoders=t.decoders.map(t=>st.fromConfig(t))}decode_chain(t){return this.decoders.reduce((t,r)=>r.decode_chain(t),t)}}class sd extends st{constructor(t){super(t),this.suffix=this.config.suffix}decode_chain(t){return t.map((r,s)=>r.replaceAll(this.suffix,s===t.length-1?"":" "))}}class sc extends st{decode_chain(t){let r="";for(let s=1;s<t.length;s+=2)r+=t[s];return[r]}}class sp extends rJ{constructor(t){super(),this.addPrefixSpace=t.add_prefix_space,this.replacement=t.replacement,this.strRep=t.str_rep||this.replacement,this.prepend_scheme=t.prepend_scheme??"always"}pre_tokenize_text(t,{section_index:r}={}){let s=t.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!s.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===r)&&(s=this.strRep+s),[s]}}class sh extends st{constructor(t){super(t),this.addPrefixSpace=t.add_prefix_space,this.replacement=t.replacement}decode_chain(t){let r=[];for(let s=0;s<t.length;++s){let i=t[s].replaceAll(this.replacement," ");this.addPrefixSpace&&0==s&&i.startsWith(" ")&&(i=i.substring(1)),r.push(i)}return r}}class sf extends rq{constructor(t){super(t),this.charsmap=t.precompiled_charsmap}normalize(t){return t=(t=(t=t.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")?t.split("～").map(t=>t.normalize("NFKC")).join("～"):t.normalize("NFKC")}}class sm extends rJ{constructor(t){super(),this.tokenizers=t.pretokenizers.map(t=>rJ.fromConfig(t))}pre_tokenize_text(t,r){return this.tokenizers.reduce((t,s)=>s.pre_tokenize(t,r),[t])}}class s_ extends rJ{constructor(t){super()}pre_tokenize_text(t,r){return t.match(/\w+|[^\w\s]+/g)||[]}}class sg extends rJ{constructor(t){super()}pre_tokenize_text(t,r){return t.match(/\S+/g)||[]}}class sy extends rJ{constructor(t){super(),this.config=t,this.pattern=rE(this.config.pattern),this.content=this.config.content}pre_tokenize_text(t,r){return null===this.pattern?[t]:[t.replaceAll(this.pattern,this.config.content)]}}const sw=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];class sb extends ee{return_token_type_ids=!1;padding_side="right";constructor(t,r){for(let s of(super(),this._tokenizer_config=r,this.normalizer=rq.fromConfig(t.normalizer),this.pre_tokenizer=rJ.fromConfig(t.pre_tokenizer),this.model=rP.fromConfig(t.model,r),this.post_processor=r6.fromConfig(t.post_processor),this.decoder=st.fromConfig(t.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[],t.added_tokens)){let t=new rB(s);this.added_tokens.push(t),this.model.tokens_to_ids.set(t.content,t.id),this.model.vocab[t.id]=t.content,t.special&&(this.special_tokens.push(t.content),this.all_special_ids.push(t.id))}if(this.additional_special_tokens=r.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((t,r)=>r.content.length-t.content.length).map(t=>`${t.lstrip?"\\s*":""}(${et(t.content)})${t.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=r.model_max_length,this.remove_space=r.remove_space,this.clean_up_tokenization_spaces=r.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=r.do_lowercase_and_remove_accent??!1,r.padding_side&&(this.padding_side=r.padding_side),this.legacy=!1,this.chat_template=r.chat_template??null,Array.isArray(this.chat_template)){let t=Object.create(null);for(let{name:r,template:s}of this.chat_template){if("string"!=typeof r||"string"!=typeof s)throw Error('Chat template must be a list of objects with "name" and "template" properties');t[r]=s}this.chat_template=t}this._compiled_template_cache=new Map}getToken(...t){for(let r of t){let t=this._tokenizer_config[r];if(t){if("object"!=typeof t)return t;if("AddedToken"===t.__type)return t.content;throw Error(`Unknown token: ${t}`)}}return null}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main",legacy:o=null}={}){return new this(...await rk(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a,legacy:o}))}_call(t,{text_pair:r=null,add_special_tokens:s=!0,padding:i=!1,truncation:n=null,max_length:a=null,return_tensor:o=!0,return_token_type_ids:l=null}={}){let u;let d=Array.isArray(t);if(d){if(0===t.length)throw Error("text array must be non-empty");if(null!==r){if(Array.isArray(r)){if(t.length!==r.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");u=t.map((t,i)=>this._encode_plus(t,{text_pair:r[i],add_special_tokens:s,return_token_type_ids:l}))}else u=t.map(t=>this._encode_plus(t,{add_special_tokens:s,return_token_type_ids:l}))}else{if(null==t)throw Error("text may not be null or undefined");if(Array.isArray(r))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");u=[this._encode_plus(t,{text_pair:r,add_special_tokens:s,return_token_type_ids:l})]}if(null===a?a="max_length"===i?this.model_max_length:eZ(u.map(t=>t.input_ids.length))[0]:n||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),a=Math.min(a,this.model_max_length??1/0),i||n)for(let t=0;t<u.length;++t)u[t].input_ids.length!==a&&(u[t].input_ids.length>a?n&&function(t,r){for(let s of Object.keys(t))t[s].length=r}(u[t],a):i&&function(t,r,s,i){for(let n of Object.keys(t)){let a=r-t[n].length,o=s(n),l=Array(a).fill(o);t[n]="right"===i?ei(t[n],l):ei(l,t[n])}}(u[t],a,t=>"input_ids"===t?this.pad_token_id:0,this.padding_side));let c={};if(o){if(!(i&&n)&&u.some(t=>{for(let r of Object.keys(t))if(t[r].length!==u[0][r]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");let t=[u.length,u[0].input_ids.length];for(let r of Object.keys(u[0]))c[r]=new td("int64",BigInt64Array.from(u.flatMap(t=>t[r]).map(BigInt)),t)}else{for(let t of Object.keys(u[0]))c[t]=u.map(r=>r[t]);if(!d)for(let t of Object.keys(c))c[t]=c[t][0]}return c}_encode_text(t){return null===t?null:(this.added_tokens_regex?t.split(this.added_tokens_regex).filter(t=>t):[t]).map((t,r)=>{if(void 0!==this.added_tokens.find(r=>r.content===t))return t;{if(!0===this.remove_space&&(t=t.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(t=rI(t.toLowerCase())),null!==this.normalizer&&(t=this.normalizer(t)),0===t.length)return[];let s=null!==this.pre_tokenizer?this.pre_tokenizer(t,{section_index:r}):[t];return this.model(s)}}).flat()}_encode_plus(t,{text_pair:r=null,add_special_tokens:s=!0,return_token_type_ids:i=null}={}){let{tokens:n,token_type_ids:a}=this._tokenize_helper(t,{pair:r,add_special_tokens:s}),o=this.model.convert_tokens_to_ids(n),l={input_ids:o,attention_mask:Array(o.length).fill(1)};return(i??this.return_token_type_ids)&&a&&(l.token_type_ids=a),l}_tokenize_helper(t,{pair:r=null,add_special_tokens:s=!1}={}){let i=this._encode_text(t),n=this._encode_text(r);return this.post_processor?this.post_processor(i,n,{add_special_tokens:s}):{tokens:ei(i??[],n??[])}}tokenize(t,{pair:r=null,add_special_tokens:s=!1}={}){return this._tokenize_helper(t,{pair:r,add_special_tokens:s}).tokens}encode(t,{text_pair:r=null,add_special_tokens:s=!0,return_token_type_ids:i=null}={}){return this._encode_plus(t,{text_pair:r,add_special_tokens:s,return_token_type_ids:i}).input_ids}batch_decode(t,r={}){return t instanceof td&&(t=t.tolist()),t.map(t=>this.decode(t,r))}decode(t,r={}){var s;if(t instanceof td&&(t=rz(t)),!Array.isArray(t)||0===t.length||!(Number.isInteger(s=t[0])||"bigint"==typeof s))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(t,r)}decode_single(t,{skip_special_tokens:r=!1,clean_up_tokenization_spaces:s=null}){let i=this.model.convert_ids_to_tokens(t);r&&(i=i.filter(t=>!this.special_tokens.includes(t)));let n=this.decoder?this.decoder(i):i.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(n=n.replaceAll(this.decoder.end_of_word_suffix," "),r&&(n=n.trim())),(s??this.clean_up_tokenization_spaces)&&(n=rT(n)),n}get_chat_template({chat_template:t=null,tools:r=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){let s=this.chat_template;if(null!==t&&Object.hasOwn(s,t))t=s[t];else if(null===t){if(null!==r&&"tool_use"in s)t=s.tool_use;else if("default"in s)t=s.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(s).sort()}.`)}}else if(null===t){if(this.chat_template)t=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating")}return t}apply_chat_template(t,{tools:r=null,documents:s=null,chat_template:i=null,add_generation_prompt:n=!1,tokenize:a=!0,padding:o=!1,truncation:l=!1,max_length:u=null,return_tensor:d=!0,return_dict:c=!1,tokenizer_kwargs:p={},...h}={}){if("string"!=typeof(i=this.get_chat_template({chat_template:i,tools:r})))throw Error(`chat_template must be a string, but got ${typeof i}`);let f=this._compiled_template_cache.get(i);void 0===f&&(f=new ry(i),this._compiled_template_cache.set(i,f));let m=Object.create(null);for(let t of sw){let r=this.getToken(t);r&&(m[t]=r)}let _=f.render({messages:t,add_generation_prompt:n,tools:r,documents:s,...m,...h});if(a){let t=this._call(_,{add_special_tokens:!1,padding:o,truncation:l,max_length:u,return_tensor:d,...p});return c?t:t.input_ids}return _}}class sx extends sb{return_token_type_ids=!0}class sv extends sb{return_token_type_ids=!0}class s$ extends sb{return_token_type_ids=!0}class sk extends sb{return_token_type_ids=!0}class sE extends sb{return_token_type_ids=!0}class sS extends sb{return_token_type_ids=!0}class sz extends sb{return_token_type_ids=!0}class sT extends sb{return_token_type_ids=!0}class sI extends sb{return_token_type_ids=!0}class sC extends sb{}class sA extends sb{}class sM extends sb{return_token_type_ids=!0;constructor(t,r){super(t,r),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class sO extends sb{return_token_type_ids=!0}class sB extends sb{}class sP extends sb{}class sR extends sb{}class sD extends sb{constructor(t,r){super(t,r),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)),this.lang_to_token=t=>t}_build_translation_inputs(t,r,s){return sQ(this,t,r,s)}}class sL extends sD{}class sN extends sb{}class sU extends sb{}class sF extends sb{padding_side="left";constructor(t,r){super(t,r),this.legacy=r.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new sp({replacement:"▁",add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(t){if(null===t)return null;if(this.legacy||0===t.length)return super._encode_text(t);let r=super._encode_text("▁"+t.replaceAll("▁"," "));return r.length>1&&"▁"===r[0]&&this.special_tokens.includes(r[1])&&(r=r.slice(1)),r}}class sq extends sb{}class sV extends sb{}class sj extends sb{}class sG extends sb{}class sW extends sb{}class sH extends sb{}class sK extends sb{}class sX extends sb{}class sY extends sb{}function sQ(t,r,s,i){if(!("language_codes"in t)||!Array.isArray(t.language_codes))throw Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in t)||!(t.languageRegex instanceof RegExp))throw Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in t)||"function"!=typeof t.lang_to_token)throw Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");let n=i.src_lang,a=i.tgt_lang;if(!t.language_codes.includes(a))throw Error(`Target language code "${a}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);if(void 0!==n){if(!t.language_codes.includes(n))throw Error(`Source language code "${n}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);for(let r of t.post_processor.config.single)if("SpecialToken"in r&&t.languageRegex.test(r.SpecialToken.id)){r.SpecialToken.id=t.lang_to_token(n);break}}return i.forced_bos_token_id=t.model.convert_tokens_to_ids([t.lang_to_token(a)])[0],t._call(r,s)}class sZ extends sb{constructor(t,r){super(t,r),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)),this.lang_to_token=t=>t}_build_translation_inputs(t,r,s){return sQ(this,t,r,s)}}class sJ extends sb{constructor(t,r){super(t,r),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)).map(t=>t.slice(2,-2)),this.lang_to_token=t=>`__${t}__`}_build_translation_inputs(t,r,s){return sQ(this,t,r,s)}}class s0 extends sb{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(t,{return_timestamps:r=!1,return_language:s=!1,time_precision:i=null,force_full_sequences:n=!0}={}){if(null===i)throw Error("Must specify time_precision");let a=null,o="word"===r;function l(){return{language:a,timestamp:[null,null],text:""}}let u=[],d=l(),c=0,p=this.timestamp_begin,h=p+1500,f=[],m=[],_=!1,g=null,y=new Set(this.all_special_ids);for(let s of t){let t=s.tokens,n=o?s.token_timestamps:null,w=null,b=p;if("stride"in s){let[r,n,a]=s.stride;if(c-=n,g=r-a,n&&(b=n/i+p),a)for(let r=t.length-1;r>=0;--r){let s=Number(t[r]);if(s>=p){if(null!==w&&(s-p)*i<g)break;w=s}}}let x=[],v=[];for(let s=0;s<t.length;++s){let g=Number(t[s]);if(y.has(g)){let t=this.decode([g]),s=rb.get(t.slice(2,-2));if(void 0!==s){if(null!==a&&s!==a&&!r){f.push(x);let t=this.findLongestCommonSequence(f)[0],r=this.decode(t);d.text=r,u.push(d),f=[],x=[],d=l()}a=d.language=s}}else if(g>=p&&g<=h){let t=e3((g-p)*i+c,2);if(null!==w&&g>=w)_=!0;else if(_||f.length>0&&g<b)_=!1;else if(null===d.timestamp[0])d.timestamp[0]=t;else if(t===d.timestamp[0]);else{d.timestamp[1]=t,f.push(x),o&&m.push(v);let[r,s]=this.findLongestCommonSequence(f,m),i=this.decode(r);d.text=i,o&&(d.words=this.collateWordTimestamps(r,s,a)),u.push(d),f=[],x=[],m=[],v=[],d=l()}}else if(x.push(g),o){let t,r=e3(n[s]+c,2);if(s+1<n.length){t=e3(n[s+1]+c,2);let a=this.decode([g]);rA.test(a)&&(t=e3(Math.min(r+i,t),2))}else t=null;v.push([r,t])}}if("stride"in s){let[t,r,i]=s.stride;c+=t-i}x.length>0?(f.push(x),o&&m.push(v)):f.every(t=>0===t.length)&&(d=l(),f=[],x=[],m=[],v=[])}if(f.length>0){if(n&&r)throw Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");let[t,s]=this.findLongestCommonSequence(f,m),i=this.decode(t);d.text=i,o&&(d.words=this.collateWordTimestamps(t,s,a)),u.push(d)}let w=Object.create(null),b=u.map(t=>t.text).join("");if(r||s){for(let t=0;t<u.length;++t){let i=u[t];r||delete i.timestamp,s||delete i.language}if(o){let t=[];for(let r of u)for(let s of r.words)t.push(s);w={chunks:t}}else w={chunks:u}}return[b,w]}findLongestCommonSequence(t,r=null){let s=t[0],i=s.length,n=[],a=Array.isArray(r)&&r.length>0,o=a?[]:null,l=a?r[0]:null;for(let u=1;u<t.length;++u){let d=t[u],c=0,p=[i,i,0,0],h=d.length;for(let t=1;t<i+h;++t){let n;let o=Math.max(0,i-t),f=Math.min(i,i+h-t),m=s.slice(o,f),_=Math.max(0,t-i),g=Math.min(h,t),y=d.slice(_,g);if(m.length!==y.length)throw Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");n=a?m.filter((t,s)=>t===y[s]&&l[o+s]<=r[u][_+s]).length:m.filter((t,r)=>t===y[r]).length;let w=t/1e4,b=n/t+w;n>1&&b>c&&(c=b,p=[o,f,_,g])}let[f,m,_,g]=p,y=Math.floor((m+f)/2),w=Math.floor((g+_)/2);n.push(...s.slice(0,y)),i=(s=d.slice(w)).length,a&&(o.push(...l.slice(0,y)),l=r[u].slice(w))}return(n.push(...s),a)?(o.push(...l),[n,o]):[n,[]]}collateWordTimestamps(t,r,s){let[i,n,a]=this.combineTokensIntoWords(t,s),o=[];for(let t=0;t<i.length;++t){let s=a[t];o.push({text:i[t],timestamp:[r[s.at(0)][0],r[s.at(-1)][1]]})}return o}combineTokensIntoWords(t,r,s="\"'“¡¿([{-",i="\"'.。,，!！?？:：”)]}、"){let n,a,o;return["chinese","japanese","thai","lao","myanmar"].includes(r=r??"english")?[n,a,o]=this.splitTokensOnUnicode(t):[n,a,o]=this.splitTokensOnSpaces(t),this.mergePunctuations(n,a,o,s,i)}decode(t,r){let s;return r?.decode_with_timestamps?(t instanceof td&&(t=rz(t)),s=this.decodeWithTimestamps(t,r)):s=super.decode(t,r),s}decodeWithTimestamps(t,r){let s=r?.time_precision??.02,i=Array.from(this.all_special_ids).at(-1)+1,n=[[]];for(let r of t)if((r=Number(r))>=i){let t=((r-i)*s).toFixed(2);n.push(`<|${t}|>`),n.push([])}else n[n.length-1].push(r);return(n=n.map(t=>"string"==typeof t?t:super.decode(t,r))).join("")}splitTokensOnUnicode(t){let r=this.decode(t,{decode_with_timestamps:!0}),s=[],i=[],n=[],a=[],o=[],l=0;for(let u=0;u<t.length;++u){let d=t[u];a.push(d),o.push(u);let c=this.decode(a,{decode_with_timestamps:!0});c.includes("�")&&"�"!==r[l+c.indexOf("�")]||(s.push(c),i.push(a),n.push(o),a=[],o=[],l+=c.length)}return[s,i,n]}splitTokensOnSpaces(t){let[r,s,i]=this.splitTokensOnUnicode(t),n=[],a=[],o=[],l=RegExp(`^[${rC}]$`,"gu");for(let t=0;t<r.length;++t){let u=r[t],d=s[t],c=i[t],p=d[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),h=u.startsWith(" "),f=u.trim(),m=l.test(f);if(p||h||m||0===n.length)n.push(u),a.push(d),o.push(c);else{let t=n.length-1;n[t]+=u,a[t].push(...d),o[t].push(...c)}}return[n,a,o]}mergePunctuations(t,r,s,i,n){let a=structuredClone(t),o=structuredClone(r),l=structuredClone(s),u=a.length-2,d=a.length-1;for(;u>=0;)a[u].startsWith(" ")&&i.includes(a[u].trim())?(a[d]=a[u]+a[d],o[d]=ei(o[u],o[d]),l[d]=ei(l[u],l[d]),a[u]="",o[u]=[],l[u]=[]):d=u,--u;for(u=0,d=1;d<a.length;)!a[u].endsWith(" ")&&n.includes(a[d])?(a[u]+=a[d],o[u]=ei(o[u],o[d]),l[u]=ei(l[u],l[d]),a[d]="",o[d]=[],l[d]=[]):u=d,++d;return[a.filter(t=>t),o.filter(t=>t.length>0),l.filter(t=>t.length>0)]}}class s1 extends sb{}class s2 extends sb{}class s3 extends sb{}class s4 extends sb{constructor(t,r){super(t,r),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(t=>this.languageRegex.test(t)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(t){if(null===t)return null;let[r,...s]=t.trim().split(this.languageRegex);if(0===s.length)return super._encode_text(r);if(2===s.length){let[t,r]=s;return this.supported_language_codes.includes(t)||console.warn(`Unsupported language code "${t}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),ei([t],super._encode_text(r))}}}class s6 extends sb{}class s8 extends sb{}class s5 extends sb{}class s9 extends sb{}class s7 extends sb{}class ie extends sb{constructor(t,r){super(t,r),this.decoder=new sc({})}}class it extends sb{}class ir extends sb{}class is{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:sB,DistilBertTokenizer:sC,CamembertTokenizer:sA,DebertaTokenizer:sE,DebertaV2Tokenizer:sS,BertTokenizer:sx,HerbertTokenizer:sz,ConvBertTokenizer:sT,RoFormerTokenizer:sI,XLMTokenizer:sM,ElectraTokenizer:sO,MobileBertTokenizer:s$,SqueezeBertTokenizer:sk,AlbertTokenizer:sv,GPT2Tokenizer:sP,BartTokenizer:sR,MBartTokenizer:sD,MBart50Tokenizer:sL,RobertaTokenizer:sN,WhisperTokenizer:s0,CodeGenTokenizer:s1,CLIPTokenizer:s2,SiglipTokenizer:s3,MarianTokenizer:s4,BloomTokenizer:sU,NllbTokenizer:sZ,M2M100Tokenizer:sJ,LlamaTokenizer:sF,CodeLlamaTokenizer:sq,XLMRobertaTokenizer:sV,MPNetTokenizer:sj,FalconTokenizer:sG,GPTNeoXTokenizer:sW,EsmTokenizer:sH,Wav2Vec2CTCTokenizer:s6,BlenderbotTokenizer:s8,BlenderbotSmallTokenizer:s5,SpeechT5Tokenizer:s9,NougatTokenizer:s7,VitsTokenizer:ie,Qwen2Tokenizer:sK,GemmaTokenizer:sX,Grok1Tokenizer:sY,CohereTokenizer:it,MgpstrTokenizer:ir,PreTrainedTokenizer:sb};static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main",legacy:o=null}={}){let[l,u]=await rk(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a,legacy:o}),d=u.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer",c=this.TOKENIZER_CLASS_MAPPING[d];return c||(console.warn(`Unknown tokenizer class "${d}", attempting to construct from base class.`),c=sb),new c(l,u)}}async function ii(t,r){return await eH(t,"config.json",!0,r)}function ia(t,{prefix:r="past_key_values",batch_size:s=1}={}){let i={},n=t.normalized_config;if(n.is_encoder_decoder&&"num_encoder_heads"in n&&"num_decoder_heads"in n){let t=n.encoder_dim_kv??n.encoder_hidden_size/n.num_encoder_heads,a=n.decoder_dim_kv??n.decoder_hidden_size/n.num_decoder_heads,o=[s,n.num_encoder_heads,0,t],l=[s,n.num_decoder_heads,0,a];for(let t=0;t<n.num_decoder_layers;++t)i[`${r}.${t}.encoder.key`]=o,i[`${r}.${t}.encoder.value`]=o,i[`${r}.${t}.decoder.key`]=l,i[`${r}.${t}.decoder.value`]=l}else{let t=n.num_heads,a=n.num_layers,o=n.dim_kv??n.hidden_size/(n.num_attention_heads??t);if("falcon"===n.model_type){let n=[s*t,0,o];for(let t=0;t<a;++t)i[`${r}.${t}.key`]=n,i[`${r}.${t}.value`]=n}else if(n.multi_query){let n=[s*t,0,2*o];for(let t=0;t<a;++t)i[`${r}.${t}.key_value`]=n}else if("bloom"===n.model_type){let n=[s*t,o,0],l=[s*t,0,o];for(let t=0;t<a;++t)i[`${r}.${t}.key`]=n,i[`${r}.${t}.value`]=l}else if("openelm"===n.model_type)for(let n=0;n<a;++n){let a=[s,t[n],0,o];i[`${r}.${n}.key`]=a,i[`${r}.${n}.value`]=a}else{let n=[s,t,0,o];for(let t=0;t<a;++t)i[`${r}.${t}.key`]=n,i[`${r}.${t}.value`]=n}}return i}class io{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(t){Object.assign(this,t),this.normalized_config=function t(r){let s={},i={};switch(r.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":i=t(r.text_config);break;case"moondream1":i=t(r.phi_config);break;case"musicgen":i=t(r.decoder);break;case"multi_modality":i=t(r.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":s.num_heads="n_head",s.num_layers="n_layer",s.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":s.num_heads="num_attention_heads",s.num_layers="num_hidden_layers",s.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":s.num_heads="num_key_value_heads",s.num_layers="num_hidden_layers",s.hidden_size="hidden_size",s.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":s.num_heads="num_key_value_heads",s.num_layers="num_hidden_layers",s.dim_kv="head_dim";break;case"openelm":s.num_heads="num_kv_heads",s.num_layers="num_transformer_layers",s.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":s.num_heads="num_heads",s.num_layers="num_layers",s.hidden_size="hidden_size";break;case"bloom":s.num_heads="n_head",s.num_layers="n_layer",s.hidden_size="hidden_size";break;case"mpt":s.num_heads="n_heads",s.num_layers="n_layers",s.hidden_size="d_model";break;case"exaone":s.num_heads="num_key_value_heads",s.num_layers="num_layers",s.dim_kv="head_dim",s.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":s.num_decoder_layers="num_decoder_layers",s.num_decoder_heads="num_heads",s.decoder_dim_kv="d_kv",s.num_encoder_layers="num_layers",s.num_encoder_heads="num_heads",s.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":s.num_decoder_layers="decoder_layers",s.num_decoder_heads="decoder_attention_heads",s.decoder_hidden_size="d_model",s.num_encoder_layers="encoder_layers",s.num_encoder_heads="encoder_attention_heads",s.encoder_hidden_size="d_model";break;case"speecht5":s.num_decoder_layers="decoder_layers",s.num_decoder_heads="decoder_attention_heads",s.decoder_hidden_size="hidden_size",s.num_encoder_layers="encoder_layers",s.num_encoder_heads="encoder_attention_heads",s.encoder_hidden_size="hidden_size";break;case"trocr":s.num_encoder_layers=s.num_decoder_layers="decoder_layers",s.num_encoder_heads=s.num_decoder_heads="decoder_attention_heads",s.encoder_hidden_size=s.decoder_hidden_size="d_model";break;case"musicgen_decoder":case"moonshine":s.num_encoder_layers=s.num_decoder_layers="num_hidden_layers",s.num_encoder_heads=s.num_decoder_heads="num_attention_heads",s.encoder_hidden_size=s.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":let n=t(r.decoder),a="num_decoder_layers"in n,o=ea(r,["model_type","is_encoder_decoder"]);return a?(o.num_decoder_layers=n.num_decoder_layers,o.num_decoder_heads=n.num_decoder_heads,o.decoder_hidden_size=n.decoder_hidden_size,o.num_encoder_layers=n.num_encoder_layers,o.num_encoder_heads=n.num_encoder_heads,o.encoder_hidden_size=n.encoder_hidden_size):(o.num_layers=n.num_layers,o.num_heads=n.num_heads,o.hidden_size=n.hidden_size),o}let l={...i,...ea(r,["model_type","multi_query","is_encoder_decoder"])};for(let t in s)l[t]=r[s[t]];return l}(this)}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main"}={}){return!s||s instanceof io||(s=new io(s)),new this(s??await ii(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a}))}}class il{static async from_pretrained(...t){return io.from_pretrained(...t)}}const iu=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"}),id=async function(){if(void 0===o){if(H.IS_WEBGPU_AVAILABLE)try{o=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch(t){o=!1}else o=!1}return o},ic=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),ip=Object.freeze({[iu.wasm]:ic.q8}),ih=Object.freeze({[ic.fp32]:"",[ic.fp16]:"_fp16",[ic.int8]:"_int8",[ic.uint8]:"_uint8",[ic.q8]:"_quantized",[ic.q4]:"_q4",[ic.q4f16]:"_q4f16",[ic.bnb4]:"_bnb4"});class im extends ee{_call(t,r){throw Error("`_call` should be implemented in a subclass")}}class i_ extends ee{_call(t,r){throw Error("`_call` should be implemented in a subclass")}}class ig extends ee{constructor(){super(),this.processors=[]}push(t){this.processors.push(t)}extend(t){this.processors.push(...t)}_call(t,r){let s=r;for(let r of this.processors)s=r(t,s);return s}[Symbol.iterator](){return this.processors.values()}}class iy extends im{constructor(t){super(),this.bos_token_id=t}_call(t,r){for(let s=0;s<t.length;++s)if(1===t[s].length){let t=r[s].data;t.fill(-1/0),t[this.bos_token_id]=0}return r}}class iw extends im{constructor(t,r){super(),this.max_length=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length===this.max_length-1){let t=r[s].data;for(let r of(t.fill(-1/0),this.eos_token_id))t[r]=0}return r}}class ib extends im{constructor(t,r){super(),this.begin_suppress_tokens=t,this.begin_index=r}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length===this.begin_index){let t=r[s].data;for(let r of this.begin_suppress_tokens)t[r]=-1/0}return r}}class ix extends im{constructor(t,r){super(),this.eos_token_id=Array.isArray(t.eos_token_id)?t.eos_token_id[0]:t.eos_token_id,this.no_timestamps_token_id=t.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=r.length,r.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=t.max_initial_timestamp_index}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;if(i[this.no_timestamps_token_id]=-1/0,t[s].length===this.begin_index-1){i.fill(-1/0),i[this.timestamp_begin]=0;continue}let n=t[s].slice(this.begin_index),a=n.length>=1&&n[n.length-1]>=this.timestamp_begin,o=n.length<2||n[n.length-2]>=this.timestamp_begin;if(a&&(o?i.subarray(this.timestamp_begin).fill(-1/0):i.subarray(0,this.eos_token_id).fill(-1/0)),t[s].length===this.begin_index&&null!==this.max_initial_timestamp_index){let t=this.timestamp_begin+this.max_initial_timestamp_index;i.subarray(t+1).fill(-1/0)}let l=function(t){let r=eZ(t)[0],s=0;for(let i=0;i<t.length;++i)s+=Math.exp(t[i]-r);let i=Math.log(s);return t.map(t=>t-r-i)}(i);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce((t,r)=>t+r))>eZ(l.subarray(0,this.timestamp_begin))[0]&&i.subarray(0,this.timestamp_begin).fill(-1/0)}return r}}class iv extends im{constructor(t){super(),this.no_repeat_ngram_size=t}getNgrams(t){let r=t.length,s=[];for(let i=0;i<r+1-this.no_repeat_ngram_size;++i){let r=[];for(let s=0;s<this.no_repeat_ngram_size;++s)r.push(t[i+s]);s.push(r.map(Number))}let i=new Map;for(let t of s){let r=JSON.stringify(t.slice(0,t.length-1)),s=i.get(r)??[];s.push(t[t.length-1]),i.set(r,s)}return i}getGeneratedNgrams(t,r){let s=r.slice(r.length+1-this.no_repeat_ngram_size,r.length);return t.get(JSON.stringify(s.map(Number)))??[]}calcBannedNgramTokens(t){if(t.length+1<this.no_repeat_ngram_size)return[];{let r=this.getNgrams(t);return this.getGeneratedNgrams(r,t)}}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;for(let r of this.calcBannedNgramTokens(t[s]))i[r]=-1/0}return r}}class i$ extends im{constructor(t){super(),this.penalty=t}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;for(let r of new Set(t[s])){let t=Number(r);i[t]<0?i[t]*=this.penalty:i[t]/=this.penalty}}return r}}class ik extends im{constructor(t,r){super(),this.min_length=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length<this.min_length){let t=r[s].data;for(let r of this.eos_token_id)t[r]=-1/0}return r}}class iE extends im{constructor(t,r,s){super(),this.prompt_length_to_skip=t,this.min_new_tokens=r,this.eos_token_id=Array.isArray(s)?s:[s]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length-this.prompt_length_to_skip<this.min_new_tokens){let t=r[s].data;for(let r of this.eos_token_id)t[r]=-1/0}return r}}class iS extends im{constructor(t,r){super(),this.bad_words_ids=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data,n=t[s];for(let t of this.bad_words_ids){let r=!0;for(let s=1;s<=t.length-1&&t.length<n.length;++s)if(t.at(-s-1)!=n.at(-s)){r=!1;break}r&&(i[t.at(-1)]=-1/0)}}return r}}class iz extends im{constructor(t){if(super(),t<=1)throw Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${t}.`);this.guidance_scale=t}_call(t,r){if(r.dims[0]!==2*t.length)throw Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${r.dims[0]} for the logits and ${t.length} for the input ids.`);let s=t.length,i=r.slice([0,s],null),n=r.slice([s,r.dims[0]],null);for(let t=0;t<n.data.length;++t)n.data[t]+=(i.data[t]-n.data[t])*this.guidance_scale;return n}}class iT extends i_{constructor(t){super(),this.temperature=t}_call(t,r){let s=r.data;for(let t=0;t<s.length;++t)s[t]/=this.temperature;return r}}class iI extends i_{constructor(t,{filter_value:r=-1/0,min_tokens_to_keep:s=1}={}){if(super(),t<0||t>1)throw Error(`\`top_p\` must be a float > 0 and < 1, but is ${t}`);if(!Number.isInteger(s)||s<1)throw Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${s}`);this.top_p=t,this.filter_value=r,this.min_tokens_to_keep=s}}class iC extends i_{constructor(t,{filter_value:r=-1/0,min_tokens_to_keep:s=1}={}){if(super(),!Number.isInteger(t)||t<0)throw Error(`\`top_k\` must be a positive integer, but is ${t}`);this.top_k=Math.max(t,s),this.filter_value=r}}class iA{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(t){Object.assign(this,ea(t,Object.getOwnPropertyNames(this)))}}const iM=H.IS_BROWSER_ENV||H.IS_WEBWORKER_ENV;if(iM)s=(t,r)=>{if(!self.OffscreenCanvas)throw Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(t,r)},n=self.createImageBitmap,i=self.ImageData;else if(l($))n=async t=>{let r=(await t.metadata()).channels,{data:s,info:i}=await t.rotate().raw().toBuffer({resolveWithObject:!0}),n=new iP(new Uint8ClampedArray(s),i.width,i.height,i.channels);return void 0!==r&&r!==i.channels&&n.convert(r),n};else throw Error("Unable to load image processing library.");const iO={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},iB=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class iP{constructor(t,r,s,i){this.data=t,this.width=r,this.height=s,this.channels=i}get size(){return[this.width,this.height]}static async read(t){if(t instanceof iP)return t;if("string"==typeof t||t instanceof URL)return await this.fromURL(t);throw Error(`Unsupported input type: ${typeof t}`)}static fromCanvas(t){if(!iM)throw Error("fromCanvas() is only supported in browser environments.");return new iP(t.getContext("2d").getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}static async fromURL(t){let r=await eq(t);if(200!==r.status)throw Error(`Unable to read image from "${t}" (${r.status} ${r.statusText})`);let s=await r.blob();return this.fromBlob(s)}static async fromBlob(t){if(iM){let r=await n(t),i=s(r.width,r.height).getContext("2d");return i.drawImage(r,0,0),new this(i.getImageData(0,0,r.width,r.height).data,r.width,r.height,4)}{let r=l($)(await t.arrayBuffer());return await n(r)}}static fromTensor(t,r="CHW"){if(3!==t.dims.length)throw Error(`Tensor should have 3 dimensions, but has ${t.dims.length} dimensions.`);if("CHW"===r)t=t.transpose(1,2,0);else if("HWC"===r);else throw Error(`Unsupported channel format: ${r}`);if(!(t.data instanceof Uint8ClampedArray||t.data instanceof Uint8Array))throw Error(`Unsupported tensor type: ${t.type}`);switch(t.dims[2]){case 1:case 2:case 3:case 4:return new iP(t.data,t.dims[1],t.dims[0],t.dims[2]);default:throw Error(`Unsupported number of channels: ${t.dims[2]}`)}}grayscale(){if(1===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let r=0,s=0;r<this.data.length;r+=this.channels){let i=this.data[r],n=this.data[r+1],a=this.data[r+2];t[s++]=Math.round(.2989*i+.587*n+.114*a)}break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,1)}rgb(){if(3===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let r=0,s=0;r<this.data.length;++r)t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=this.data[r];break;case 4:for(let r=0,s=0;r<this.data.length;r+=4)t[s++]=this.data[r],t[s++]=this.data[r+1],t[s++]=this.data[r+2];break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,3)}rgba(){if(4===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let r=0,s=0;r<this.data.length;++r)t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=255;break;case 3:for(let r=0,s=0;r<this.data.length;r+=3)t[s++]=this.data[r],t[s++]=this.data[r+1],t[s++]=this.data[r+2],t[s++]=255;break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,4)}putAlpha(t){if(t.width!==this.width||t.height!==this.height)throw Error(`Expected mask size to be ${this.width}x${this.height}, but got ${t.width}x${t.height}`);if(1!==t.channels)throw Error(`Expected mask to have 1 channel, but got ${t.channels}`);let r=this.data,s=t.data,i=this.width*this.height;if(3===this.channels){let t=new Uint8ClampedArray(4*i);for(let n=0,a=0,o=0;n<i;++n)t[o++]=r[a++],t[o++]=r[a++],t[o++]=r[a++],t[o++]=s[n];return this._update(t,this.width,this.height,4)}if(4===this.channels){for(let t=0;t<i;++t)r[4*t+3]=s[t];return this}throw Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(t,r,{resample:i=2}={}){if(this.width===t&&this.height===r)return this;let a=iO[i]??i,o=er(t),l=er(r);if(o&&l)return this;if(o?t=r/this.height*this.width:l&&(r=t/this.width*this.height),iM){let i=this.channels,n=this.toCanvas(),a=s(t,r).getContext("2d");return a.drawImage(n,0,0,t,r),new iP(a.getImageData(0,0,t,r).data,t,r,4).convert(i)}{let s=this.toSharp();switch(a){case"box":case"hamming":("box"===a||"hamming"===a)&&(console.warn(`Resampling method ${a} is not yet supported. Using bilinear instead.`),a="bilinear");case"nearest":case"bilinear":case"bicubic":s=s.affine([t/this.width,0,0,r/this.height],{interpolator:a});break;case"lanczos":s=s.resize({width:t,height:r,fit:"fill",kernel:"lanczos3"});break;default:throw Error(`Resampling method ${a} is not supported.`)}return await n(s)}}async pad([t,r,i,a]){if(t=Math.max(t,0),r=Math.max(r,0),i=Math.max(i,0),a=Math.max(a,0),0===t&&0===r&&0===i&&0===a)return this;if(iM){let n=this.channels,o=this.toCanvas(),l=this.width+t+r,u=this.height+i+a,d=s(l,u).getContext("2d");return d.drawImage(o,0,0,this.width,this.height,t,i,this.width,this.height),new iP(d.getImageData(0,0,l,u).data,l,u,4).convert(n)}{let s=this.toSharp().extend({left:t,right:r,top:i,bottom:a});return await n(s)}}async crop([t,r,i,a]){if(t=Math.max(t,0),r=Math.max(r,0),i=Math.min(i,this.width-1),a=Math.min(a,this.height-1),0===t&&0===r&&i===this.width-1&&a===this.height-1)return this;let o=i-t+1,l=a-r+1;if(iM){let i=this.channels,n=this.toCanvas(),a=s(o,l).getContext("2d");return a.drawImage(n,t,r,o,l,0,0,o,l),new iP(a.getImageData(0,0,o,l).data,o,l,4).convert(i)}{let s=this.toSharp().extract({left:t,top:r,width:o,height:l});return await n(s)}}async center_crop(t,r){if(this.width===t&&this.height===r)return this;let i=(this.width-t)/2,a=(this.height-r)/2;if(iM){let n=this.channels,o=this.toCanvas(),l=s(t,r).getContext("2d"),u=0,d=0,c=0,p=0;return i>=0?u=i:c=-i,a>=0?d=a:p=-a,l.drawImage(o,u,d,t,r,c,p,t,r),new iP(l.getImageData(0,0,t,r).data,t,r,4).convert(n)}{let s=this.toSharp();if(i>=0&&a>=0)s=s.extract({left:Math.floor(i),top:Math.floor(a),width:t,height:r});else if(i<=0&&a<=0){let n=Math.floor(-a),o=Math.floor(-i);s=s.extend({top:n,left:o,right:t-this.width-o,bottom:r-this.height-n})}else{let n=[0,0],o=0;a<0?(n[0]=Math.floor(-a),n[1]=r-this.height-n[0]):o=Math.floor(a);let l=[0,0],u=0;i<0?(l[0]=Math.floor(-i),l[1]=t-this.width-l[0]):u=Math.floor(i),s=s.extend({top:n[0],bottom:n[1],left:l[0],right:l[1]}).extract({left:u,top:o,width:t,height:r})}return await n(s)}}async toBlob(t="image/png",r=1){if(!iM)throw Error("toBlob() is only supported in browser environments.");let s=this.toCanvas();return await s.convertToBlob({type:t,quality:r})}toTensor(t="CHW"){let r=new td("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===t);else if("CHW"===t)r=r.permute(2,0,1);else throw Error(`Unsupported channel format: ${t}`);return r}toCanvas(){if(!iM)throw Error("toCanvas() is only supported in browser environments.");let t=this.clone().rgba(),r=s(t.width,t.height),n=new i(t.data,t.width,t.height);return r.getContext("2d").putImageData(n,0,0),r}split(){let{data:t,width:r,height:s,channels:i}=this,n=t.constructor,a=t.length/i,o=Array.from({length:i},()=>new n(a));for(let r=0;r<a;++r){let s=i*r;for(let n=0;n<i;++n)o[n][r]=t[s+n]}return o.map(t=>new iP(t,r,s,1))}_update(t,r,s,i=null){return this.data=t,this.width=r,this.height=s,null!==i&&(this.channels=i),this}clone(){return new iP(this.data.slice(),this.width,this.height,this.channels)}convert(t){if(this.channels===t)return this;switch(t){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(t){if(iM){if(H.IS_WEBWORKER_ENV)throw Error("Unable to save an image from a Web Worker.");let r=t.split(".").pop().toLowerCase(),s=iB.get(r)??"image/png",i=await this.toBlob(s),n=URL.createObjectURL(i),a=document.createElement("a");a.href=n,a.download=t,a.click(),a.remove()}else if(Z.useFS){let r=this.toSharp();return await r.toFile(t)}else throw Error("Unable to save the image because filesystem is disabled in this environment.")}toSharp(){if(iM)throw Error("toSharp() is only supported in server-side environments.");return l($)(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}iP.read.bind(iP);class iR extends ee{_call(t,r){throw Error("StoppingCriteria needs to be subclassed")}}class iD extends ee{constructor(){super(),this.criteria=[]}push(t){this.criteria.push(t)}extend(t){t instanceof iD?t=t.criteria:t instanceof iR&&(t=[t]),this.criteria.push(...t)}_call(t,r){let s=Array(t.length).fill(!1);for(let i of this.criteria){let n=i(t,r);for(let t=0;t<s.length;++t)s[t]||=n[t]}return s}[Symbol.iterator](){return this.criteria.values()}}class iL extends iR{constructor(t,r=null){super(),this.max_length=t,this.max_position_embeddings=r}_call(t){return t.map(t=>t.length>=this.max_length)}}class iN extends iR{constructor(t){super(),Array.isArray(t)||(t=[t]),this.eos_token_id=t}_call(t,r){return t.map(t=>{let r=t.at(-1);return this.eos_token_id.some(t=>r==t)})}}class iU extends ee{constructor(t){super(),this.generation_config=t}async _call(t){return this.sample(t)}async sample(t){throw Error("sample should be implemented in subclasses.")}getLogits(t,r){let s=t.dims.at(-1),i=t.data;if(-1===r)i=i.slice(-s);else{let t=r*s;i=i.slice(t,t+s)}return i}randomSelect(t){let r=0;for(let s=0;s<t.length;++s)r+=t[s];let s=Math.random()*r;for(let r=0;r<t.length;++r)if((s-=t[r])<=0)return r;return 0}static getSampler(t){if(t.do_sample)return new iq(t);if(t.num_beams>1)return new iV(t);if(t.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${t.num_return_sequences}.`);return new iF(t)}}class iF extends iU{async sample(t){return[[BigInt(eZ(t.data)[1]),0]]}}class iq extends iU{async sample(t){let r=t.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));let[s,i]=await tf(t,r),n=eY(s.data);return Array.from({length:this.generation_config.num_beams},()=>{let t=this.randomSelect(n);return[i.data[t],Math.log(n[t])]})}}class iV extends iU{async sample(t){let r=t.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));let[s,i]=await tf(t,r),n=eY(s.data);return Array.from({length:this.generation_config.num_beams},(t,r)=>[i.data[r],Math.log(n[r])])}}class ij extends iA{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}const iG={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9},iW=new Map,iH=new Map,iK=new Map;async function iX(r,s,i){let n=i.config?.["transformers.js_config"]??{},a=i.device??n.device;a&&"string"!=typeof a&&(a.hasOwnProperty(s)?a=a[s]:(console.warn(`device not specified for "${s}". Using the default device.`),a=null));let o=a??(H.IS_NODE_ENV?"cpu":"wasm"),l=function(r=null){if(!r)return t;switch(r){case"auto":return e7;case"gpu":return e7.filter(t=>["webgpu","cuda","dml","webnn-gpu"].includes(t))}if(e7.includes(r))return[e9[r]??r];throw Error(`Unsupported device: "${r}". Should be one of: ${e7.join(", ")}.`)}(o),u=i.dtype??n.dtype;if("string"!=typeof u&&(u&&u.hasOwnProperty(s)?u=u[s]:(u=ip[o]??ic.fp32,console.warn(`dtype not specified for "${s}". Using the default dtype (${u}) for this device (${o}).`))),u===ic.auto){let t=n.dtype;"string"!=typeof t&&(t=t[s]),u=t&&t!==ic.auto&&ic.hasOwnProperty(t)?t:ip[o]??ic.fp32}let d=u;if(ih.hasOwnProperty(d)){if(d===ic.fp16&&"webgpu"===o&&!await id())throw Error(`The device (${o}) does not support fp16.`)}else throw Error(`Invalid dtype: ${d}. Should be one of: ${Object.keys(ic).join(", ")}`);let c=n.kv_cache_dtype?"string"==typeof n.kv_cache_dtype?n.kv_cache_dtype:n.kv_cache_dtype[d]??"float32":void 0;if(c&&!["float32","float16"].includes(c))throw Error(`Invalid kv_cache_dtype: ${c}. Should be one of: float32, float16`);let p=ih[d],h=`${i.subfolder??""}/${s}${p}.onnx`,f={...i.session_options};f.executionProviders??=l;let m=n.free_dimension_overrides;m?f.freeDimensionOverrides??=m:o.startsWith("webnn")&&!f.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');let _=eW(r,h,!0,i),g=i.use_external_data_format??n.use_external_data_format,y=[];if(g&&(!0===g||"object"==typeof g&&g.hasOwnProperty(s)&&!0===g[s])){if(H.IS_NODE_ENV)throw Error("External data format is not yet supported in Node.js");let t=`${s}${p}.onnx_data`,n=`${i.subfolder??""}/${t}`;y.push(new Promise(async(s,a)=>{s({path:t,data:await eW(r,n,!0,i)})}))}else void 0!==f.externalData&&(y=f.externalData.map(async t=>{if("string"==typeof t.data){let s=await eW(r,t.data,!0,i);return{...t,data:s}}return t}));if(y.length>0&&(f.externalData=await Promise.all(y)),"webgpu"===o){let t=ia(i.config,{prefix:"present"});if(Object.keys(t).length>0&&!ta()){let r={};for(let s in t)r[s]="gpu-buffer";f.preferredOutputLocation=r}}return{buffer:await _,session_options:f,session_config:{dtype:d,kv_cache_dtype:c}}}async function iY(t,r,s){return Object.fromEntries(await Promise.all(Object.keys(r).map(async i=>{let{buffer:n,session_options:a,session_config:o}=await iX(t,r[i],s);return[i,await ts(n,a,o)]})))}async function iQ(t,r,s){return Object.fromEntries(await Promise.all(Object.keys(r).map(async i=>{let n=await eH(t,r[i],!1,s);return[i,n]})))}async function iZ(t,r){let s=function(t,r){let s=Object.create(null),i=[];for(let n of t.inputNames){let t=r[n];if(!(t instanceof td)){i.push(n);continue}s[n]=ta()?t.clone():t}if(i.length>0)throw Error(`An error occurred during model execution: "Missing the following inputs: ${i.join(", ")}.`);let n=Object.keys(r).length,a=t.inputNames.length;if(n>a){let s=Object.keys(r).filter(r=>!t.inputNames.includes(r));console.warn(`WARNING: Too many inputs were provided (${n} > ${a}). The following inputs will be ignored: "${s.join(", ")}".`)}return s}(t,r);try{let r=Object.fromEntries(Object.entries(s).map(([t,r])=>[t,r.ort_tensor])),i=await t.run(r);return i=function t(r){for(let s in r)ti(r[s])?r[s]=new td(r[s]):"object"==typeof r[s]&&t(r[s]);return r}(i)}catch(r){let t=Object.fromEntries(Object.entries(s).map(([t,{type:r,dims:s,data:i}])=>[t,{type:r,dims:s,data:i}]));throw console.error(`An error occurred during model execution: "${r}".`),console.error("Inputs given to model:",t),r}}function iJ(t){if(t instanceof td)return t;if(0===t.length)throw Error("items must be non-empty");if(!Array.isArray(t[0]))return new td("int64",BigInt64Array.from(t.map(t=>BigInt(t))),[1,t.length]);if(t.some(r=>r.length!==t[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new td("int64",BigInt64Array.from(t.flat().map(t=>BigInt(t))),[t.length,t[0].length])}function i0(t){return new td("bool",[t],[1])}async function i1(t,r){let{encoder_outputs:s,input_ids:i,decoder_input_ids:n,...a}=r;if(!s){let i=ea(r,t.sessions.model.inputNames);s=(await i2(t,i)).last_hidden_state}return a.input_ids=n,a.encoder_hidden_states=s,t.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(a.encoder_attention_mask=r.attention_mask),await i3(t,a,!0)}async function i2(t,r){let s=t.sessions.model,i=ea(r,s.inputNames);if(s.inputNames.includes("inputs_embeds")&&!i.inputs_embeds){if(!r.input_ids)throw Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");i.inputs_embeds=await t.encode_text({input_ids:r.input_ids})}return s.inputNames.includes("token_type_ids")&&!i.token_type_ids&&(i.token_type_ids=new td("int64",new BigInt64Array(i.input_ids.data.length),i.input_ids.dims)),await iZ(s,i)}async function i3(t,r,s=!1){let i=t.sessions[s?"decoder_model_merged":"model"],{past_key_values:n,...a}=r;if(i.inputNames.includes("use_cache_branch")&&(a.use_cache_branch=i0(!!n)),i.inputNames.includes("position_ids")&&a.attention_mask&&!a.position_ids){let r="paligemma"===t.config.model_type?1:0;a.position_ids=function(t,r=null,s=0){let{input_ids:i,inputs_embeds:n,attention_mask:a}=t,{data:o,dims:l}=i8(a,s),u=new td("int64",o,l);if(r){let t=-(i??n).dims.at(1);u=u.slice(null,[t,null])}return u}(a,n,r)}t.addPastKeyValues(a,n);let o=ea(a,i.inputNames);return await iZ(i,o)}function i4({image_token_id:t,inputs_embeds:r,image_features:s,input_ids:i,attention_mask:n}){let a=i.tolist().map(r=>r.reduce((r,s,i)=>(s==t&&r.push(i),r),[])),o=a.reduce((t,r)=>t+r.length,0),l=s.dims[0];if(o!==l)throw Error(`Image features and image tokens do not match: tokens: ${o}, features ${l}`);let u=0;for(let t=0;t<a.length;++t){let i=a[t],n=r[t];for(let t=0;t<i.length;++t)n[i[t]].data.set(s[u++].data)}return{inputs_embeds:r,attention_mask:n}}async function i6(t,{input_ids:r=null,attention_mask:s=null,pixel_values:i=null,position_ids:n=null,inputs_embeds:a=null,past_key_values:o=null,generation_config:l=null,logits_processor:u=null,...d}){if(!a){if(a=await t.encode_text({input_ids:r,...d}),i&&1!==r.dims[1]){let n=await t.encode_image({pixel_values:i,...d});({inputs_embeds:a,attention_mask:s}=t._merge_input_ids_with_image_features({image_features:n,inputs_embeds:a,input_ids:r,attention_mask:s}))}else if(o&&i&&1===r.dims[1]){let t=r.dims[1],i=Object.values(o)[0].dims.at(-2);s=tb([tS([r.dims[0],i]),s.slice(null,[s.dims[1]-t,s.dims[1]])],1)}}if(!n&&"qwen2_vl"===t.config.model_type){let{image_grid_thw:i,video_grid_thw:a}=d;[n]=t.get_rope_index(r,i,a,s)}return await i3(t,{inputs_embeds:a,past_key_values:o,attention_mask:s,position_ids:n,generation_config:l,logits_processor:u},!0)}function i8(t,r=0){let[s,i]=t.dims,n=t.data,a=new BigInt64Array(n.length);for(let t=0;t<s;++t){let s=t*i,o=BigInt(r);for(let t=0;t<i;++t){let r=s+t;0n===n[r]?a[r]=BigInt(1):(a[r]=o,o+=n[r])}}return{data:a,dims:t.dims}}function i5(t,r,s,i){if(s.past_key_values){let r=Object.values(s.past_key_values)[0].dims.at(-2),{input_ids:i,attention_mask:n}=s;if(n&&n.dims[1]>i.dims[1]);else if(r<i.dims[1])s.input_ids=i.slice(null,[r,null]);else if(null!=t.config.image_token_index&&i.data.some(r=>r==t.config.image_token_index)){let n=t.config.num_image_tokens;if(!n)throw Error("`num_image_tokens` is missing in the model configuration.");let a=i.dims[1]-(r-n);s.input_ids=i.slice(null,[-a,null]),s.attention_mask=tS([1,r+a])}}return s}function i9(t,r,s,i){return s.past_key_values&&(r=r.map(t=>[t.at(-1)])),{...s,decoder_input_ids:iJ(r)}}function i7(t,...r){return t.config.is_encoder_decoder?i9(t,...r):i5(t,...r)}function ne(t,r,s,i){let n=!!s.past_key_values;return null!==i.guidance_scale&&i.guidance_scale>1&&(n?s.input_ids=tb([s.input_ids,s.input_ids],0):(s.input_ids=tb([s.input_ids,tE(s.input_ids,BigInt(i.pad_token_id))],0),s.attention_mask=tb([s.attention_mask,tE(s.attention_mask,0n)],0))),(n||!s.pixel_values)&&(s.pixel_values=tk([0,0,3,384,384],1)),n&&(s.images_seq_mask=new td("bool",[,].fill(!0).fill(!1,0,1),[1,1]),s.images_emb_mask=new td("bool",[].fill(!1),[1,1,0])),s}class nt extends ee{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(t,r,s){super(),this.config=t,this.sessions=r,this.configs=s;let i=iK.get(this.constructor),n=iW.get(i);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,n){case iG.DecoderOnly:this.can_generate=!0,this._forward=i3,this._prepare_inputs_for_generation=i5;break;case iG.Seq2Seq:case iG.Vision2Seq:case iG.Musicgen:this.can_generate=!0,this._forward=i1,this._prepare_inputs_for_generation=i9;break;case iG.EncoderDecoder:this._forward=i1;break;case iG.ImageTextToText:this.can_generate=!0,this._forward=i6,this._prepare_inputs_for_generation=i7;break;case iG.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=i7;break;case iG.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=ne;break;default:this._forward=i2}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){let t=[];for(let r of Object.values(this.sessions))r?.handler?.dispose&&t.push(r.handler.dispose());return await Promise.all(t)}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main",model_file_name:o=null,subfolder:l="onnx",device:u=null,dtype:d=null,use_external_data_format:c=null,session_options:p={}}={}){let h,f={progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a,model_file_name:o,subfolder:l,device:u,dtype:d,use_external_data_format:c,session_options:p},m=iK.get(this),_=iW.get(m);if(s=f.config=await il.from_pretrained(t,f),_===iG.DecoderOnly)h=await Promise.all([iY(t,{model:f.model_file_name??"model"},f),iQ(t,{generation_config:"generation_config.json"},f)]);else if(_===iG.Seq2Seq||_===iG.Vision2Seq)h=await Promise.all([iY(t,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},f),iQ(t,{generation_config:"generation_config.json"},f)]);else if(_===iG.MaskGeneration)h=await Promise.all([iY(t,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},f)]);else if(_===iG.EncoderDecoder)h=await Promise.all([iY(t,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},f)]);else if(_===iG.ImageTextToText){let r={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};s.is_encoder_decoder&&(r.model="encoder_model"),h=await Promise.all([iY(t,r,f),iQ(t,{generation_config:"generation_config.json"},f)])}else if(_===iG.Musicgen)h=await Promise.all([iY(t,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},f),iQ(t,{generation_config:"generation_config.json"},f)]);else if(_===iG.MultiModality)h=await Promise.all([iY(t,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},f),iQ(t,{generation_config:"generation_config.json"},f)]);else if(_===iG.Phi3V)h=await Promise.all([iY(t,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},f),iQ(t,{generation_config:"generation_config.json"},f)]);else{if(_!==iG.EncoderOnly){let t=m??s?.model_type;"custom"!==t&&console.warn(`Model type for '${t}' not found, assuming encoder-only architecture. Please report this at ${rv}.`)}h=await Promise.all([iY(t,{model:f.model_file_name??"model"},f)])}return new this(s,...h)}async _call(t){return await this.forward(t)}async forward(t){return await this._forward(this,t)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(t){let r=new ig;return null!==t.temperature&&1!==t.temperature&&r.push(new iT(t.temperature)),null!==t.top_k&&0!==t.top_k&&r.push(new iC(t.top_k)),null!==t.top_p&&t.top_p<1&&r.push(new iI(t.top_p)),r}_get_logits_processor(t,r,s=null){let i=new ig;if(null!==t.repetition_penalty&&1!==t.repetition_penalty&&i.push(new i$(t.repetition_penalty)),null!==t.no_repeat_ngram_size&&t.no_repeat_ngram_size>0&&i.push(new iv(t.no_repeat_ngram_size)),null!==t.bad_words_ids&&i.push(new iS(t.bad_words_ids,t.eos_token_id)),null!==t.min_length&&null!==t.eos_token_id&&t.min_length>0&&i.push(new ik(t.min_length,t.eos_token_id)),null!==t.min_new_tokens&&null!==t.eos_token_id&&t.min_new_tokens>0&&i.push(new iE(r,t.min_new_tokens,t.eos_token_id)),null!==t.forced_bos_token_id&&i.push(new iy(t.forced_bos_token_id)),null!==t.forced_eos_token_id&&i.push(new iw(t.max_length,t.forced_eos_token_id)),null!==t.begin_suppress_tokens){let s=r>1||null===t.forced_bos_token_id?r:r+1;i.push(new ib(t.begin_suppress_tokens,s))}return null!==t.guidance_scale&&t.guidance_scale>1&&i.push(new iz(t.guidance_scale)),null!==s&&i.extend(s),i}_prepare_generation_config(t,r,s=iA){let i={...this.config};for(let t of["decoder","generator","text_config"])t in i&&Object.assign(i,i[t]);let n=new s(i);return Object.assign(n,this.generation_config??{}),t&&Object.assign(n,t),r&&Object.assign(n,ea(r,Object.getOwnPropertyNames(n))),n}_get_stopping_criteria(t,r=null){let s=new iD;return null!==t.max_length&&s.push(new iL(t.max_length,this.config.max_position_embeddings??null)),null!==t.eos_token_id&&s.push(new iN(t.eos_token_id)),r&&s.extend(r),s}_validate_model_class(){if(!this.can_generate){let t=iK.get(this.constructor),r=new Set,s=this.config.model_type;for(let t of[ok,oT,o$,oy]){let i=t.get(s);i&&r.add(i[0])}let i=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw r.size>0&&(i+=` Please use the following class instead: ${[...r].join(", ")}`),Error(i)}}prepare_inputs_for_generation(...t){return this._prepare_inputs_for_generation(this,...t)}_update_model_kwargs_for_generation({generated_input_ids:t,outputs:r,model_inputs:s,is_encoder_decoder:i}){return s.past_key_values=this.getPastKeyValues(r,s.past_key_values),s.input_ids=new td("int64",t.flat(),[t.length,1]),i||(s.attention_mask=tb([s.attention_mask,tS([s.attention_mask.dims[0],1])],1)),s.position_ids=null,s}_prepare_model_inputs({inputs:t,bos_token_id:r,model_kwargs:s}){let i=ea(s,this.forward_params),n=this.main_input_name;if(n in i){if(t)throw Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else i[n]=t;return{inputs_tensor:i[n],model_inputs:i,model_input_name:n}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:t,model_inputs:r,model_input_name:s,generation_config:i}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!r.inputs_embeds&&"_prepare_inputs_embeds"in this){let{input_ids:t,pixel_values:s,attention_mask:i,...n}=r,a=await this._prepare_inputs_embeds(r);r={...n,...ea(a,["inputs_embeds","attention_mask"])}}let{last_hidden_state:n}=await i2(this,r);if(null!==i.guidance_scale&&i.guidance_scale>1)n=tb([n,tE(n,0)],0),"attention_mask"in r&&(r.attention_mask=tb([r.attention_mask,tz(r.attention_mask.dims)],0));else if(r.decoder_input_ids){let t=iJ(r.decoder_input_ids).dims[0];if(t!==n.dims[0]){if(1!==n.dims[0])throw Error(`The encoder outputs have a different batch size (${n.dims[0]}) than the decoder inputs (${t}).`);n=tb(Array.from({length:t},()=>n),0)}}return r.encoder_outputs=n,r}_prepare_decoder_input_ids_for_generation({batch_size:t,model_input_name:r,model_kwargs:s,decoder_start_token_id:i,bos_token_id:n,generation_config:a}){let{decoder_input_ids:o,...l}=s;if(!(o instanceof td)){if(o)Array.isArray(o[0])||(o=Array.from({length:t},()=>o));else if(i??=n,"musicgen"===this.config.model_type)o=Array.from({length:t*this.config.decoder.num_codebooks},()=>[i]);else if(Array.isArray(i)){if(i.length!==t)throw Error(`\`decoder_start_token_id\` expcted to have length ${t} but got ${i.length}`);o=i}else o=Array.from({length:t},()=>[i]);o=iJ(o)}return s.decoder_attention_mask=tS(o.dims),{input_ids:o,model_inputs:l}}async generate({inputs:t=null,generation_config:r=null,logits_processor:s=null,stopping_criteria:i=null,streamer:n=null,...a}){let o,l;this._validate_model_class(),r=this._prepare_generation_config(r,a);let{inputs_tensor:u,model_inputs:d,model_input_name:c}=this._prepare_model_inputs({inputs:t,model_kwargs:a}),p=this.config.is_encoder_decoder;p&&("encoder_outputs"in d||(d=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:u,model_inputs:d,model_input_name:c,generation_config:r}))),p?{input_ids:o,model_inputs:d}=this._prepare_decoder_input_ids_for_generation({batch_size:d[c].dims.at(0),model_input_name:c,model_kwargs:d,decoder_start_token_id:r.decoder_start_token_id,bos_token_id:r.bos_token_id,generation_config:r}):o=d[c];let h=o.dims.at(-1);null!==r.max_new_tokens&&(r.max_length=h+r.max_new_tokens);let f=this._get_logits_processor(r,h,s),m=this._get_stopping_criteria(r,i),_=d[c].dims.at(0),g=iU.getSampler(r),y=Array(_).fill(0),w=o.tolist();n&&n.put(w);let b={};for(;;){if(d=this.prepare_inputs_for_generation(w,d,r),l=await this.forward(d),r.output_attentions&&r.return_dict_in_generate){let t=this.getAttentions(l);for(let r in t)r in b||(b[r]=[]),b[r].push(t[r])}let t=f(w,l.logits.slice(null,-1,null)),s=[];for(let r=0;r<t.dims.at(0);++r){let i=t[r];for(let[t,n]of(await g(i))){let i=BigInt(t);y[r]+=n,w[r].push(i),s.push([i]);break}}if(n&&n.put(s),m(w).every(t=>t))break;d=this._update_model_kwargs_for_generation({generated_input_ids:s,outputs:l,model_inputs:d,is_encoder_decoder:p})}n&&n.end();let x=this.getPastKeyValues(l,d.past_key_values,!0),v=new td("int64",w.flat(),[w.length,w[0].length]);if(r.return_dict_in_generate)return{sequences:v,past_key_values:x,...b};for(let t of Object.values(l))"gpu-buffer"===t.location&&t.dispose();return v}getPastKeyValues(t,r,s=!1){let i=Object.create(null);for(let n in t)if(n.startsWith("present")){let a=n.replace("present","past_key_values"),o=n.includes("encoder");if(o&&r?i[a]=r[a]:i[a]=t[n],r&&(!o||s)){let t=r[a];"gpu-buffer"===t.location&&t.dispose()}}return i}getAttentions(t){let r={};for(let s of["cross_attentions","encoder_attentions","decoder_attentions"])for(let i in t)i.startsWith(s)&&(s in r||(r[s]=[]),r[s].push(t[i]));return r}addPastKeyValues(t,r){if(r)Object.assign(t,r);else{let r=this.sessions.decoder_model_merged??this.sessions.model,s=r?.config?.kv_cache_dtype??"float32",i="float16"===s?new Uint16Array:[],n=(t[this.main_input_name]??t.attention_mask)?.dims?.[0]??1,a=ia(this.config,{batch_size:n});for(let r in a)t[r]=new td(s,i,a[r])}}async encode_image({pixel_values:t}){let r=(await iZ(this.sessions.vision_encoder,{pixel_values:t})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${r.dims[1]}).`),this.config.num_image_tokens=r.dims[1]),r}async encode_text({input_ids:t}){return(await iZ(this.sessions.embed_tokens,{input_ids:t})).inputs_embeds}}class nr{}class ns extends nt{}class ni extends nt{}class nn extends nt{}class na extends nt{}class no extends nt{}class nl extends nt{}class nu extends nt{}class nd extends nt{}class nc extends nt{}class np extends nt{}class nh extends nt{}class nf extends nt{}class nm extends nt{}class n_ extends nt{}class ng extends nt{}class ny extends nt{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class nw extends nt{}class nb extends nt{}class nx extends nt{}class nv extends nt{}class n$ extends nt{}class nk extends nt{}class nE extends nt{}class nS extends nt{}class nz extends nt{}class nT extends nt{}class nI extends nt{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class nC extends nt{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class nA extends nt{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class nM extends nt{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class nO extends nM{_merge_input_ids_with_image_features({inputs_embeds:t,image_features:r,input_ids:s,attention_mask:i}){let n=this.config.image_token_index,a=s.tolist().map(t=>t.findIndex(t=>t==n)),o=a.every(t=>-1===t),l=a.every(t=>-1!==t);if(!o&&!l)throw Error("Every input should contain either 0 or 1 image token.");if(o)return{inputs_embeds:t,attention_mask:i};let u=[],d=[];for(let s=0;s<a.length;++s){let n=a[s],o=t[s],l=r[s],c=i[s];u.push(tb([o.slice([0,n]),l,o.slice([n+1,o.dims[0]])],0)),d.push(tb([c.slice([0,n]),tS([l.dims[0]]),c.slice([n+1,c.dims[0]])],0))}return{inputs_embeds:tx(u,0),attention_mask:tx(d,0)}}}class nB extends nt{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class nP extends nt{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class nR extends nt{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class nD extends nR{async encode_image({pixel_values:t,pixel_attention_mask:r}){return(await iZ(this.sessions.vision_encoder,{pixel_values:t,pixel_attention_mask:r})).image_features}_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),s=t.image_features.view(-1,r);return i4({image_token_id:this.config.image_token_id,...t,image_features:s})}}class nL extends nt{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class nN extends nL{async forward({input_ids:t=null,attention_mask:r=null,pixel_values:s=null,image_sizes:i=null,position_ids:n=null,inputs_embeds:a=null,past_key_values:o=null,generation_config:l=null,logits_processor:u=null,...d}){if(!a){let r;if(s&&1!==t.dims[1]){if(!i)throw Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:r}=await iZ(this.sessions.vision_encoder,{pixel_values:s,image_sizes:i}))}else r=new td("float32",[],[0,this.config.normalized_config.hidden_size]);({inputs_embeds:a}=await iZ(this.sessions.prepare_inputs_embeds,{input_ids:t,image_features:r}))}return await i3(this,{inputs_embeds:a,past_key_values:o,attention_mask:r,position_ids:n,generation_config:l,logits_processor:u},!1)}}class nU extends nt{}class nF extends nt{}class nq extends nt{}class nV extends nt{}class nj extends nt{}class nG extends nt{}class nW extends nt{}class nH extends nt{}class nK extends nt{}class nX extends nt{}class nY extends nt{}class nQ extends nt{}class nZ extends nt{}class nJ extends nt{}class n0 extends nt{}class n1 extends nt{}class n2 extends nt{}class n3 extends nt{}class n4 extends nt{}class n6 extends nt{}class n8 extends nt{}class n5 extends nt{}class n9 extends nt{}class n7 extends nt{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class ae extends nt{}class at extends nt{}class ar extends nt{}class as extends nt{}class ai extends nt{}class an extends nt{}class aa extends nt{}class ao extends nt{}class al extends nt{}class au extends nt{}class ad extends nt{}class ac extends nt{}class ap extends nt{}class ah extends nt{}class af extends nt{}class am extends nt{}class a_ extends nt{}class ag extends nt{}class ay extends nt{}class aw extends nt{}class ab extends aw{async _call(t){return new av(await super._call(t))}}class ax extends nr{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class av extends nr{constructor({logits:t,pred_boxes:r,pred_masks:s}){super(),this.logits=t,this.pred_boxes=r,this.pred_masks=s}}class a$ extends nt{}class ak extends nr{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class aE extends nt{}class aS extends ax{}class az extends nt{}class aT extends nt{}class aI extends nt{}class aC extends nt{}class aA extends nt{}class aM extends nt{}class aO extends nt{}class aB extends nt{}class aP extends nt{}class aR extends nt{}class aD extends nt{}class aL extends nt{}class aN extends nt{}class aU extends nt{}class aF extends nt{}class aq extends nt{}class aV extends nt{}class aj extends nr{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class aG extends nt{}class aW extends nr{constructor({iou_scores:t,pred_masks:r}){super(),this.iou_scores=t,this.pred_masks=r}}class aH extends nt{}class aK extends nt{}class aX extends nt{}class aY extends nt{}class aQ extends nt{}class aZ extends nt{}class aJ extends nt{}class a0 extends nt{}class a1 extends nt{}class a2 extends nt{}class a3 extends nt{}class a4 extends nt{}class a6 extends nt{}class a8 extends nt{}class a5 extends nt{}class a9 extends nt{}class a7 extends a9{async _call(t){return new o8(await super._call(t))}}class oe extends nt{}class ot extends nt{}class or extends nt{}class os extends nt{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(t){let[r,s]=t.dims,i=this.config.decoder.num_codebooks,n=s-i,a=0;for(let r=0;r<t.size;++r){if(t.data[r]===this.config.decoder.pad_token_id)continue;let o=r%s-Math.floor(r/s)%i;o>0&&o<=n&&(t.data[a++]=t.data[r])}let o=Math.floor(r/i),l=a/(o*i);return new td(t.type,t.data.slice(0,a),[o,i,l])}prepare_inputs_for_generation(t,r,s){let i=structuredClone(t);for(let t=0;t<i.length;++t)for(let r=0;r<i[t].length;++r)t%this.config.decoder.num_codebooks>=r&&(i[t][r]=BigInt(this.config.decoder.pad_token_id));return null!==s.guidance_scale&&s.guidance_scale>1&&(i=i.concat(i)),super.prepare_inputs_for_generation(i,r,s)}async generate(t){let r=await super.generate(t),s=this._apply_and_filter_by_delay_pattern_mask(r).unsqueeze_(0),{audio_values:i}=await iZ(this.sessions.encodec_decode,{audio_codes:s});return i}}class oi extends nt{}class on extends nt{}class oa extends nt{}class oo extends nt{}class ol extends nt{}class ou extends nt{}class od extends nr{constructor({char_logits:t,bpe_logits:r,wp_logits:s}){super(),this.char_logits=t,this.bpe_logits=r,this.wp_logits=s}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class oc extends nt{}class op extends nt{}class oh extends nt{}class of{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main",model_file_name:o=null,subfolder:l="onnx",device:u=null,dtype:d=null,use_external_data_format:c=null,session_options:p={}}={}){let h={progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a,model_file_name:o,subfolder:l,device:u,dtype:d,use_external_data_format:c,session_options:p};if(h.config=await il.from_pretrained(t,h),!this.MODEL_CLASS_MAPPINGS)throw Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let r of this.MODEL_CLASS_MAPPINGS){let s=r.get(h.config.model_type);if(s)return await s[1].from_pretrained(t,h)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${h.config.model_type}", attempting to construct from base class.`),await nt.from_pretrained(t,h);throw Error(`Unsupported model type: ${h.config.model_type}`)}}const om=new Map([["bert",["BertModel",class extends ns{}]],["modernbert",["ModernBertModel",class extends ni{}]],["nomic_bert",["NomicBertModel",class extends nn{}]],["roformer",["RoFormerModel",class extends na{}]],["electra",["ElectraModel",class extends nl{}]],["esm",["EsmModel",class extends nh{}]],["convbert",["ConvBertModel",class extends no{}]],["camembert",["CamembertModel",class extends nu{}]],["deberta",["DebertaModel",class extends nd{}]],["deberta-v2",["DebertaV2Model",class extends nc{}]],["mpnet",["MPNetModel",class extends nm{}]],["albert",["AlbertModel",class extends ng{}]],["distilbert",["DistilBertModel",class extends np{}]],["roberta",["RobertaModel",class extends nE{}]],["xlm",["XLMModel",class extends nS{}]],["xlm-roberta",["XLMRobertaModel",class extends nz{}]],["clap",["ClapModel",class extends a5{}]],["clip",["CLIPModel",class extends nU{}]],["clipseg",["CLIPSegModel",class extends nj{}]],["chinese_clip",["ChineseCLIPModel",class extends nq{}]],["siglip",["SiglipModel",class extends nF{}]],["jina_clip",["JinaCLIPModel",class extends nV{async forward(t){let r=!t.input_ids,s=!t.pixel_values;if(r&&s)throw Error("Either `input_ids` or `pixel_values` should be provided.");if(r&&(t.input_ids=tS([t.pixel_values.dims[0],1])),s){let{image_size:r}=this.config.vision_config;t.pixel_values=tk([0,3,r,r],0)}let{text_embeddings:i,image_embeddings:n,l2norm_text_embeddings:a,l2norm_image_embeddings:o}=await super.forward(t),l={};return r||(l.text_embeddings=i,l.l2norm_text_embeddings=a),s||(l.image_embeddings=n,l.l2norm_image_embeddings=o),l}}]],["mobilebert",["MobileBertModel",class extends nf{}]],["squeezebert",["SqueezeBertModel",class extends n_{}]],["wav2vec2",["Wav2Vec2Model",class extends aX{}]],["wav2vec2-bert",["Wav2Vec2BertModel",class extends a0{}]],["unispeech",["UniSpeechModel",class extends aZ{}]],["unispeech-sat",["UniSpeechSatModel",class extends aJ{}]],["hubert",["HubertModel",class extends aX{}]],["wavlm",["WavLMModel",class extends a1{}]],["audio-spectrogram-transformer",["ASTModel",class extends nT{}]],["vits",["VitsModel",a7]],["pyannote",["PyAnnoteModel",class extends aY{}]],["wespeaker-resnet",["WeSpeakerResNetModel",class extends aQ{}]],["detr",["DetrModel",class extends aw{}]],["rt_detr",["RTDetrModel",class extends a${}]],["table-transformer",["TableTransformerModel",class extends aE{}]],["vit",["ViTModel",class extends an{}]],["ijepa",["IJepaModel",class extends aa{}]],["pvt",["PvtModel",class extends al{}]],["vit_msn",["ViTMSNModel",class extends ad{}]],["vit_mae",["ViTMAEModel",class extends au{}]],["groupvit",["GroupViTModel",class extends ac{}]],["fastvit",["FastViTModel",class extends ap{}]],["mobilevit",["MobileViTModel",class extends af{}]],["mobilevitv2",["MobileViTV2Model",class extends am{}]],["owlvit",["OwlViTModel",class extends a_{}]],["owlv2",["Owlv2Model",class extends ag{}]],["beit",["BeitModel",class extends ay{}]],["deit",["DeiTModel",class extends az{}]],["hiera",["HieraModel",class extends aT{}]],["convnext",["ConvNextModel",class extends aN{}]],["convnextv2",["ConvNextV2Model",class extends aU{}]],["dinov2",["Dinov2Model",class extends aF{}]],["dinov2_with_registers",["Dinov2WithRegistersModel",class extends aq{}]],["resnet",["ResNetModel",class extends aI{}]],["swin",["SwinModel",class extends aC{}]],["swin2sr",["Swin2SRModel",class extends aA{}]],["donut-swin",["DonutSwinModel",class extends aL{}]],["yolos",["YolosModel",class extends aV{}]],["dpt",["DPTModel",class extends aM{}]],["glpn",["GLPNModel",class extends aD{}]],["hifigan",["SpeechT5HifiGan",class extends nt{main_input_name="spectrogram"}]],["efficientnet",["EfficientNetModel",class extends or{}]],["decision_transformer",["DecisionTransformerModel",class extends ol{}]],["patchtst",["PatchTSTForPrediction",class extends op{}]],["patchtsmixer",["PatchTSMixerForPrediction",class extends oh{}]],["mobilenet_v1",["MobileNetV1Model",class extends oi{}]],["mobilenet_v2",["MobileNetV2Model",class extends on{}]],["mobilenet_v3",["MobileNetV3Model",class extends oa{}]],["mobilenet_v4",["MobileNetV4Model",class extends oo{}]],["maskformer",["MaskFormerModel",class extends aR{}]],["mgp-str",["MgpstrForSceneTextRecognition",class extends oc{async _call(t){return new od(await super._call(t))}}]]]),o_=new Map([["t5",["T5Model",class extends ny{}]],["longt5",["LongT5Model",class extends nw{}]],["mt5",["MT5Model",class extends nb{}]],["bart",["BartModel",class extends nx{}]],["mbart",["MBartModel",class extends nv{}]],["marian",["MarianModel",class extends aH{}]],["whisper",["WhisperModel",class extends nI{}]],["m2m_100",["M2M100Model",class extends aK{}]],["blenderbot",["BlenderbotModel",class extends n${}]],["blenderbot-small",["BlenderbotSmallModel",class extends nk{}]]]),og=new Map([["bloom",["BloomModel",class extends ar{}]],["jais",["JAISModel",class extends nW{}]],["gpt2",["GPT2Model",class extends nG{}]],["gptj",["GPTJModel",class extends nX{}]],["gpt_bigcode",["GPTBigCodeModel",class extends nY{}]],["gpt_neo",["GPTNeoModel",class extends nH{}]],["gpt_neox",["GPTNeoXModel",class extends nK{}]],["codegen",["CodeGenModel",class extends nQ{}]],["llama",["LlamaModel",class extends nZ{}]],["exaone",["ExaoneModel",class extends nJ{}]],["olmo",["OlmoModel",class extends n1{}]],["olmo2",["Olmo2Model",class extends n2{}]],["mobilellm",["MobileLLMModel",class extends n0{}]],["granite",["GraniteModel",class extends n3{}]],["cohere",["CohereModel",class extends n4{}]],["gemma",["GemmaModel",class extends n6{}]],["gemma2",["Gemma2Model",class extends n8{}]],["openelm",["OpenELMModel",class extends n5{}]],["qwen2",["Qwen2Model",class extends n9{}]],["phi",["PhiModel",class extends ae{}]],["phi3",["Phi3Model",class extends at{}]],["mpt",["MptModel",class extends as{}]],["opt",["OPTModel",class extends ai{}]],["mistral",["MistralModel",class extends a4{}]],["starcoder2",["Starcoder2Model",class extends a6{}]],["falcon",["FalconModel",class extends a8{}]],["stablelm",["StableLmModel",class extends ot{}]]]),oy=new Map([["speecht5",["SpeechT5ForSpeechToText",class extends a2{}]],["whisper",["WhisperForConditionalGeneration",class extends nI{_prepare_generation_config(t,r){return super._prepare_generation_config(t,r,ij)}_retrieve_init_tokens(t){let r=[t.decoder_start_token_id],s=t.language,i=t.task;if(t.is_multilingual){s||(console.warn("No language specified - defaulting to English (en)."),s="en");let n=function(t){t=t.toLowerCase();let r=rx.get(t);if(void 0===r){if(rb.has(t))r=t;else{let r=2===t.length?rb.keys():rb.values();throw Error(`Language "${t}" is not supported. Must be one of: ${JSON.stringify(r)}`)}}return r}(s),a=`<|${n}|>`;r.push(t.lang_to_id[a]),r.push(t.task_to_id[i??"transcribe"])}else if(s||i)throw Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!t.return_timestamps&&t.no_timestamps_token_id&&r.at(-1)!==t.no_timestamps_token_id?r.push(t.no_timestamps_token_id):t.return_timestamps&&r.at(-1)===t.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),r.pop()),r.filter(t=>null!=t)}async generate({inputs:t=null,generation_config:r=null,logits_processor:s=null,stopping_criteria:i=null,...n}){r=this._prepare_generation_config(r,n);let a=n.decoder_input_ids??this._retrieve_init_tokens(r);if(r.return_timestamps&&(s??=new ig).push(new ix(r,a)),r.begin_suppress_tokens&&(s??=new ig).push(new ib(r.begin_suppress_tokens,a.length)),r.return_token_timestamps){if(!r.alignment_heads)throw Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===r.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),r.output_attentions=!0,r.return_dict_in_generate=!0}let o=await super.generate({inputs:t,generation_config:r,logits_processor:s,decoder_input_ids:a,...n});return r.return_token_timestamps&&(o.token_timestamps=this._extract_token_timestamps(o,r.alignment_heads,r.num_frames)),o}_extract_token_timestamps(t,r,s=null,i=.02){if(!t.cross_attentions)throw Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==s&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let n=this.config.median_filter_width;void 0===n&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),n=7);let a=t.cross_attentions,o=Array.from({length:this.config.decoder_layers},(t,r)=>tb(a.map(t=>t[r]),2)),l=tx(r.map(([t,r])=>{if(t>=o.length)throw Error(`Layer index ${t} is out of bounds for cross attentions (length ${o.length}).`);return s?o[t].slice(null,r,null,[0,s]):o[t].slice(null,r)})).transpose(1,0,2,3),[u,d]=function(t,r=null,s=1,i=!1){let n=t.data,a=t.dims;if(null===r){let r=n.reduce((t,r)=>t+r,0)/n.length,i=Math.sqrt(n.reduce((t,s)=>t+(s-r)**2,0)/(n.length-s)),a=new td(t.type,[r],[]);return[new td(t.type,[i],[]),a]}let o=tv(t,r=tw(r,a.length),i),l=o.data,u=a.slice();u[r]=1;let d=new n.constructor(n.length/a[r]);for(let t=0;t<n.length;++t){let s=0;for(let i=a.length-1,n=t,o=1;i>=0;--i){let t=a[i];i!==r&&(s+=n%t*o,o*=u[i]),n=Math.floor(n/t)}d[s]+=(n[t]-l[s])**2}for(let t=0;t<d.length;++t)d[t]=Math.sqrt(d[t]/(a[r]-s));return i||u.splice(r,1),[new td(t.type,d,u),o]}(l,-2,0,!0),c=l.clone();for(let t=0;t<c.dims[0];++t){let r=c[t];for(let s=0;s<r.dims[0];++s){let i=r[s],a=u[t][s][0].data,o=d[t][s][0].data;for(let t=0;t<i.dims[0];++t){let r=i[t].data;for(let t=0;t<r.length;++t)r[t]=(r[t]-o[t])/a[t];r.set(function(t,r){if(r%2==0||r<=0)throw Error("Window size must be a positive odd number");let s=new t.constructor(t.length),i=new t.constructor(r),n=Math.floor(r/2);for(let r=0;r<t.length;++r){let a=0;for(let s=-n;s<=n;++s){let n=r+s;n<0?n=Math.abs(n):n>=t.length&&(n=2*(t.length-1)-n),i[a++]=t[n]}i.sort(),s[r]=i[n]}return s}(r,n))}}}let p=[tv(c,1)],h=t.sequences.dims,f=new td("float32",new Float32Array(h[0]*h[1]),h);for(let t=0;t<h[0];++t){let[r,s]=function(t){let r=t.length,s=t[0].length,i=[r+1,s+1],n=Array.from({length:i[0]},()=>Array(i[1]).fill(1/0));n[0][0]=0;let a=Array.from({length:i[0]},()=>Array(i[1]).fill(-1));for(let r=1;r<i[1];++r)for(let s=1;s<i[0];++s){let i,o;let l=n[s-1][r-1],u=n[s-1][r],d=n[s][r-1];l<u&&l<d?(i=l,o=0):u<l&&u<d?(i=u,o=1):(i=d,o=2),n[s][r]=t[s-1][r-1]+i,a[s][r]=o}for(let t=0;t<i[1];++t)a[0][t]=2;for(let t=0;t<i[0];++t)a[t][0]=1;let o=r,l=s,u=[],d=[];for(;o>0||l>0;)switch(u.push(o-1),d.push(l-1),a[o][l]){case 0:--o,--l;break;case 1:--o;break;case 2:--l;break;default:throw Error(`Internal error in dynamic time warping. Unexpected trace[${o}, ${l}]. Please file a bug report.`)}return u.reverse(),d.reverse(),[u,d]}(p[t].neg().squeeze_(0).tolist()),n=ei([1],Array.from({length:r.length-1},(t,s)=>r[s+1]-r[s])).map(t=>!!t),a=[];for(let t=0;t<n.length;++t)n[t]&&a.push(s[t]*i);f[t].data.set(a,1)}return f}}]],["moonshine",["MoonshineForConditionalGeneration",class extends nC{}]]]),ow=new Map([["speecht5",["SpeechT5ForTextToSpeech",class extends a2{async generate_speech(t,r,{threshold:s=.5,minlenratio:i=0,maxlenratio:n=20,vocoder:a=null}={}){let{encoder_outputs:o,encoder_attention_mask:l}=await i2(this,{input_ids:t}),u=o.dims[1]/this.config.reduction_factor,d=Math.floor(u*n),c=Math.floor(u*i),p=this.config.num_mel_bins,h=[],f=null,m=null,_=0;for(;;){++_;let t={use_cache_branch:i0(!!m),output_sequence:m?m.output_sequence_out:new td("float32",new Float32Array(p),[1,1,p]),encoder_attention_mask:l,speaker_embeddings:r,encoder_hidden_states:o};this.addPastKeyValues(t,f),m=await iZ(this.sessions.decoder_model_merged,t),f=this.getPastKeyValues(m,f);let{prob:i,spectrum:n}=m;if(h.push(n),_>=c&&(Array.from(i.data).filter(t=>t>=s).length>0||_>=d))break}let g=tb(h),{waveform:y}=await iZ(a.sessions.model,{spectrogram:g});return{spectrogram:g,waveform:y}}}]]]),ob=new Map([["vits",["VitsModel",a7]],["musicgen",["MusicgenForConditionalGeneration",os]]]),ox=new Map([["bert",["BertForSequenceClassification",class extends ns{async _call(t){return new oJ(await super._call(t))}}]],["modernbert",["ModernBertForSequenceClassification",class extends ni{async _call(t){return new oJ(await super._call(t))}}]],["roformer",["RoFormerForSequenceClassification",class extends na{async _call(t){return new oJ(await super._call(t))}}]],["electra",["ElectraForSequenceClassification",class extends nl{async _call(t){return new oJ(await super._call(t))}}]],["esm",["EsmForSequenceClassification",class extends nh{async _call(t){return new oJ(await super._call(t))}}]],["convbert",["ConvBertForSequenceClassification",class extends no{async _call(t){return new oJ(await super._call(t))}}]],["camembert",["CamembertForSequenceClassification",class extends nu{async _call(t){return new oJ(await super._call(t))}}]],["deberta",["DebertaForSequenceClassification",class extends nd{async _call(t){return new oJ(await super._call(t))}}]],["deberta-v2",["DebertaV2ForSequenceClassification",class extends nc{async _call(t){return new oJ(await super._call(t))}}]],["mpnet",["MPNetForSequenceClassification",class extends nm{async _call(t){return new oJ(await super._call(t))}}]],["albert",["AlbertForSequenceClassification",class extends ng{async _call(t){return new oJ(await super._call(t))}}]],["distilbert",["DistilBertForSequenceClassification",class extends np{async _call(t){return new oJ(await super._call(t))}}]],["roberta",["RobertaForSequenceClassification",class extends nE{async _call(t){return new oJ(await super._call(t))}}]],["xlm",["XLMForSequenceClassification",class extends nS{async _call(t){return new oJ(await super._call(t))}}]],["xlm-roberta",["XLMRobertaForSequenceClassification",class extends nz{async _call(t){return new oJ(await super._call(t))}}]],["bart",["BartForSequenceClassification",class extends nx{async _call(t){return new oJ(await super._call(t))}}]],["mbart",["MBartForSequenceClassification",class extends nv{async _call(t){return new oJ(await super._call(t))}}]],["mobilebert",["MobileBertForSequenceClassification",class extends nf{async _call(t){return new oJ(await super._call(t))}}]],["squeezebert",["SqueezeBertForSequenceClassification",class extends n_{async _call(t){return new oJ(await super._call(t))}}]]]),ov=new Map([["bert",["BertForTokenClassification",class extends ns{async _call(t){return new o1(await super._call(t))}}]],["modernbert",["ModernBertForTokenClassification",class extends ni{async _call(t){return new o1(await super._call(t))}}]],["roformer",["RoFormerForTokenClassification",class extends na{async _call(t){return new o1(await super._call(t))}}]],["electra",["ElectraForTokenClassification",class extends nl{async _call(t){return new o1(await super._call(t))}}]],["esm",["EsmForTokenClassification",class extends nh{async _call(t){return new o1(await super._call(t))}}]],["convbert",["ConvBertForTokenClassification",class extends no{async _call(t){return new o1(await super._call(t))}}]],["camembert",["CamembertForTokenClassification",class extends nu{async _call(t){return new o1(await super._call(t))}}]],["deberta",["DebertaForTokenClassification",class extends nd{async _call(t){return new o1(await super._call(t))}}]],["deberta-v2",["DebertaV2ForTokenClassification",class extends nc{async _call(t){return new o1(await super._call(t))}}]],["mpnet",["MPNetForTokenClassification",class extends nm{async _call(t){return new o1(await super._call(t))}}]],["distilbert",["DistilBertForTokenClassification",class extends np{async _call(t){return new o1(await super._call(t))}}]],["roberta",["RobertaForTokenClassification",class extends nE{async _call(t){return new o1(await super._call(t))}}]],["xlm",["XLMForTokenClassification",class extends nS{async _call(t){return new o1(await super._call(t))}}]],["xlm-roberta",["XLMRobertaForTokenClassification",class extends nz{async _call(t){return new o1(await super._call(t))}}]]]),o$=new Map([["t5",["T5ForConditionalGeneration",class extends ny{}]],["longt5",["LongT5ForConditionalGeneration",class extends nw{}]],["mt5",["MT5ForConditionalGeneration",class extends nb{}]],["bart",["BartForConditionalGeneration",class extends nx{}]],["mbart",["MBartForConditionalGeneration",class extends nv{}]],["marian",["MarianMTModel",class extends aH{}]],["m2m_100",["M2M100ForConditionalGeneration",class extends aK{}]],["blenderbot",["BlenderbotForConditionalGeneration",class extends n${}]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",class extends nk{}]]]),ok=new Map([["bloom",["BloomForCausalLM",class extends ar{}]],["gpt2",["GPT2LMHeadModel",class extends nG{}]],["jais",["JAISLMHeadModel",class extends nW{}]],["gptj",["GPTJForCausalLM",class extends nX{}]],["gpt_bigcode",["GPTBigCodeForCausalLM",class extends nY{}]],["gpt_neo",["GPTNeoForCausalLM",class extends nH{}]],["gpt_neox",["GPTNeoXForCausalLM",class extends nK{}]],["codegen",["CodeGenForCausalLM",class extends nQ{}]],["llama",["LlamaForCausalLM",class extends nZ{}]],["exaone",["ExaoneForCausalLM",class extends nJ{}]],["olmo",["OlmoForCausalLM",class extends n1{}]],["olmo2",["Olmo2ForCausalLM",class extends n2{}]],["mobilellm",["MobileLLMForCausalLM",class extends n0{}]],["granite",["GraniteForCausalLM",class extends n3{}]],["cohere",["CohereForCausalLM",class extends n4{}]],["gemma",["GemmaForCausalLM",class extends n6{}]],["gemma2",["Gemma2ForCausalLM",class extends n8{}]],["openelm",["OpenELMForCausalLM",class extends n5{}]],["qwen2",["Qwen2ForCausalLM",class extends n9{}]],["phi",["PhiForCausalLM",class extends ae{}]],["phi3",["Phi3ForCausalLM",class extends at{}]],["mpt",["MptForCausalLM",class extends as{}]],["opt",["OPTForCausalLM",class extends ai{}]],["mbart",["MBartForCausalLM",class extends nv{}]],["mistral",["MistralForCausalLM",class extends a4{}]],["starcoder2",["Starcoder2ForCausalLM",class extends a6{}]],["falcon",["FalconForCausalLM",class extends a8{}]],["trocr",["TrOCRForCausalLM",class extends a3{}]],["stablelm",["StableLmForCausalLM",class extends ot{}]],["phi3_v",["Phi3VForCausalLM",nN]]]),oE=new Map([["multi_modality",["MultiModalityCausalLM",class extends ou{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...t){super(...t),this._generation_mode="text"}async forward(t){let r;let s=this._generation_mode??"text";if("text"!==s&&t.past_key_values){let s=this.sessions.gen_img_embeds,i=ea({image_ids:t.input_ids},s.inputNames);r=await iZ(s,i)}else{let s=this.sessions.prepare_inputs_embeds,i=ea(t,s.inputNames);r=await iZ(s,i)}let i={...t,...r},n=await i3(this,i),a=this.sessions["text"===s?"lm_head":"gen_head"];if(!a)throw Error(`Unable to find "${a}" generation head`);let o=await iZ(a,ea(n,a.inputNames));return{...r,...n,...o}}async generate(t){return this._generation_mode="text",super.generate(t)}async generate_images(t){this._generation_mode="image";let r=(t.inputs??t[this.main_input_name]).dims[1],s=(await super.generate(t)).slice(null,[r,null]),i=this.sessions.image_decode,{decoded_image:n}=await iZ(i,{generated_tokens:s}),a=n.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),o=[];for(let t of a){let r=iP.fromTensor(t);o.push(r)}return o}}]]]),oS=new Map([["bert",["BertForMaskedLM",class extends ns{async _call(t){return new o2(await super._call(t))}}]],["modernbert",["ModernBertForMaskedLM",class extends ni{async _call(t){return new o2(await super._call(t))}}]],["roformer",["RoFormerForMaskedLM",class extends na{async _call(t){return new o2(await super._call(t))}}]],["electra",["ElectraForMaskedLM",class extends nl{async _call(t){return new o2(await super._call(t))}}]],["esm",["EsmForMaskedLM",class extends nh{async _call(t){return new o2(await super._call(t))}}]],["convbert",["ConvBertForMaskedLM",class extends no{async _call(t){return new o2(await super._call(t))}}]],["camembert",["CamembertForMaskedLM",class extends nu{async _call(t){return new o2(await super._call(t))}}]],["deberta",["DebertaForMaskedLM",class extends nd{async _call(t){return new o2(await super._call(t))}}]],["deberta-v2",["DebertaV2ForMaskedLM",class extends nc{async _call(t){return new o2(await super._call(t))}}]],["mpnet",["MPNetForMaskedLM",class extends nm{async _call(t){return new o2(await super._call(t))}}]],["albert",["AlbertForMaskedLM",class extends ng{async _call(t){return new o2(await super._call(t))}}]],["distilbert",["DistilBertForMaskedLM",class extends np{async _call(t){return new o2(await super._call(t))}}]],["roberta",["RobertaForMaskedLM",class extends nE{async _call(t){return new o2(await super._call(t))}}]],["xlm",["XLMWithLMHeadModel",class extends nS{async _call(t){return new o2(await super._call(t))}}]],["xlm-roberta",["XLMRobertaForMaskedLM",class extends nz{async _call(t){return new o2(await super._call(t))}}]],["mobilebert",["MobileBertForMaskedLM",class extends nf{async _call(t){return new o2(await super._call(t))}}]],["squeezebert",["SqueezeBertForMaskedLM",class extends n_{async _call(t){return new o2(await super._call(t))}}]]]),oz=new Map([["bert",["BertForQuestionAnswering",class extends ns{async _call(t){return new o3(await super._call(t))}}]],["roformer",["RoFormerForQuestionAnswering",class extends na{async _call(t){return new o3(await super._call(t))}}]],["electra",["ElectraForQuestionAnswering",class extends nl{async _call(t){return new o3(await super._call(t))}}]],["convbert",["ConvBertForQuestionAnswering",class extends no{async _call(t){return new o3(await super._call(t))}}]],["camembert",["CamembertForQuestionAnswering",class extends nu{async _call(t){return new o3(await super._call(t))}}]],["deberta",["DebertaForQuestionAnswering",class extends nd{async _call(t){return new o3(await super._call(t))}}]],["deberta-v2",["DebertaV2ForQuestionAnswering",class extends nc{async _call(t){return new o3(await super._call(t))}}]],["mpnet",["MPNetForQuestionAnswering",class extends nm{async _call(t){return new o3(await super._call(t))}}]],["albert",["AlbertForQuestionAnswering",class extends ng{async _call(t){return new o3(await super._call(t))}}]],["distilbert",["DistilBertForQuestionAnswering",class extends np{async _call(t){return new o3(await super._call(t))}}]],["roberta",["RobertaForQuestionAnswering",class extends nE{async _call(t){return new o3(await super._call(t))}}]],["xlm",["XLMForQuestionAnswering",class extends nS{async _call(t){return new o3(await super._call(t))}}]],["xlm-roberta",["XLMRobertaForQuestionAnswering",class extends nz{async _call(t){return new o3(await super._call(t))}}]],["mobilebert",["MobileBertForQuestionAnswering",class extends nf{async _call(t){return new o3(await super._call(t))}}]],["squeezebert",["SqueezeBertForQuestionAnswering",class extends n_{async _call(t){return new o3(await super._call(t))}}]]]),oT=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",nA]],["idefics3",["Idefics3ForConditionalGeneration",nD]]]),oI=new Map([["llava",["LlavaForConditionalGeneration",nO]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",class extends nO{}]],["moondream1",["Moondream1ForConditionalGeneration",class extends nO{}]],["florence2",["Florence2ForConditionalGeneration",class extends nB{_merge_input_ids_with_image_features({inputs_embeds:t,image_features:r,input_ids:s,attention_mask:i}){return{inputs_embeds:tb([r,t],1),attention_mask:tb([tS(r.dims.slice(0,2)),i],1)}}async _prepare_inputs_embeds({input_ids:t,pixel_values:r,inputs_embeds:s,attention_mask:i}){let n,a;if(!t&&!r)throw Error("Either `input_ids` or `pixel_values` should be provided.");return t&&(n=await this.encode_text({input_ids:t})),r&&(a=await this.encode_image({pixel_values:r})),n&&a?{inputs_embeds:s,attention_mask:i}=this._merge_input_ids_with_image_features({inputs_embeds:n,image_features:a,input_ids:t,attention_mask:i}):s=n||a,{inputs_embeds:s,attention_mask:i}}async forward({input_ids:t,pixel_values:r,attention_mask:s,decoder_input_ids:i,decoder_attention_mask:n,encoder_outputs:a,past_key_values:o,inputs_embeds:l,decoder_inputs_embeds:u}){if(l||({inputs_embeds:l,attention_mask:s}=await this._prepare_inputs_embeds({input_ids:t,pixel_values:r,inputs_embeds:l,attention_mask:s})),!a){let{last_hidden_state:t}=await i2(this,{inputs_embeds:l,attention_mask:s});a=t}if(!u){if(!i)throw Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");u=await this.encode_text({input_ids:i})}let d={inputs_embeds:u,attention_mask:n,encoder_attention_mask:s,encoder_hidden_states:a,past_key_values:o};return await i3(this,d,!0)}}]],["qwen2-vl",["Qwen2VLForConditionalGeneration",class extends n7{get_rope_index(t,r,s,i){let{vision_config:n,image_token_id:a,video_token_id:o,vision_start_token_id:l}=this.config,u=n.spatial_merge_size??2,d=[];if(r||s){let n=t.tolist();i||(i=tS(t.dims));let c=i.tolist(),p=Array.from({length:3},r=>Array.from({length:t.dims[0]},r=>Array.from({length:t.dims[1]},t=>1))),h=r?r.tolist():[],f=s?s.tolist():[],m=0,_=0;for(let t=0;t<n.length;++t){let r=n[t].filter((r,s)=>1==c[t][s]),s=r.reduce((t,r,s)=>(r==l&&t.push(s),t),[]).map(t=>r[t+1]),i=s.filter(t=>t==a).length,g=s.filter(t=>t==o).length,y=[],w=0,b=i,x=g;for(let t=0;t<s.length;++t){let t,s,i,n;let l=r.findIndex((t,r)=>r>w&&t==a),d=r.findIndex((t,r)=>r>w&&t==o),c=b>0&&-1!==l?l:r.length+1,p=x>0&&-1!==d?d:r.length+1;c<p?([s,i,n]=h[m],++m,--b,t=c):([s,i,n]=f[_],++_,--x,t=p);let[g,v,$]=[Number(s),Math.floor(Number(i)/u),Math.floor(Number(n)/u)],k=t-w,E=y.length>0?eZ(y.at(-1))[0]+1:0;y.push(Array.from({length:3*k},(t,r)=>E+r%k));let S=k+E,z=g*v*$,T=Array.from({length:z},(t,r)=>S+Math.floor(r/(v*$))),I=Array.from({length:z},(t,r)=>S+Math.floor(r/$)%v),C=Array.from({length:z},(t,r)=>S+r%$);y.push([T,I,C].flat()),w=t+z}if(w<r.length){let t=y.length>0?eZ(y.at(-1))[0]+1:0,s=r.length-w;y.push(Array.from({length:3*s},(r,i)=>t+i%s))}let v=y.reduce((t,r)=>t+r.length,0),$=Array(v),k=0;for(let t=0;t<3;++t)for(let r=0;r<y.length;++r){let s=y[r],i=s.length/3;for(let r=t*i;r<(t+1)*i;++r)$[k++]=s[r]}let E=0,S=c[t];for(let r=0;r<S.length;++r)if(1==S[r]){for(let s=0;s<3;++s)p[s][t][r]=$[s*v/3+E];++E}let z=eZ($)[0];d.push(z+1-n[t].length)}return[new td("int64",p.flat(1/0),[3,t.dims[0],t.dims[1]]),new td("int64",d,[d.length,1])]}if(i){let{data:t,dims:r}=i8(i),s=BigInt64Array.from({length:3*t.length},(r,s)=>t[s%t.length]),n=Array.from({length:r[0]},(s,i)=>eZ(t.subarray(r[1]*i,r[1]*(i+1)))[0]+1+r[1]);return[new td("int64",s,[3,...r]),new td("int64",n,[n.length,1])]}{let[r,s]=t.dims;return[new td("int64",BigInt64Array.from({length:3*r*s},(t,i)=>BigInt(Math.floor(i%s/r))),[3,...t.dims]),tz([r,1])]}}async encode_image({pixel_values:t,image_grid_thw:r}){return(await iZ(this.sessions.vision_encoder,{pixel_values:t,grid_thw:r})).image_features}_merge_input_ids_with_image_features(t){return i4({image_token_id:this.config.image_token_id,...t})}prepare_inputs_for_generation(t,r,s){if(r.attention_mask&&!r.position_ids){if(r.past_key_values){r.pixel_values=null;let t=BigInt(Object.values(r.past_key_values)[0].dims.at(-2)),s=r.rope_deltas.map(r=>t+r);r.position_ids=tx([s,s,s],0)}else[r.position_ids,r.rope_deltas]=this.get_rope_index(r.input_ids,r.image_grid_thw,r.video_grid_thw,r.attention_mask)}return r}}]],["idefics3",["Idefics3ForConditionalGeneration",nD]],["paligemma",["PaliGemmaForConditionalGeneration",class extends nP{_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),s=t.image_features.view(-1,r);return i4({image_token_id:this.config.image_token_index,...t,image_features:s})}}]]]),oC=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",nA]]]),oA=new Map([["vit",["ViTForImageClassification",class extends an{async _call(t){return new oJ(await super._call(t))}}]],["ijepa",["IJepaForImageClassification",class extends aa{async _call(t){return new oJ(await super._call(t))}}]],["pvt",["PvtForImageClassification",class extends al{async _call(t){return new oJ(await super._call(t))}}]],["vit_msn",["ViTMSNForImageClassification",class extends ad{async _call(t){return new oJ(await super._call(t))}}]],["fastvit",["FastViTForImageClassification",class extends ap{async _call(t){return new oJ(await super._call(t))}}]],["mobilevit",["MobileViTForImageClassification",class extends af{async _call(t){return new oJ(await super._call(t))}}]],["mobilevitv2",["MobileViTV2ForImageClassification",class extends am{async _call(t){return new oJ(await super._call(t))}}]],["beit",["BeitForImageClassification",class extends ay{async _call(t){return new oJ(await super._call(t))}}]],["deit",["DeiTForImageClassification",class extends az{async _call(t){return new oJ(await super._call(t))}}]],["hiera",["HieraForImageClassification",class extends aT{async _call(t){return new oJ(await super._call(t))}}]],["convnext",["ConvNextForImageClassification",class extends aN{async _call(t){return new oJ(await super._call(t))}}]],["convnextv2",["ConvNextV2ForImageClassification",class extends aU{async _call(t){return new oJ(await super._call(t))}}]],["dinov2",["Dinov2ForImageClassification",class extends aF{async _call(t){return new oJ(await super._call(t))}}]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",class extends aq{async _call(t){return new oJ(await super._call(t))}}]],["resnet",["ResNetForImageClassification",class extends aI{async _call(t){return new oJ(await super._call(t))}}]],["swin",["SwinForImageClassification",class extends aC{async _call(t){return new oJ(await super._call(t))}}]],["segformer",["SegformerForImageClassification",class extends oe{}]],["efficientnet",["EfficientNetForImageClassification",class extends or{async _call(t){return new oJ(await super._call(t))}}]],["mobilenet_v1",["MobileNetV1ForImageClassification",class extends oi{async _call(t){return new oJ(await super._call(t))}}]],["mobilenet_v2",["MobileNetV2ForImageClassification",class extends on{async _call(t){return new oJ(await super._call(t))}}]],["mobilenet_v3",["MobileNetV3ForImageClassification",class extends oa{async _call(t){return new oJ(await super._call(t))}}]],["mobilenet_v4",["MobileNetV4ForImageClassification",class extends oo{async _call(t){return new oJ(await super._call(t))}}]]]),oM=new Map([["detr",["DetrForObjectDetection",class extends aw{async _call(t){return new ax(await super._call(t))}}]],["rt_detr",["RTDetrForObjectDetection",class extends a${async _call(t){return new ak(await super._call(t))}}]],["table-transformer",["TableTransformerForObjectDetection",class extends aE{async _call(t){return new aS(await super._call(t))}}]],["yolos",["YolosForObjectDetection",class extends aV{async _call(t){return new aj(await super._call(t))}}]]]),oO=new Map([["owlvit",["OwlViTForObjectDetection",class extends a_{}]],["owlv2",["Owlv2ForObjectDetection",class extends ag{}]]]),oB=new Map([["detr",["DetrForSegmentation",ab]],["clipseg",["CLIPSegForImageSegmentation",class extends nj{}]]]),oP=new Map([["segformer",["SegformerForSemanticSegmentation",class extends oe{}]],["sapiens",["SapiensForSemanticSegmentation",class extends aB{}]]]),oR=new Map([["detr",["DetrForSegmentation",ab]],["maskformer",["MaskFormerForInstanceSegmentation",class extends aR{}]]]),oD=new Map([["sam",["SamModel",class extends aG{async get_image_embeddings({pixel_values:t}){return await i2(this,{pixel_values:t})}async forward(t){if(t.image_embeddings&&t.image_positional_embeddings||(t={...t,...await this.get_image_embeddings(t)}),!t.input_labels&&t.input_points){let r=t.input_points.dims.slice(0,-1),s=r.reduce((t,r)=>t*r,1);t.input_labels=new td("int64",new BigInt64Array(s).fill(1n),r)}let r={image_embeddings:t.image_embeddings,image_positional_embeddings:t.image_positional_embeddings};return t.input_points&&(r.input_points=t.input_points),t.input_labels&&(r.input_labels=t.input_labels),t.input_boxes&&(r.input_boxes=t.input_boxes),await iZ(this.sessions.prompt_encoder_mask_decoder,r)}async _call(t){return new aW(await super._call(t))}}]]]),oL=new Map([["wav2vec2",["Wav2Vec2ForCTC",class extends aX{async _call(t){return new o4(await super._call(t))}}]],["wav2vec2-bert",["Wav2Vec2BertForCTC",class extends a0{async _call(t){return new o4(await super._call(t))}}]],["unispeech",["UniSpeechForCTC",class extends aZ{async _call(t){return new o4(await super._call(t))}}]],["unispeech-sat",["UniSpeechSatForCTC",class extends aJ{async _call(t){return new o4(await super._call(t))}}]],["wavlm",["WavLMForCTC",class extends a1{async _call(t){return new o4(await super._call(t))}}]],["hubert",["HubertForCTC",class extends aX{async _call(t){return new o4(await super._call(t))}}]]]),oN=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",class extends aX{async _call(t){return new oJ(await super._call(t))}}]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",class extends a0{async _call(t){return new oJ(await super._call(t))}}]],["unispeech",["UniSpeechForSequenceClassification",class extends aZ{async _call(t){return new oJ(await super._call(t))}}]],["unispeech-sat",["UniSpeechSatForSequenceClassification",class extends aJ{async _call(t){return new oJ(await super._call(t))}}]],["wavlm",["WavLMForSequenceClassification",class extends a1{async _call(t){return new oJ(await super._call(t))}}]],["hubert",["HubertForSequenceClassification",class extends aX{async _call(t){return new oJ(await super._call(t))}}]],["audio-spectrogram-transformer",["ASTForAudioClassification",class extends nT{}]]]),oU=new Map([["wavlm",["WavLMForXVector",class extends a1{async _call(t){return new o0(await super._call(t))}}]]]),oF=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",class extends aJ{async _call(t){return new o1(await super._call(t))}}]],["wavlm",["WavLMForAudioFrameClassification",class extends a1{async _call(t){return new o1(await super._call(t))}}]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",class extends aX{async _call(t){return new o1(await super._call(t))}}]],["pyannote",["PyAnnoteForAudioFrameClassification",class extends aY{async _call(t){return new o1(await super._call(t))}}]]]),oq=new Map([["vitmatte",["VitMatteForImageMatting",class extends ah{async _call(t){return new o6(await super._call(t))}}]]]),oV=new Map([["patchtst",["PatchTSTForPrediction",class extends op{}]],["patchtsmixer",["PatchTSMixerForPrediction",class extends oh{}]]]),oj=new Map([["swin2sr",["Swin2SRForImageSuperResolution",class extends aA{}]]]),oG=new Map([["dpt",["DPTForDepthEstimation",class extends aM{}]],["depth_anything",["DepthAnythingForDepthEstimation",class extends aO{}]],["glpn",["GLPNForDepthEstimation",class extends aD{}]],["sapiens",["SapiensForDepthEstimation",class extends aB{}]],["depth_pro",["DepthProForDepthEstimation",class extends aP{}]]]),oW=new Map([["sapiens",["SapiensForNormalEstimation",class extends aB{}]]]),oH=new Map([["vitpose",["VitPoseForPoseEstimation",class extends ao{}]]]),oK=new Map([["clip",["CLIPVisionModelWithProjection",class extends nU{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}]],["siglip",["SiglipVisionModel",class extends nU{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}]],["jina_clip",["JinaCLIPVisionModel",class extends nV{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}]]]),oX=[[om,iG.EncoderOnly],[o_,iG.EncoderDecoder],[og,iG.DecoderOnly],[ox,iG.EncoderOnly],[ov,iG.EncoderOnly],[o$,iG.Seq2Seq],[oy,iG.Seq2Seq],[ok,iG.DecoderOnly],[oE,iG.MultiModality],[oS,iG.EncoderOnly],[oz,iG.EncoderOnly],[oT,iG.Vision2Seq],[oI,iG.ImageTextToText],[oA,iG.EncoderOnly],[oB,iG.EncoderOnly],[oR,iG.EncoderOnly],[oP,iG.EncoderOnly],[oq,iG.EncoderOnly],[oV,iG.EncoderOnly],[oj,iG.EncoderOnly],[oG,iG.EncoderOnly],[oW,iG.EncoderOnly],[oH,iG.EncoderOnly],[oM,iG.EncoderOnly],[oO,iG.EncoderOnly],[oD,iG.MaskGeneration],[oL,iG.EncoderOnly],[oN,iG.EncoderOnly],[ow,iG.Seq2Seq],[ob,iG.EncoderOnly],[oU,iG.EncoderOnly],[oF,iG.EncoderOnly],[oK,iG.EncoderOnly]];for(const[t,r]of oX)for(const[s,i]of t.values())iW.set(s,r),iK.set(i,s),iH.set(s,i);for(const[t,r,s]of[["MusicgenForConditionalGeneration",os,iG.Musicgen],["Phi3VForCausalLM",nN,iG.Phi3V],["CLIPTextModelWithProjection",class extends nU{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}},iG.EncoderOnly],["SiglipTextModel",class extends nF{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}},iG.EncoderOnly],["JinaCLIPTextModel",class extends nV{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}},iG.EncoderOnly],["ClapTextModelWithProjection",class extends a5{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}},iG.EncoderOnly],["ClapAudioModelWithProjection",class extends a5{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"audio_model"})}},iG.EncoderOnly]])iW.set(t,s),iK.set(r,t),iH.set(t,r);class oY extends of{static MODEL_CLASS_MAPPINGS=oX.map(t=>t[0]);static BASE_IF_FAIL=!0}class oQ extends of{static MODEL_CLASS_MAPPINGS=[ox]}class oZ extends of{static MODEL_CLASS_MAPPINGS=[o$]}class oJ extends nr{constructor({logits:t}){super(),this.logits=t}}class o0 extends nr{constructor({logits:t,embeddings:r}){super(),this.logits=t,this.embeddings=r}}class o1 extends nr{constructor({logits:t}){super(),this.logits=t}}class o2 extends nr{constructor({logits:t}){super(),this.logits=t}}class o3 extends nr{constructor({start_logits:t,end_logits:r}){super(),this.start_logits=t,this.end_logits=r}}class o4 extends nr{constructor({logits:t}){super(),this.logits=t}}class o6 extends nr{constructor({alphas:t}){super(),this.alphas=t}}class o8 extends nr{constructor({waveform:t,spectrogram:r}){super(),this.waveform=t,this.spectrogram=r}}class o5 extends ee{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;constructor(t,r){super(),this.config=t,this.components=r}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(t,r={}){if(!this.tokenizer)throw Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(t,{tokenize:!1,...r})}batch_decode(...t){if(!this.tokenizer)throw Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...t)}async _call(t,...r){for(let s of[this.image_processor,this.feature_extractor,this.tokenizer])if(s)return s(t,...r);throw Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(t,r){let[s,i]=await Promise.all([this.uses_processor_config?eH(t,"processor_config.json",!0,r):{},Promise.all(this.classes.filter(t=>t in this).map(async s=>{let i=await this[s].from_pretrained(t,r);return[s.replace(/_class$/,""),i]})).then(Object.fromEntries)]);return new this(s,i)}}var o9={},o7={};function le(t,r,s=0,i=null){let n=t/r,a=function(t){let r=Math.round(t);return Math.abs(t)%1==.5?r%2==0?r:r-1:r}(n)*r;return null!==i&&a>i&&(a=Math.floor(n)*r),a<s&&(a=Math.ceil(n)*r),a}function lt([t,r],s){return[Math.max(Math.floor(t/s),1)*s,Math.max(Math.floor(r/s),1)*s]}function lr(t,r=.5,s=null,i=!1){let n=t.logits,a=t.pred_boxes,[o,l,u]=n.dims;if(null!==s&&s.length!==o)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let d=[];for(let t=0;t<o;++t){let o=null!==s?s[t]:null,c={boxes:[],classes:[],scores:[]},p=n[t],h=a[t];for(let t=0;t<l;++t){let s,n=p[t],a=[];if(i){s=n.sigmoid().data;for(let t=0;t<s.length;++t)s[t]>r&&a.push(t)}else{let t=eZ(n.data)[1];if(t===u-1||(s=eY(n.data))[t]<r)continue;a.push(t)}for(let r of a){let i=h[t].data;i=function([t,r,s,i]){return[t-s/2,r-i/2,t+s/2,r+i/2]}(i),null!==o&&(i=i.map((t,r)=>t*o[(r+1)%2])),c.boxes.push(i),c.classes.push(r),c.scores.push(s[r])}}d.push(c)}return d}function ls(t,r=.5,s=.5,i=.8,n=null,a=null){null===n&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),n=new Set);let o=t.class_queries_logits??t.logits,l=(t.masks_queries_logits??t.pred_masks).sigmoid(),[u,d,c]=o.dims;if(c-=1,null!==a&&a.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let p=[];for(let t=0;t<u;++t){let u=null!==a?a[t]:null,d=o[t],h=l[t],[f,m,_]=function(t,r,s,i){let n=[],a=[],o=[];for(let l=0;l<t.dims[0];++l){let u=t[l],d=r[l],c=eZ(u.data)[1];if(c===i)continue;let p=eY(u.data)[c];p>s&&(n.push(d),a.push(p),o.push(c))}return[n,a,o]}(d,h,r,c);if(0===_.length){let[t,r]=u??h.dims.slice(-2),s=new td("int32",new Int32Array(t*r).fill(-1),[t,r]);p.push({segmentation:s,segments_info:[]});continue}let[g,y]=function(t,r,s,i,n,a=null,o=null){let[l,u]=o??t[0].dims,d=new td("int32",new Int32Array(l*u),[l,u]),c=[];if(null!==o)for(let r=0;r<t.length;++r)t[r]=tc(t[r],o,"bilinear",!1);let p=new Int32Array(t[0].data.length),h=new Float32Array(t[0].data.length);for(let s=0;s<t.length;++s){let i=r[s],n=t[s].data;for(let t=0;t<n.length;++t)n[t]*=i,n[t]>h[t]&&(p[t]=s,h[t]=n[t])}let f=0,m=d.data;for(let a=0;a<s.length;++a){let o=s[a],[l,u]=function(t,r,s,i=.5,n=.8){let a=[],o=0,l=0,u=r[s].data;for(let r=0;r<t.length;++r)t[r]===s&&(a.push(r),++o),u[r]>=i&&++l;let d=o>0&&l>0;return d&&(d=o/l>n),[d,a]}(p,t,a,i,n);if(l){for(let t of(++f,u))m[t]=f;c.push({id:f,label_id:o,score:r[a]})}}return[d,c]}(f,m,_,s,i,n,u);p.push({segmentation:g,segments_info:y})}return p}function li(t,r=.5,s=null){throw Error("`post_process_instance_segmentation` is not yet implemented.")}d(o7,"Florence2Processor",()=>uL);class ln extends ee{constructor(t){super(),this.image_mean=t.image_mean??t.mean,this.image_std=t.image_std??t.std,this.resample=t.resample??2,this.do_rescale=t.do_rescale??!0,this.rescale_factor=t.rescale_factor??1/255,this.do_normalize=t.do_normalize,this.do_thumbnail=t.do_thumbnail,this.size=t.size??t.image_size,this.do_resize=t.do_resize??void 0!==this.size,this.size_divisibility=t.size_divisibility??t.size_divisor,this.do_center_crop=t.do_center_crop,this.crop_size=t.crop_size,this.do_convert_rgb=t.do_convert_rgb??!0,this.do_crop_margin=t.do_crop_margin,this.pad_size=t.pad_size,this.do_pad=t.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=t.do_flip_channel_order??!1,this.config=t}async thumbnail(t,r,s=2){let i=t.height,n=t.width,a=r.height,o=r.width,l=Math.min(i,a),u=Math.min(n,o);return l===i&&u===n?t:(i>n?u=Math.floor(n*l/i):n>i&&(l=Math.floor(i*u/n)),await t.resize(u,l,{resample:s}))}async crop_margin(t,r=200){let s=t.clone().grayscale(),i=eQ(s.data)[0],n=eZ(s.data)[0]-i;if(0===n)return t;let a=r/255,o=s.width,l=s.height,u=0,d=0,c=s.data;for(let t=0;t<s.height;++t){let r=t*s.width;for(let p=0;p<s.width;++p)(c[r+p]-i)/n<a&&(o=Math.min(o,p),l=Math.min(l,t),u=Math.max(u,p),d=Math.max(d,t))}return t=await t.crop([o,l,u,d])}pad_image(t,r,s,{mode:i="constant",center:n=!1,constant_values:a=0}={}){let o,l;let[u,d,c]=r;if("number"==typeof s?(o=s,l=s):"square"===s?o=l=Math.max(u,d):(o=s.width,l=s.height),o!==d||l!==u){let s=new Float32Array(o*l*c);if(Array.isArray(a))for(let t=0;t<s.length;++t)s[t]=a[t%c];else 0!==a&&s.fill(a);let[p,h]=n?[Math.floor((o-d)/2),Math.floor((l-u)/2)]:[0,0];for(let r=0;r<u;++r){let i=(r+h)*o,n=r*d;for(let r=0;r<d;++r){let a=(i+r+p)*c,o=(n+r)*c;for(let r=0;r<c;++r)s[a+r]=t[o+r]}}if("symmetric"===i){if(n)throw Error("`center` padding is not supported when `mode` is set to `symmetric`.");let r=u-1,i=d-1;for(let n=0;n<l;++n){let a=n*o,l=en(n,r)*d;for(let r=0;r<o;++r){if(n<u&&r<d)continue;let o=(a+r)*c,p=(l+en(r,i))*c;for(let r=0;r<c;++r)s[o+r]=t[p+r]}}}t=s,r=[l,o,c]}return[t,r]}rescale(t){for(let r=0;r<t.length;++r)t[r]=this.rescale_factor*t[r]}get_resize_output_image_size(t,r){let s,i;let[n,a]=t.size;if(this.do_thumbnail){let{height:t,width:i}=r;s=Math.min(t,i)}else Number.isInteger(r)?(s=r,i=this.config.max_size??s):void 0!==r&&(s=r.shortest_edge,i=r.longest_edge);if(void 0!==s||void 0!==i){let t=void 0===s?1:Math.max(s/n,s/a),r=n*t,o=a*t,l=void 0===i?1:Math.min(i/r,i/o),u=Math.floor(Number((r*l).toFixed(2))),d=Math.floor(Number((o*l).toFixed(2)));return void 0!==this.size_divisibility&&([u,d]=lt([u,d],this.size_divisibility)),[u,d]}if(void 0!==r&&void 0!==r.width&&void 0!==r.height){let t=r.width,s=r.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let r=s/a,i=t/n;Math.abs(1-i)<Math.abs(1-r)?r=i:i=r,s=le(r*a,this.config.ensure_multiple_of),t=le(i*n,this.config.ensure_multiple_of)}return[t,s]}if(void 0!==this.size_divisibility)return lt([n,a],this.size_divisibility);if(void 0!==r.min_pixels&&void 0!==r.max_pixels){let{min_pixels:t,max_pixels:s}=r;return function(t,r,s=28,i=3136,n=1003520){if(t<s||r<s)throw Error(`height:${t} or width:${r} must be larger than factor:${s}`);if(Math.max(t,r)/Math.min(t,r)>200)throw Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(t,r)/Math.min(t,r)}`);let a=Math.round(t/s)*s,o=Math.round(r/s)*s;if(a*o>n){let i=Math.sqrt(t*r/n);a=Math.floor(t/i/s)*s,o=Math.floor(r/i/s)*s}else if(a*o<i){let n=Math.sqrt(i/(t*r));a=Math.ceil(t*n/s)*s,o=Math.ceil(r*n/s)*s}return[a,o]}(a,n,this.config.patch_size*this.config.merge_size,t,s)}throw Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(r)}`)}async resize(t){let[r,s]=this.get_resize_output_image_size(t,this.size);return await t.resize(r,s,{resample:this.resample})}async preprocess(t,{do_normalize:r=null,do_pad:s=null,do_convert_rgb:i=null,do_convert_grayscale:n=null,do_flip_channel_order:a=null}={}){this.do_crop_margin&&(t=await this.crop_margin(t));let[o,l]=t.size;if(i??this.do_convert_rgb?t=t.rgb():n&&(t=t.grayscale()),this.do_resize&&(t=await this.resize(t)),this.do_thumbnail&&(t=await this.thumbnail(t,this.size,this.resample)),this.do_center_crop){let r,s;Number.isInteger(this.crop_size)?(r=this.crop_size,s=this.crop_size):(r=this.crop_size.width,s=this.crop_size.height),t=await t.center_crop(r,s)}let u=[t.height,t.width],d=Float32Array.from(t.data),c=[t.height,t.width,t.channels];if(this.do_rescale&&this.rescale(d),r??this.do_normalize){let r=this.image_mean;Array.isArray(this.image_mean)||(r=Array(t.channels).fill(r));let s=this.image_std;if(Array.isArray(this.image_std)||(s=Array(t.channels).fill(r)),r.length!==t.channels||s.length!==t.channels)throw Error(`When set to arrays, the length of \`image_mean\` (${r.length}) and \`image_std\` (${s.length}) must match the number of channels in the image (${t.channels}).`);for(let i=0;i<d.length;i+=t.channels)for(let n=0;n<t.channels;++n)d[i+n]=(d[i+n]-r[n])/s[n]}if(s??this.do_pad){if(this.pad_size){let r=this.pad_image(d,[t.height,t.width,t.channels],this.pad_size);[d,c]=r}else if(this.size_divisibility){let[t,r]=lt([c[1],c[0]],this.size_divisibility);[d,c]=this.pad_image(d,c,{width:t,height:r})}}if(a??this.do_flip_channel_order){if(3!==c[2])throw Error("Flipping channel order is only supported for RGB images.");for(let t=0;t<d.length;t+=3){let r=d[t];d[t]=d[t+2],d[t+2]=r}}return{original_size:[l,o],reshaped_input_size:u,pixel_values:new td("float32",d,c).permute(2,0,1)}}async _call(t,...r){Array.isArray(t)||(t=[t]);let s=await Promise.all(t.map(t=>this.preprocess(t)));return{pixel_values:tx(s.map(t=>t.pixel_values),0),original_sizes:s.map(t=>t.original_size),reshaped_input_sizes:s.map(t=>t.reshaped_input_size)}}static async from_pretrained(t,r){return new this(await eH(t,r$,!0,r))}}var la={},lo={};d(lo,"BeitFeatureExtractor",()=>ll);class ll extends ln{}var lu={};d(lu,"BitImageProcessor",()=>ld);class ld extends ln{}var lc={};d(lc,"ChineseCLIPFeatureExtractor",()=>lp);class lp extends ln{}var lh={};d(lh,"CLIPImageProcessor",()=>lf),d(lh,"CLIPFeatureExtractor",()=>lm);class lf extends ln{}class lm extends lf{}var l_={};d(l_,"ConvNextImageProcessor",()=>lg),d(l_,"ConvNextFeatureExtractor",()=>ly);class lg extends ln{constructor(t){super(t),this.crop_pct=this.config.crop_pct??.875}async resize(t){let r=this.size?.shortest_edge;if(void 0===r)throw Error("Size dictionary must contain 'shortest_edge' key.");if(r<384){let s=Math.floor(r/this.crop_pct),[i,n]=this.get_resize_output_image_size(t,{shortest_edge:s});t=await t.resize(i,n,{resample:this.resample}),t=await t.center_crop(r,r)}else t=await t.resize(r,r,{resample:this.resample});return t}}class ly extends lg{}var lw={};d(lw,"DeiTImageProcessor",()=>lb),d(lw,"DeiTFeatureExtractor",()=>lx);class lb extends ln{}class lx extends lb{}var lv={};d(lv,"DetrImageProcessor",()=>l$),d(lv,"DetrFeatureExtractor",()=>lk);class l$ extends ln{async _call(t){let r=await super._call(t),s=tk([r.pixel_values.dims[0],64,64],1n);return{...r,pixel_mask:s}}post_process_object_detection(...t){return lr(...t)}post_process_panoptic_segmentation(...t){return ls(...t)}post_process_instance_segmentation(...t){return li(...t)}}class lk extends l${}var lE={};d(lE,"DonutImageProcessor",()=>lS),d(lE,"DonutFeatureExtractor",()=>lz);class lS extends ln{pad_image(t,r,s,i={}){let[n,a,o]=r,l=this.image_mean;Array.isArray(this.image_mean)||(l=Array(o).fill(l));let u=this.image_std;Array.isArray(u)||(u=Array(o).fill(l));let d=l.map((t,r)=>-t/u[r]);return super.pad_image(t,r,s,{center:!0,constant_values:d,...i})}}class lz extends lS{}var lT={};d(lT,"DPTImageProcessor",()=>lI),d(lT,"DPTFeatureExtractor",()=>lC);class lI extends ln{}class lC extends lI{}var lA={};d(lA,"EfficientNetImageProcessor",()=>lM);class lM extends ln{constructor(t){super(t),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(t=>t*t))}}var lO={};d(lO,"GLPNFeatureExtractor",()=>lB);class lB extends ln{}var lP={};d(lP,"Idefics3ImageProcessor",()=>lR);class lR extends ln{constructor(t){super(t),this.do_image_splitting=t.do_image_splitting??!0,this.max_image_size=t.max_image_size}get_resize_for_vision_encoder(t,r){let[s,i]=t.dims.slice(-2),n=i/s;return i>=s?s=Math.ceil((s=Math.floor((i=Math.ceil(i/r)*r)/n))/r)*r:i=Math.ceil((i=Math.floor((s=Math.ceil(s/r)*r)*n))/r)*r,{height:s,width:i}}async _call(t,{do_image_splitting:r=null,return_row_col_info:s=!1}={}){let i,n,a;if(Array.isArray(t)){if(0===t.length||!t[0])throw Error("No images provided.");i=Array.isArray(t[0])?t:[t]}else i=[[t]];let o=[],l=[],u=[],d=[],c=[];for(let t of i){let s,i=await Promise.all(t.map(t=>this.preprocess(t)));d.push(...i.map(t=>t.original_size)),c.push(...i.map(t=>t.reshaped_input_size)),i.forEach(t=>t.pixel_values.unsqueeze_(0));let{longest_edge:n}=this.max_image_size;if(r??this.do_image_splitting){let t=Array(i.length),r=Array(i.length);s=await Promise.all(i.map(async(s,i)=>{let a=this.get_resize_for_vision_encoder(s.pixel_values,n),o=await tp(s.pixel_values,{size:[a.height,a.width]}),{frames:l,num_splits_h:u,num_splits_w:d}=await this.split_image(o,this.max_image_size);return t[i]=u,r[i]=d,tb(l,0)})),l.push(t),u.push(r)}else{let t=[n,n];s=await Promise.all(i.map(r=>tp(r.pixel_values,{size:t}))),l.push(Array(i.length).fill(0)),u.push(Array(i.length).fill(0))}o.push(tb(s,0))}let p=o.length,[h,f,m,_]=o[0].dims;if(1===p)n=o[0].unsqueeze_(0),a=tk([p,h,m,_],!0);else{let t=Math.max(...o.map(t=>t.dims.at(0))),r=(a=tk([p,t,m,_],!0)).data,s=t*m*_;for(let i=0;i<p;++i){let n=o[i].dims[0];if(n<t){o[i]=tb([o[i],tk([t-n,f,m,_],0)],0);let a=i*s+n*m*_,l=(i+1)*s;r.fill(!1,a,l)}}n=tx(o,0)}return{pixel_values:n,pixel_attention_mask:a,original_sizes:d,reshaped_input_sizes:c,...s?{rows:l,cols:u}:{}}}async split_image(t,{longest_edge:r}){let s=[],[i,n]=t.dims.slice(-2),a=0,o=0;if(i>r||n>r){a=Math.ceil(i/r),o=Math.ceil(n/r);let l=Math.ceil(i/a),u=Math.ceil(n/o);for(let r=0;r<a;++r)for(let d=0;d<o;++d){let c,p,h,f;r===a-1?(p=i-l,f=i):(p=r*l,f=(r+1)*l),d===o-1?(c=n-u,h=n):(c=d*u,h=(d+1)*u);let m=[p,c],_=[f,h],g=await t_(t,m,_,[2,3]);s.push(g)}(i!==r||n!==r)&&(t=await tp(t,{size:[r,r]}))}return s.push(t),{frames:s,num_splits_h:a,num_splits_w:o}}}var lD={};d(lD,"VLMImageProcessor",()=>lL);class lL extends ln{constructor(t){super({do_pad:!0,pad_size:{width:t.image_size,height:t.image_size},...t}),this.constant_values=this.config.background_color.map(t=>t*this.rescale_factor)}pad_image(t,r,s,i){return super.pad_image(t,r,s,{constant_values:this.constant_values,center:!0,...i})}}var lN={};d(lN,"JinaCLIPImageProcessor",()=>lU);class lU extends ln{constructor(t){let{resize_mode:r,fill_color:s,interpolation:i,size:n,...a}=t;super({...a,size:"squash"===r?{width:n,height:n}:"shortest"===r?{shortest_edge:n}:{longest_edge:n},resample:"bicubic"===i?3:2,do_center_crop:!0,crop_size:n,do_normalize:!0})}}var lF={};d(lF,"LlavaOnevisionImageProcessor",()=>lq);class lq extends ln{}var lV={};d(lV,"Mask2FormerImageProcessor",()=>lH);var lj={};d(lj,"MaskFormerImageProcessor",()=>lG),d(lj,"MaskFormerFeatureExtractor",()=>lW);class lG extends ln{post_process_panoptic_segmentation(...t){return ls(...t)}post_process_instance_segmentation(...t){return li(...t)}}class lW extends lG{}class lH extends lG{}var lK={};d(lK,"MobileNetV1ImageProcessor",()=>lX),d(lK,"MobileNetV1FeatureExtractor",()=>lY);class lX extends ln{}class lY extends lX{}var lQ={};d(lQ,"MobileNetV2ImageProcessor",()=>lZ),d(lQ,"MobileNetV2FeatureExtractor",()=>lJ);class lZ extends ln{}class lJ extends lZ{}var l0={};d(l0,"MobileNetV3ImageProcessor",()=>l1),d(l0,"MobileNetV3FeatureExtractor",()=>l2);class l1 extends ln{}class l2 extends l1{}var l3={};d(l3,"MobileNetV4ImageProcessor",()=>l4),d(l3,"MobileNetV4FeatureExtractor",()=>l6);class l4 extends ln{}class l6 extends l4{}var l8={};d(l8,"MobileViTImageProcessor",()=>l5),d(l8,"MobileViTFeatureExtractor",()=>l9);class l5 extends ln{}class l9 extends l5{}var l7={};d(l7,"NougatImageProcessor",()=>ue);class ue extends lS{}var ut={};d(ut,"Owlv2ImageProcessor",()=>un);var ur={};d(ur,"OwlViTImageProcessor",()=>us),d(ur,"OwlViTFeatureExtractor",()=>ui);class us extends ln{post_process_object_detection(...t){return lr(...t)}}class ui extends us{}class un extends us{}var ua={};d(ua,"Phi3VImageProcessor",()=>uc);const uo=[2,3],{ceil:ul,floor:uu,sqrt:ud}=Math;class uc extends ln{constructor(t){super({...t,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=t.num_crops}calc_num_image_tokens_from_image_size(t,r){let{num_img_tokens:s}=this.config;return uu((uu(r/336)*uu(t/336)+1)*s+1+(uu(r/336)+1)*ud(s))}get_resize_output_image_size(t,r){let s=this._num_crops,[i,n]=t.size,a=i/n,o=1;for(;o*Math.ceil(o/a)<=s;)o+=1;let l=Math.floor(336*(o-=1)),u=Math.floor(l/a);return[l,u]}pad_image(t,r,s,i={}){let[n,a]=r,o=336*ul(n/336),l=336*ul(a/336),u=[1,1,1].map((t,r)=>(t-this.image_mean[r])/this.image_std[r]);return super.pad_image(t,r,{width:l,height:o},{center:!0,constant_values:u,...i})}async _call(t,{num_crops:r=null}={}){if(this._num_crops=r??=this.config.num_crops,r<4||ud(r)%1!=0)throw Error("num_crops must be a square number >= 4");Array.isArray(t)||(t=[t]);let s=t.length,i=await Promise.all(t.map(t=>this.preprocess(t))),n=i.map(t=>t.original_size),a=i.map(t=>t.reshaped_input_size),o=[];for(let{pixel_values:t}of i){t.unsqueeze_(0);let[s,i]=t.dims.slice(-2),n=await tp(t,{size:[336,336],mode:"bicubic"});if(r>0){let a=[],l=ud(r),u=uu(i/l),d=uu(s/l);for(let r=0;r<l;++r)for(let n=0;n<l;++n){let o,c,p,h;r===l-1?(c=s-d,h=s):(c=r*d,h=(r+1)*d),n===l-1?(o=i-u,p=i):(o=n*u,p=(n+1)*u);let f=[c,o],m=[h,p],_=await t_(t,f,m,uo);a.push(_)}let c=await tp(tb(a,0),{size:[336,336],mode:"bicubic"});o.push(tb([n,c],0))}else o.push(n)}let l=tx(o,0),u=a.map(t=>t.map(t=>336*ul(t/336)));return{pixel_values:l,original_sizes:n,reshaped_input_sizes:a,image_sizes:new td("int64",u.flat(),[s,2]),num_img_tokens:u.map(([t,r])=>this.calc_num_image_tokens_from_image_size(r,t))}}}var up={};d(up,"PvtImageProcessor",()=>uh);class uh extends ln{}var uf={};d(uf,"Qwen2VLImageProcessor",()=>um);class um extends ln{async _call(t,...r){let{pixel_values:s,original_sizes:i,reshaped_input_sizes:n}=await super._call(t,...r),a=s,{temporal_patch_size:o,merge_size:l,patch_size:u}=this.config;1===a.dims[0]&&(a=tb(Array.from({length:o},()=>a),0));let d=a.dims[0]/o,c=a.dims[1],p=Math.floor(a.dims[2]/u),h=Math.floor(a.dims[3]/u);return{pixel_values:a.view(d,o,c,Math.floor(p/l),l,u,Math.floor(h/l),l,u).permute(0,3,6,4,7,2,1,5,8).view(d*p*h,c*o*u*u),image_grid_thw:new td("int64",[d,p,h],[1,3]),original_sizes:i,reshaped_input_sizes:n}}}var u_={};d(u_,"RTDetrImageProcessor",()=>ug);class ug extends ln{post_process_object_detection(...t){return lr(...t)}}var uy={};d(uy,"SamImageProcessor",()=>uw);class uw extends ln{reshape_input_points(t,r,s,i=!1){let n=es(t=structuredClone(t));if(3===n.length)i||(n=[1,...n]),t=[t];else if(4!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let i=0;i<t.length;++i){let n=r[i],a=s[i],o=[a[0]/n[0],a[1]/n[1]];for(let r=0;r<t[i].length;++r)for(let s=0;s<t[i][r].length;++s)for(let n=0;n<t[i][r][s].length;++n)t[i][r][s][n]*=o[n%2]}return new td("float32",Float32Array.from(t.flat(1/0)),n)}add_input_labels(t,r){let s=es(t);if(2===s.length)s=[1,...s],t=[t];else if(3!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(s.some((t,s)=>t!==r.dims[s]))throw Error(`The first ${s.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new td("int64",t.flat(1/0).map(BigInt),s)}async _call(t,{input_points:r=null,input_labels:s=null,input_boxes:i=null}={}){let n=await super._call(t);if(r&&(n.input_points=this.reshape_input_points(r,n.original_sizes,n.reshaped_input_sizes)),s){if(!n.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");n.input_labels=this.add_input_labels(s,n.input_points)}return i&&(n.input_boxes=this.reshape_input_points(i,n.original_sizes,n.reshaped_input_sizes,!0)),n}async post_process_masks(t,r,s,{mask_threshold:i=0,binarize:n=!0,pad_size:a=null}={}){let o=[],l=[(a=a??this.pad_size).height,a.width];for(let a=0;a<r.length;++a){let u=r[a],d=s[a],c=await tp(t[a],{mode:"bilinear",size:l});if(c=c.slice(null,null,[0,d[0]],[0,d[1]]),c=await tp(c,{mode:"bilinear",size:u}),n){let t=c.data,r=new Uint8Array(t.length);for(let s=0;s<t.length;++s)t[s]>i&&(r[s]=1);c=new td("bool",r,c.dims)}o.push(c)}return o}generate_crop_boxes(t,r,{crop_n_layers:s=0,overlap_ratio:i=512/1500,points_per_crop:n=32,crop_n_points_downscale_factor:a=1}={}){}}var ub={};d(ub,"SegformerImageProcessor",()=>ux),d(ub,"SegformerFeatureExtractor",()=>uv);class ux extends ln{post_process_semantic_segmentation(...t){return function(t,r=null){let s=t.logits,i=s.dims[0];if(null!==r&&r.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let n=[];for(let t=0;t<i;++t){let i=null!==r?r[t]:null,a=s[t];null!==i&&(a=tc(a,i,"bilinear",!1));let[o,l]=i??a.dims.slice(-2),u=new td("int32",new Int32Array(o*l),[o,l]),d=a[0].data,c=u.data;for(let t=1;t<a.dims[0];++t){let r=a[t].data;for(let s=0;s<r.length;++s)r[s]>d[s]&&(d[s]=r[s],c[s]=t)}let p=Array(a.dims[0]);for(let t=0;t<c.length;++t){let r=c[t];p[r]=r}let h=p.filter(t=>void 0!==t);n.push({segmentation:u,labels:h})}return n}(...t)}}class uv extends ux{}var u$={};d(u$,"SiglipImageProcessor",()=>uk);class uk extends ln{}var uE={};d(uE,"Swin2SRImageProcessor",()=>uS);class uS extends ln{pad_image(t,r,s,i={}){let[n,a,o]=r;return super.pad_image(t,r,{width:a+(s-a%s)%s,height:n+(s-n%s)%s},{mode:"symmetric",center:!1,constant_values:-1,...i})}}var uz={};d(uz,"ViTImageProcessor",()=>uT),d(uz,"ViTFeatureExtractor",()=>uI);class uT extends ln{}class uI extends uT{}var uC={};d(uC,"VitMatteImageProcessor",()=>uA);class uA extends ln{async _call(t,r){Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);let s=await Promise.all(t.map(t=>this.preprocess(t))),i=await Promise.all(r.map(t=>this.preprocess(t,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:tx(s.map((t,r)=>tb([t.pixel_values,i[r].pixel_values],0)),0),original_sizes:s.map(t=>t.original_size),reshaped_input_sizes:s.map(t=>t.reshaped_input_size)}}}var uM={};d(uM,"VitPoseImageProcessor",()=>uO);class uO extends ln{post_process_pose_estimation(t,r,{threshold:s=null}={}){let i=t.tolist(),[n,a,o,l]=t.dims,u=[];for(let t=0;t<n;++t){let n=i[t],a=r[t],d=[];for(let t=0;t<a.length;++t){let r=a[t],i=[],u=[],c=[],p=r.at(-2)/l,h=r.at(-1)/o;for(let t=0;t<n.length;++t){let[r,a]=[0,0],o=0,l=-1/0,d=n[t];for(let t=0;t<d.length;++t){let s=d[t];for(let i=0;i<s.length;++i){let n=s[i];o+=n,l=Math.max(l,n),r+=(i+.5)*n,a+=t*n}}if(null!=s&&l<s)continue;let f=[p*r/o,h*a/o];i.push(f),c.push(t),u.push(l)}d.push({bbox:r,scores:u,labels:c,keypoints:i})}u.push(d)}return u}}var uB={};d(uB,"YolosImageProcessor",()=>uP),d(uB,"YolosFeatureExtractor",()=>uR);class uP extends ln{post_process_object_detection(...t){return lr(...t)}}class uR extends uP{}u(la,lo),u(la,lu),u(la,lc),u(la,lh),u(la,l_),u(la,lw),u(la,lv),u(la,lE),u(la,lT),u(la,lA),u(la,lO),u(la,lP),u(la,lD),u(la,lN),u(la,lF),u(la,lV),u(la,lj),u(la,lK),u(la,lQ),u(la,l0),u(la,l3),u(la,l8),u(la,l7),u(la,ut),u(la,ur),u(la,ua),u(la,up),u(la,uf),u(la,u_),u(la,uy),u(la,ub),u(la,u$),u(la,uE),u(la,uz),u(la,uC),u(la,uM),u(la,uB);class uD{static async from_pretrained(t,r={}){let s=await eH(t,r$,!0,r),i=s.image_processor_type??s.feature_extractor_type,n=la[i];return n||(void 0!==i&&console.warn(`Image processor type '${i}' not found, assuming base ImageProcessor. Please report this at ${rv}.`),n=ln),new n(s)}}class uL extends o5{static tokenizer_class=is;static image_processor_class=uD;constructor(t,r){super(t,r);let{tasks_answer_post_processing_type:s,task_prompts_without_inputs:i,task_prompts_with_input:n}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(s??{})),this.task_prompts_without_inputs=new Map(Object.entries(i??{})),this.task_prompts_with_input=new Map(Object.entries(n??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(t){"string"==typeof t&&(t=[t]);let r=[];for(let s of t)if(this.task_prompts_without_inputs.has(s))r.push(this.task_prompts_without_inputs.get(s));else{for(let[t,i]of this.task_prompts_with_input)if(s.includes(t)){r.push(i.replaceAll("{input}",s).replaceAll(t,""));break}r.length!==t.length&&r.push(s)}return r}post_process_generation(t,r,s){let i;let n=this.tasks_answer_post_processing_type.get(r)??"pure_text";switch(t=t.replaceAll("<s>","").replaceAll("</s>",""),n){case"pure_text":i=t;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":let a="ocr"===n?"quad_boxes":"bboxes",o=t.matchAll(this.regexes[a]),l=[],u=[];for(let[t,r,...i]of o)l.push(r?r.trim():l.at(-1)??""),u.push(i.map((t,r)=>(Number(t)+.5)/this.size_per_bin*s[r%2]));i={labels:l,[a]:u};break;default:throw Error(`Task "${r}" (of type "${n}") not yet implemented.`)}return{[r]:i}}async _call(t,r=null,s={}){if(!t&&!r)throw Error("Either text or images must be provided");let i=await this.image_processor(t,s),n=r?this.tokenizer(r,s):{};return{...i,...n}}}var uN={};d(uN,"MgpstrProcessor",()=>uF);const uU={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class uF extends o5{static tokenizer_class=is;static image_processor_class=uD;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(t,r){if(!uU.hasOwnProperty(r))throw Error(`Format ${r} is not supported.`);let[s,i]=uU[r],n=this[s].bind(this),[a,o]=t.dims,l=[],u=[],d=t.tolist();for(let t=0;t<a;++t){let r=d[t],s=[],n=[];for(let t=1;t<o;++t){let[a,o]=eZ(eY(r[t]));if(n.push(a),o==i)break;s.push(o)}let a=n.length>0?n.reduce((t,r)=>t*r,1):0;u.push(s),l.push(a)}return[n(u),l]}char_decode(t){return this.char_tokenizer.batch_decode(t).map(t=>t.replaceAll(" ",""))}bpe_decode(t){return this.bpe_tokenizer.batch_decode(t)}wp_decode(t){return this.wp_tokenizer.batch_decode(t).map(t=>t.replaceAll(" ",""))}batch_decode([t,r,s]){let[i,n]=this._decode_helper(t,"char"),[a,o]=this._decode_helper(r,"bpe"),[l,u]=this._decode_helper(s,"wp"),d=[],c=[];for(let t=0;t<i.length;++t){let[r,s]=eZ([n[t],o[t],u[t]]);d.push([i[t],a[t],l[t]][s]),c.push(r)}return{generated_text:d,scores:c,char_preds:i,bpe_preds:a,wp_preds:l}}static async from_pretrained(...t){let r=await super.from_pretrained(...t),s=await is.from_pretrained("Xenova/gpt2"),i=await is.from_pretrained("Xenova/bert-base-uncased");return r.components={image_processor:r.image_processor,char_tokenizer:r.tokenizer,bpe_tokenizer:s,wp_tokenizer:i},r}async _call(t,r=null){let s=await this.image_processor(t);return r&&(s.labels=this.tokenizer(r).input_ids),s}}var uq={};d(uq,"MoonshineProcessor",()=>dp);class uV extends ee{constructor(t){super(),this.config=t}static async from_pretrained(t,r){return new this(await eH(t,r$,!0,r))}}function uj(t,r){if(!(t instanceof Float32Array||t instanceof Float64Array))throw Error(`${r} expects input to be a Float32Array or a Float64Array, but got ${t?.constructor?.name??typeof t} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}var uG={};d(uG,"ImageFeatureExtractor",()=>ln);var uW={};async function uH(t,r){let s;if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");let i=await (await eq(t)).arrayBuffer(),n=new AudioContext({sampleRate:r});void 0===r&&console.warn(`No sampling rate provided, using default of ${n.sampleRate}Hz.`);let a=await n.decodeAudioData(i);if(2===a.numberOfChannels){let t=Math.sqrt(2),r=a.getChannelData(0),i=a.getChannelData(1);s=new Float32Array(r.length);for(let n=0;n<a.length;++n)s[n]=t*(r[n]+i[n])/2}else s=a.getChannelData(0);return s}function uK(t,r){if(t<1)return new Float64Array;if(1===t)return new Float64Array([1]);let s=1-r,i=2*Math.PI/(t-1),n=new Float64Array(t);for(let a=0;a<t;++a)n[a]=r-s*Math.cos(a*i);return n}d(uW,"ASTFeatureExtractor",()=>u3);const uX={htk:t=>2595*Math.log10(1+t/700),kaldi:t=>1127*Math.log(1+t/700),slaney:(t,r=1e3,s=15,i=27/Math.log(6.4))=>t>=r?s+Math.log(t/r)*i:3*t/200};function uY(t,r="htk"){let s=uX[r];if(!s)throw Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof t?s(t):t.map(t=>s(t))}const uQ={htk:t=>700*(10**(t/2595)-1),kaldi:t=>700*(Math.exp(t/1127)-1),slaney:(t,r=1e3,s=15,i=Math.log(6.4)/27)=>t>=s?r*Math.exp(i*(t-s)):200*t/3};function uZ(t,r,s){let i=(r-t)/(s-1);return Float64Array.from({length:s},(r,s)=>t+i*s)}function uJ(t,r,s,i,n,a=null,o="htk",l=!1){let u;if(null!==a&&"slaney"!==a)throw Error('norm must be one of null or "slaney"');let d=uZ(uY(s,o),uY(i,o),r+2),c=function(t,r="htk"){let s=uQ[r];if(!s)throw Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof t?s(t):t.map(t=>s(t))}(d,o);if(l){let r=n/(2*t);u=uY(Float64Array.from({length:t},(t,s)=>s*r),o),c=d}else u=uZ(0,Math.floor(n/2),t);let p=function(t,r){let s=Float64Array.from({length:r.length-1},(t,s)=>r[s+1]-r[s]),i=Array.from({length:t.length},()=>Array(r.length));for(let s=0;s<t.length;++s){let n=i[s];for(let i=0;i<r.length;++i)n[i]=r[i]-t[s]}let n=r.length-2,a=Array.from({length:n},()=>Array(t.length));for(let r=0;r<t.length;++r){let t=i[r];for(let i=0;i<n;++i){let n=-t[i]/s[i],o=t[i+2]/s[i+1];a[i][r]=Math.max(0,Math.min(n,o))}}return a}(u,c);if(null!==a&&"slaney"===a)for(let s=0;s<r;++s){let r=p[s],i=2/(c[s+2]-c[s]);for(let s=0;s<t;++s)r[s]*=i}return p}function u0(t,r,s,i,n){if(s<=0)throw Error("reference must be greater than zero");if(i<=0)throw Error("min_value must be greater than zero");let a=Math.log10(s=Math.max(i,s));for(let s=0;s<t.length;++s)t[s]=r*Math.log10(Math.max(i,t[s])-a);if(null!==n){if(n<=0)throw Error("db_range must be greater than zero");let r=eZ(t)[0]-n;for(let s=0;s<t.length;++s)t[s]=Math.max(t[s],r)}return t}async function u1(t,r,s,i,{fft_length:n=null,power:a=1,center:o=!0,pad_mode:l="reflect",onesided:u=!0,preemphasis:d=null,mel_filters:c=null,mel_floor:p=1e-10,log_mel:h=null,reference:f=1,min_value:m=1e-10,db_range:_=null,remove_dc_offset:g=null,min_num_frames:y=null,max_num_frames:w=null,do_pad:b=!0,transpose:x=!1}={}){let v=r.length;if(null===n&&(n=s),s>n)throw Error(`frame_length (${s}) may not be larger than fft_length (${n})`);if(v!==s)throw Error(`Length of the window (${v}) must equal frame_length (${s})`);if(i<=0)throw Error("hop_length must be greater than zero");if(null===a&&null!==c)throw Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(o){if("reflect"!==l)throw Error(`pad_mode="${l}" not implemented yet.`);let r=Math.floor((n-1)/2)+1;t=function(t,r,s){let i=new t.constructor(t.length+r+s),n=t.length-1;for(let s=0;s<t.length;++s)i[r+s]=t[s];for(let s=1;s<=r;++s)i[r-s]=t[en(s,n)];for(let a=1;a<=s;++a)i[n+r+a]=t[en(n-a,n)];return i}(t,r,r)}let $=Math.floor(1+Math.floor((t.length-s)/i));null!==y&&$<y&&($=y);let k=u?Math.floor(n/2)+1:n,E=$,S=$;null!==w&&(w>$?b&&(S=w):S=E=w);let z=new e2(n),T=new Float64Array(n),I=new Float64Array(z.outputBufferSize),C=new Float32Array(k*S);for(let n=0;n<E;++n){let a=n*i,o=Math.min(t.length-a,s);o!==s&&T.fill(0,0,s);for(let r=0;r<o;++r)T[r]=t[a+r];if(g){let t=0;for(let r=0;r<o;++r)t+=T[r];let r=t/o;for(let t=0;t<o;++t)T[t]-=r}if(null!==d){for(let t=o-1;t>=1;--t)T[t]-=d*T[t-1];T[0]*=1-d}for(let t=0;t<r.length;++t)T[t]*=r[t];z.realTransform(I,T);for(let t=0;t<k;++t){let r=t<<1;C[t*S+n]=I[r]**2+I[r+1]**2}}if(null!==a&&2!==a){let t=2/a;for(let r=0;r<C.length;++r)C[r]**=t}let A=c.length,M=await th(new td("float32",c.flat(),[A,k]),new td("float32",C,[k,S]));x&&(M=M.transpose(1,0));let O=M.data;for(let t=0;t<O.length;++t)O[t]=Math.max(p,O[t]);if(null!==a&&null!==h){let t=Math.min(O.length,E*A);switch(h){case"log":for(let r=0;r<t;++r)O[r]=Math.log(O[r]);break;case"log10":for(let r=0;r<t;++r)O[r]=Math.log10(O[r]);break;case"dB":if(1===a)!function(t,r=1,s=1e-5,i=null){u0(t,20,r,s,i)}(O,f,m,_);else if(2===a)!function(t,r=1,s=1e-10,i=null){u0(t,10,r,s,i)}(O,f,m,_);else throw Error(`Cannot use log_mel option '${h}' with power ${a}`);break;default:throw Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${h}'`)}}return M}function u2(t,r,{periodic:s=!0,frame_length:i=null,center:n=!0}={}){let a;let o=s?t+1:t;switch(r){case"boxcar":a=new Float64Array(o).fill(1);break;case"hann":case"hann_window":a=uK(o,.5);break;case"hamming":a=uK(o,.54);break;case"povey":a=uK(o,.5).map(t=>Math.pow(t,.85));break;default:throw Error(`Unknown window type ${r}.`)}if(s&&(a=a.subarray(0,t)),null===i)return a;if(t>i)throw Error(`Length of the window (${t}) may not be larger than frame_length (${i})`);return a}class u3 extends uV{constructor(t){super(t);let r=this.config.sampling_rate,s=uJ(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let t=0;t<s.length;++t)s[t].push(0);this.mel_filters=s,this.window=u2(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(t,r){return u1(t,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(t){uj(t,"ASTFeatureExtractor");let r=await this._extract_fbank_features(t,this.config.max_length);if(this.config.do_normalize){let t=2*this.std,s=r.data;for(let r=0;r<s.length;++r)s[r]=(s[r]-this.mean)/t}return{input_values:r.unsqueeze_(0)}}}var u4={};d(u4,"ClapFeatureExtractor",()=>u6);class u6 extends uV{constructor(t){super(t),this.mel_filters=uJ(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=uJ(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=u2(this.config.fft_window_size,"hann")}async _get_input_mel(t,r,s,i){let n;let a=t.length-r;if(a>0){if("rand_trunc"===s){let s=Math.floor(Math.random()*(a+1));t=t.subarray(s,s+r),n=await this._extract_fbank_features(t,this.mel_filters_slaney,this.config.nb_max_samples)}else throw Error(`Truncation strategy "${s}" not implemented`)}else{if(a<0){let s=new Float64Array(r);if(s.set(t),"repeat"===i)for(let i=t.length;i<r;i+=t.length)s.set(t.subarray(0,Math.min(t.length,r-i)),i);else if("repeatpad"===i)for(let r=t.length;r<-a;r+=t.length)s.set(t,r);t=s}if("fusion"===s)throw Error(`Truncation strategy "${s}" not implemented`);n=await this._extract_fbank_features(t,this.mel_filters_slaney,this.config.nb_max_samples)}return n.unsqueeze_(0)}async _extract_fbank_features(t,r,s=null){return u1(t,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:r,log_mel:"dB",max_num_frames:s,do_pad:!1,transpose:!0})}async _call(t,{max_length:r=null}={}){return uj(t,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(t,r??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}var u8={};d(u8,"MoonshineFeatureExtractor",()=>u5);class u5 extends uV{async _call(t){uj(t,"MoonshineFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=[1,t.length];return{input_values:new td("float32",t,r)}}}var u9={};d(u9,"PyAnnoteFeatureExtractor",()=>u7);class u7 extends uV{async _call(t){uj(t,"PyAnnoteFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=[1,1,t.length];return{input_values:new td("float32",t,r)}}samples_to_frames(t){return(t-this.config.offset)/this.config.step}post_process_speaker_diarization(t,r){let s=r/this.samples_to_frames(r)/this.config.sampling_rate,i=[];for(let r of t.tolist()){let t=[],n=-1;for(let s=0;s<r.length;++s){let[i,a]=eZ(eY(r[s])),[o,l]=[s,s+1];a!==n?(n=a,t.push({id:a,start:o,end:l,score:i})):(t.at(-1).end=l,t.at(-1).score+=i)}i.push(t.map(({id:t,start:r,end:i,score:n})=>({id:t,start:r*s,end:i*s,confidence:n/(i-r)})))}return i}}var de={};d(de,"SeamlessM4TFeatureExtractor",()=>dt);class dt extends uV{constructor(t){super(t);let r=this.config.sampling_rate,s=uJ(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let t=0;t<s.length;++t)s[t].push(0);this.mel_filters=s,this.window=u2(400,"povey",{periodic:!1})}async _extract_fbank_features(t,r){return u1(t=t.map(t=>32768*t),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(t,{padding:r=!0,pad_to_multiple_of:s=2,do_normalize_per_mel_bins:i=!0,return_attention_mask:n=!0}={}){let a;uj(t,"SeamlessM4TFeatureExtractor");let o=await this._extract_fbank_features(t,this.config.max_length);if(i){let[t,r]=o.dims,s=o.data;for(let i=0;i<r;++i){let n=0;for(let a=0;a<t;++a)n+=s[a*r+i];let a=n/t,o=0;for(let n=0;n<t;++n)o+=(s[n*r+i]-a)**2;let l=Math.sqrt((o/=t-1)+1e-7);for(let n=0;n<t;++n){let t=n*r+i;s[t]=(s[t]-a)/l}}}if(r){let[t,r]=o.dims,i=o.data,l=t%s;if(l>0){let s=new Float32Array(r*(t+l));s.set(i),s.fill(this.config.padding_value,i.length);let u=t+l;o=new td(o.type,s,[u,r]),n&&(a=new td("int64",new BigInt64Array(u),[1,u])).data.fill(1n,0,t)}}let[l,u]=o.dims,d=this.config.stride;if(0!=l%d)throw Error(`The number of frames (${l}) must be a multiple of the stride (${d}).`);let c=o.view(1,Math.floor(l/d),u*d),p={input_features:c};if(n){let t=c.dims[1],r=new BigInt64Array(t);if(a){let t=a.data;for(let s=1,i=0;s<l;s+=d,++i)r[i]=t[s]}else r.fill(1n);p.attention_mask=new td("int64",r,[1,t])}return p}}var dr={};d(dr,"SpeechT5FeatureExtractor",()=>ds);class ds extends uV{}var di={};d(di,"Wav2Vec2FeatureExtractor",()=>dn);class dn extends uV{_zero_mean_unit_var_norm(t){let r=t.reduce((t,r)=>t+r,0)/t.length,s=t.reduce((t,s)=>t+(s-r)**2,0)/t.length;return t.map(t=>(t-r)/Math.sqrt(s+1e-7))}async _call(t){uj(t,"Wav2Vec2FeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=t;this.config.do_normalize&&(r=this._zero_mean_unit_var_norm(r));let s=[1,r.length];return{input_values:new td("float32",r,s),attention_mask:new td("int64",new BigInt64Array(r.length).fill(1n),s)}}}var da={};d(da,"WeSpeakerFeatureExtractor",()=>dl);class dl extends uV{constructor(t){super(t);let r=this.config.sampling_rate,s=uJ(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let t=0;t<s.length;++t)s[t].push(0);this.mel_filters=s,this.window=u2(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(t){return u1(t=t.map(t=>32768*t),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(t){uj(t,"WeSpeakerFeatureExtractor");let r=(await this._extract_fbank_features(t)).unsqueeze_(0);if(null===this.config.fbank_centering_span){let t=r.mean(1).data,s=r.data,[i,n,a]=r.dims;for(let r=0;r<i;++r){let i=r*n*a,o=r*a;for(let r=0;r<n;++r){let n=i+r*a;for(let r=0;r<a;++r)s[n+r]-=t[o+r]}}}return{input_features:r}}}var du={};d(du,"WhisperFeatureExtractor",()=>dd);class dd extends uV{constructor(t){super(t),this.config.mel_filters??=uJ(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=u2(this.config.n_fft,"hann")}async _extract_fbank_features(t){let r=await u1(t,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),s=r.data,i=eZ(s)[0];for(let t=0;t<s.length;++t)s[t]=(Math.max(s[t],i-8)+4)/4;return r}async _call(t){let r;return uj(t,"WhisperFeatureExtractor"),t.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),r=t.slice(0,this.config.n_samples)):(r=new Float32Array(this.config.n_samples)).set(t),{input_features:(await this._extract_fbank_features(r)).unsqueeze_(0)}}}u(uG,uW),u(uG,u4),u(uG,u8),u(uG,u9),u(uG,de),u(uG,dr),u(uG,di),u(uG,da),u(uG,du);class dc{static async from_pretrained(t,r={}){let s=await eH(t,r$,!0,r),i=s.feature_extractor_type,n=uG[i];if(!n)throw Error(`Unknown feature_extractor_type: '${i}'. Please report this at ${rv}.`);return new n(s)}}class dp extends o5{static tokenizer_class=is;static feature_extractor_class=dc;async _call(t){return await this.feature_extractor(t)}}var dh={};d(dh,"Idefics3Processor",()=>df);class df extends o5{static image_processor_class=uD;static tokenizer_class=is;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(t,r=null,s={}){let i;s.return_row_col_info??=!0,r&&(i=await this.image_processor(r,s)),Array.isArray(t)||(t=[t]);let n=i.rows??[Array(t.length).fill(0)],a=i.cols??[Array(t.length).fill(0)],o=this.config.image_seq_len,l=[],u=[];for(let r=0;r<t.length;++r){let s=t[r],i=n[r],d=a[r];l.push(function(t,r){let s=0;for(let i of t)i===r&&++s;return s}(s,this.image_token));let c=i.map((t,r)=>{var s,i,n,a,l,u;return s=t,i=d[r],n=o,a=this.fake_image_token,l=this.image_token,u=this.global_img_token,0===s&&0===i?`${a}${u}`+l.repeat(n)+`${a}`:function(t,r,s,i,n,a){let o="";for(let a=0;a<r;++a){for(let r=0;r<s;++r)o+=i+`<row_${a+1}_col_${r+1}>`+n.repeat(t);o+="\n"}return o+(`
${i}${a}`+n.repeat(t))+`${i}`}(n,s,i,a,l,u)}),p=s.split(this.image_token);if(0===p.length)throw Error("The image token should be present in the text.");let h=p[0];for(let t=0;t<c.length;++t)h+=c[t]+p[t+1];u.push(h)}return{...this.tokenizer(u),...i}}}var dm={};d(dm,"VLChatProcessor",()=>d_);class d_ extends o5{static image_processor_class=uD;static tokenizer_class=is;static uses_processor_config=!0;constructor(t,r){super(t,r),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(t,{images:r=null,chat_template:s="default"}={}){r?Array.isArray(r)||(r=[r]):r=await Promise.all(t.filter(t=>t.images).flatMap(t=>t.images).map(t=>iP.read(t)));let i=this.tokenizer,n=i.apply_chat_template(t,{tokenize:!1,add_generation_prompt:!0,chat_template:s}),a=t=>i.encode(t,{add_special_tokens:!1}),o=n.split(this.image_tag),l=o.length-1;if(r.length!==l)throw Error(`Number of images provided (${r.length}) does not match number of "${this.image_tag}" image tags (${l})`);let[u,d,c]=i.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]),p=a(o[0]),h=Array(p.length).fill(!1);for(let t=1;t<o.length;++t){let r=Array(this.num_image_tokens).fill(u),s=a(o[t]);p=ei(p,[d],r,[c],s),h=ei(h,[!1],Array(this.num_image_tokens).fill(!0),[!1],Array(s.length).fill(!1))}let f=[1,p.length],m={input_ids:new td("int64",p,f),attention_mask:new td("int64",Array(p.length).fill(1),f),images_seq_mask:new td("bool",h,f),images_emb_mask:new td("bool",Array(l*this.num_image_tokens).fill(!0),[1,l,this.num_image_tokens])};if(r&&r.length>0){let t=await this.image_processor(r);return t.pixel_values.unsqueeze_(0),{...m,...t}}return m}}var dg={};d(dg,"JinaCLIPProcessor",()=>dy);class dy extends o5{static tokenizer_class=is;static image_processor_class=uD;async _call(t=null,r=null,s={}){if(!t&&!r)throw Error("Either text or images must be provided");let i=t?this.tokenizer(t,s):{},n=r?await this.image_processor(r,s):{};return{...i,...n}}}var dw={};d(dw,"OwlViTProcessor",()=>db);class db extends o5{static tokenizer_class=is;static image_processor_class=uD}var dx={};d(dx,"Phi3VProcessor",()=>dk);const dv="<|image|>",d$=/<\|image_\d+\|>/g;class dk extends o5{static image_processor_class=uD;static tokenizer_class=is;async _call(t,r=null,{padding:s=!0,truncation:i=!0,num_crops:n=null}={}){let a,o;if(Array.isArray(t)||(t=[t]),r){let{num_img_tokens:l}=o=await this.image_processor(r,{num_crops:n}),u=t.map((t,r)=>t.split(d$).join(dv.repeat(l[r])));a=this.tokenizer(u,{padding:s,truncation:i});let d=this.tokenizer.model.convert_tokens_to_ids([dv])[0];a.input_ids.map_(t=>t==d?-t:t)}else a=this.tokenizer(t);return{...a,...o}}}var dE={};d(dE,"PaliGemmaProcessor",()=>dz);const dS="<image>";class dz extends o5{static tokenizer_class=is;static image_processor_class=uD;static uses_processor_config=!1;async _call(t,r=null,s={}){let i;r||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),r=""),Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);let n=this.tokenizer.bos_token,a=this.image_processor.config.image_seq_length;r.some(t=>t.includes(dS))?i=r.map(t=>{let r=t.replaceAll(dS,dS.repeat(a)),s=r.lastIndexOf(dS),i=-1===s?0:s+dS.length;return r.slice(0,i)+n+r.slice(i)+"\n"}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),i=r.map(r=>{var s;return s=t.length,`${dS.repeat(a*s)}${n}${r}
`}));let o=this.tokenizer(i,s);return{...await this.image_processor(t,s),...o}}}var dT={};d(dT,"PyAnnoteProcessor",()=>dI);class dI extends o5{static feature_extractor_class=u7;async _call(t){return await this.feature_extractor(t)}post_process_speaker_diarization(...t){return this.feature_extractor.post_process_speaker_diarization(...t)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}var dC={};d(dC,"Qwen2VLProcessor",()=>dA);class dA extends o5{static image_processor_class=uD;static tokenizer_class=is;async _call(t,r=null,...s){let i,n;if(Array.isArray(t)||(t=[t]),r&&(n=(i=await this.image_processor(r)).image_grid_thw),n){let r=this.image_processor.config.merge_size**2,s=0,i=n.tolist();t=t.map(t=>{for(;t.includes("<|image_pad|>");){let n=Number(i[s++].reduce((t,r)=>t*r,1n));t=t.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(n/r)))}return t.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(t),...i}}}var dM={};d(dM,"SamProcessor",()=>dO);class dO extends o5{static image_processor_class=uD;async _call(...t){return await this.image_processor(...t)}post_process_masks(...t){return this.image_processor.post_process_masks(...t)}reshape_input_points(...t){return this.image_processor.reshape_input_points(...t)}}var dB={};d(dB,"SpeechT5Processor",()=>dP);class dP extends o5{static tokenizer_class=is;static feature_extractor_class=dc;async _call(t){return await this.feature_extractor(t)}}var dR={};d(dR,"Wav2Vec2ProcessorWithLM",()=>dD);class dD extends o5{static feature_extractor_class=dc;async _call(t){return await this.feature_extractor(t)}}var dL={};d(dL,"WhisperProcessor",()=>dN);class dN extends o5{static tokenizer_class=is;static feature_extractor_class=dc;async _call(t){return await this.feature_extractor(t)}}u(o9,o7),u(o9,uN),u(o9,uq),u(o9,dh),u(o9,dm),u(o9,dg),u(o9,dw),u(o9,dx),u(o9,dE),u(o9,dT),u(o9,dC),u(o9,dM),u(o9,dB),u(o9,dR),u(o9,dL);class dU{static async from_pretrained(t,r={}){let s=await eH(t,r$,!0,r),{image_processor_type:i,feature_extractor_type:n,processor_class:a}=s;if(a&&o9[a])return o9[a].from_pretrained(t,r);if(!i&&!n)throw Error("No `image_processor_type` or `feature_extractor_type` found in the config.");let o={};if(i){let t=la[i];if(!t)throw Error(`Unknown image_processor_type: '${i}'.`);o.image_processor=new t(s)}if(n){let t=la[n];if(t)o.image_processor=new t(s);else{let t=uG[n];if(!t)throw Error(`Unknown feature_extractor_type: '${n}'.`);o.feature_extractor=new t(s)}}return new o5({},o)}}async function dF(t){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(t=>iP.read(t)))}async function dq(t,r){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(t=>"string"==typeof t||t instanceof URL?uH(t,r):t instanceof Float64Array?new Float32Array(t):t))}function dV(t,r){r&&(t=t.map(t=>0|t));let[s,i,n,a]=t;return{xmin:s,ymin:i,xmax:n,ymax:a}}class dj extends ee{constructor({task:t,model:r,tokenizer:s=null,processor:i=null}){super(),this.task=t,this.model=r,this.tokenizer=s,this.processor=i}async dispose(){await this.model.dispose()}}class dG extends dj{_key="generated_text";constructor(t){super(t)}async _call(t,r={}){let s;Array.isArray(t)||(t=[t]),this.model.config.prefix&&(t=t.map(t=>this.model.config.prefix+t));let i=this.model.config.task_specific_params;i&&i[this.task]&&i[this.task].prefix&&(t=t.map(t=>i[this.task].prefix+t));let n=this.tokenizer,a={padding:!0,truncation:!0};s=this instanceof dW&&"_build_translation_inputs"in n?n._build_translation_inputs(t,a,r):n(t,a);let o=await this.model.generate({...s,...r});return n.batch_decode(o,{skip_special_tokens:!0}).map(t=>({[this._key]:t}))}}class dW extends dG{_key="translation_text";constructor(t){super(t)}}function dH(t){return Array.isArray(t)&&t.every(t=>"role"in t&&"content"in t)}const dK=Object.freeze({"text-classification":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,{top_k:r=1}={}){let s=this.tokenizer(t,{padding:!0,truncation:!0}),i=await this.model(s),n="multi_label_classification"===this.model.config.problem_type?t=>t.sigmoid():t=>new td("float32",eY(t.data),t.dims),a=this.model.config.id2label,o=[];for(let t of i.logits){let s=n(t),i=await tf(s,r),l=i[0].tolist(),u=i[1].tolist().map((t,r)=>({label:a?a[t]:`LABEL_${t}`,score:l[r]}));1===r?o.push(...u):o.push(u)}return Array.isArray(t)||1===r?o:o[0]}},model:oQ,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,{ignore_labels:r=["O"]}={}){let s=Array.isArray(t),i=this.tokenizer(s?t:[t],{padding:!0,truncation:!0}),n=(await this.model(i)).logits,a=this.model.config.id2label,o=[];for(let t=0;t<n.dims[0];++t){let s=i.input_ids[t],l=n[t],u=[];for(let t=0;t<l.dims[0];++t){let i=l[t],n=eZ(i.data)[1],o=a?a[n]:`LABEL_${n}`;if(r.includes(o))continue;let d=this.tokenizer.decode([s[t].item()],{skip_special_tokens:!0});if(""===d)continue;let c=eY(i.data);u.push({entity:o,score:c[n],index:t,word:d})}o.push(u)}return s?o:o[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[ov]},default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,r,{top_k:s=1}={}){let i=this.tokenizer(t,{text_pair:r,padding:!0,truncation:!0}),{start_logits:n,end_logits:a}=await this.model(i),o=i.input_ids.tolist(),l=i.attention_mask.tolist(),u=this.tokenizer.all_special_ids,d=[];for(let t=0;t<n.dims[0];++t){let r=o[t],i=r.findIndex(t=>t==this.tokenizer.sep_token_id);l[t].map((t,s)=>1==t&&(0===s||s>i&&-1===u.findIndex(t=>t==r[s])));let c=n[t].tolist(),p=a[t].tolist();for(let s=1;s<c.length;++s)(0==l[t]||s<=i||-1!==u.findIndex(t=>t==r[s]))&&(c[s]=-1/0,p[s]=-1/0);let h=eY(c).map((t,r)=>[t,r]),f=eY(p).map((t,r)=>[t,r]);h[0][0]=0,f[0][0]=0;let m=(function(...t){return t.reduce((t,r)=>t.flatMap(t=>r.map(r=>[t,r])))})(h,f).filter(t=>t[0][1]<=t[1][1]).map(t=>[t[0][1],t[1][1],t[0][0]*t[1][0]]).sort((t,r)=>r[2]-t[2]);for(let t=0;t<Math.min(m.length,s);++t){let[s,i,n]=m[t],a=r.slice(s,i+1),o=this.tokenizer.decode(a,{skip_special_tokens:!0});d.push({answer:o,score:n})}}return 1===s?d[0]:d}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oz]},default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=this.tokenizer(t,{padding:!0,truncation:!0}),{logits:i}=await this.model(s),n=[],a=s.input_ids.tolist();for(let t=0;t<a.length;++t){let s=a[t],o=s.findIndex(t=>t==this.tokenizer.mask_token_id);if(-1===o)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);let l=i[t][o],u=await tf(new td("float32",eY(l.data),l.dims),r),d=u[0].tolist(),c=u[1].tolist();n.push(c.map((t,r)=>{let i=s.slice();return i[o]=t,{score:d[r],token:Number(t),token_str:this.tokenizer.decode([t]),sequence:this.tokenizer.decode(i,{skip_special_tokens:!0})}}))}return Array.isArray(t)?n:n[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oS]},default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:is,pipeline:class extends dG{_key="summary_text";constructor(t){super(t)}},model:oZ,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:is,pipeline:dW,model:oZ,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:is,pipeline:dG,model:oZ,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,r={}){let s,i,n=!1,a=!1;if("string"==typeof t)s=t=[t];else if(Array.isArray(t)&&t.every(t=>"string"==typeof t))n=!0,s=t;else{if(dH(t))t=[t];else if(Array.isArray(t)&&t.every(dH))n=!0;else throw Error("Input must be a string, an array of strings, a Chat, or an array of Chats");a=!0,s=t.map(t=>this.tokenizer.apply_chat_template(t,{tokenize:!1,add_generation_prompt:!0}))}let o=r.add_special_tokens??!1,l=!a&&(r.return_full_text??!0);this.tokenizer.padding_side="left";let u=this.tokenizer(s,{add_special_tokens:o,padding:!0,truncation:!0}),d=await this.model.generate({...u,...r}),c=this.tokenizer.batch_decode(d,{skip_special_tokens:!0});!l&&u.input_ids.dims.at(-1)>0&&(i=this.tokenizer.batch_decode(u.input_ids,{skip_special_tokens:!0}).map(t=>t.length));let p=Array.from({length:t.length},t=>[]);for(let r=0;r<c.length;++r){let s=Math.floor(r/d.dims[0]*t.length);i&&(c[r]=c[r].slice(i[s])),p[s].push({generated_text:a?[...t[s],{role:"assistant",content:c[r]}]:c[r]})}return n||1!==p.length?p:p[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[ok]},default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([t,r])=>[t.toLowerCase(),r])),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(t,r,{hypothesis_template:s="This example is {}.",multi_label:i=!1}={}){let n=Array.isArray(t);n||(t=[t]),Array.isArray(r)||(r=[r]);let a=r.map(t=>s.replace("{}",t)),o=i||1===r.length,l=[];for(let s of t){let t=[];for(let r of a){let i=this.tokenizer(s,{text_pair:r,padding:!0,truncation:!0}),n=await this.model(i);o?t.push([n.logits.data[this.contradiction_id],n.logits.data[this.entailment_id]]):t.push(n.logits.data[this.entailment_id])}let i=(o?t.map(t=>eY(t)[1]):eY(t)).map((t,r)=>[t,r]).sort((t,r)=>r[0]-t[0]);l.push({sequence:s,labels:i.map(t=>r[t[1]]),scores:i.map(t=>t[0])})}return n?l:l[0]}},model:oQ,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:class extends dj{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=this.processor.feature_extractor.config.sampling_rate,i=await dq(t,s),n=this.model.config.id2label,a=[];for(let t of i){let s=await this.processor(t),i=(await this.model(s)).logits[0],o=await tf(new td("float32",eY(i.data),i.dims),r),l=o[0].tolist(),u=o[1].tolist().map((t,r)=>({label:n?n[t]:`LABEL_${t}`,score:l[r]}));a.push(u)}return Array.isArray(t)?a:a[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oN]},processor:dU,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,r,{hypothesis_template:s="This is a sound of {}."}={}){let i=!Array.isArray(t);i&&(t=[t]);let n=r.map(t=>s.replace("{}",t)),a=this.tokenizer(n,{padding:!0,truncation:!0}),o=this.processor.feature_extractor.config.sampling_rate,l=await dq(t,o),u=[];for(let t of l){let s=await this.processor(t),i=eY((await this.model({...a,...s})).logits_per_audio.data);u.push([...i].map((t,s)=>({score:t,label:r[s]})))}return i?u[0]:u}},model:oY,processor:dU,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,r={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(t,r);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(t,r);case"moonshine":return this._call_moonshine(t,r);default:throw Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(t,r){r.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),r.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');let s=!Array.isArray(t);s&&(t=[t]);let i=this.processor.feature_extractor.config.sampling_rate,n=await dq(t,i),a=[];for(let t of n){let r=await this.processor(t),s=(await this.model(r)).logits[0],i=[];for(let t of s)i.push(eZ(t.data)[1]);let n=this.tokenizer.decode(i);a.push({text:n})}return s?a[0]:a}async _call_whisper(t,r){let s=r.return_timestamps??!1,i=r.chunk_length_s??0,n=r.force_full_sequences??!1,a=r.stride_length_s??null,o={...r};"word"===s&&(o.return_token_timestamps=!0,o.return_timestamps=!1);let l=!Array.isArray(t);l&&(t=[t]);let u=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,d=this.processor.feature_extractor.config.hop_length,c=this.processor.feature_extractor.config.sampling_rate,p=await dq(t,c),h=[];for(let t of p){let r=[];if(i>0){if(null===a)a=i/6;else if(i<=a)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");let s=c*i,n=c*a,o=s-2*n,l=0;for(;;){let i=l+s,a=t.subarray(l,i),u=await this.processor(a),d=0===l,c=i>=t.length;if(r.push({stride:[a.length,d?0:n,c?0:n],input_features:u.input_features,is_last:c}),c)break;l+=o}}else r=[{stride:[t.length,0,0],input_features:(await this.processor(t)).input_features,is_last:!0}];for(let t of r){o.num_frames=Math.floor(t.stride[0]/d);let r=await this.model.generate({inputs:t.input_features,...o});"word"===s?(t.tokens=r.sequences.tolist()[0],t.token_timestamps=r.token_timestamps.tolist()[0].map(t=>e3(t,2))):t.tokens=r[0].tolist(),t.stride=t.stride.map(t=>t/c)}let[l,p]=this.tokenizer._decode_asr(r,{time_precision:u,return_timestamps:s,force_full_sequences:n});h.push({text:l,...p})}return l?h[0]:h}async _call_moonshine(t,r){let s=!Array.isArray(t);s&&(t=[t]);let i=this.processor.feature_extractor.config.sampling_rate,n=await dq(t,i),a=[];for(let t of n){let s=await this.processor(t),n=6*Math.floor(t.length/i),o=await this.model.generate({max_new_tokens:n,...r,...s}),l=this.processor.batch_decode(o,{skip_special_tokens:!0})[0];a.push({text:l})}return s?a[0]:a}},model:[class extends of{static MODEL_CLASS_MAPPINGS=[oy]},class extends of{static MODEL_CLASS_MAPPINGS=[oL]}],processor:dU,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:is,pipeline:class extends dj{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(t){super(t),this.vocoder=t.vocoder??null}async _call(t,{speaker_embeddings:r=null}={}){return this.processor?this._call_text_to_spectrogram(t,{speaker_embeddings:r}):this._call_text_to_waveform(t)}async _call_text_to_waveform(t){let r=this.tokenizer(t,{padding:!0,truncation:!0}),{waveform:s}=await this.model(r),i=this.model.config.sampling_rate;return{audio:s.data,sampling_rate:i}}async _call_text_to_spectrogram(t,{speaker_embeddings:r}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await oY.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof r||r instanceof URL)&&(r=new Float32Array(await (await fetch(r)).arrayBuffer())),r instanceof Float32Array)r=new td("float32",r,[1,r.length]);else if(!(r instanceof td))throw Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");let{input_ids:s}=this.tokenizer(t,{padding:!0,truncation:!0}),{waveform:i}=await this.model.generate_speech(s,r,{vocoder:this.vocoder}),n=this.processor.feature_extractor.config.sampling_rate;return{audio:i.data,sampling_rate:n}}},model:[class extends of{static MODEL_CLASS_MAPPINGS=[ob]},class extends of{static MODEL_CLASS_MAPPINGS=[ow]}],processor:[dU,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,r={}){let s=Array.isArray(t),i=await dF(t),{pixel_values:n}=await this.processor(i),a=[];for(let t of n){t.dims=[1,...t.dims];let s=await this.model.generate({inputs:t,...r}),i=this.tokenizer.batch_decode(s,{skip_special_tokens:!0}).map(t=>({generated_text:t.trim()}));a.push(i)}return s?a:a[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oT]},processor:dU,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:class extends dj{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=await dF(t),{pixel_values:i}=await this.processor(s),n=await this.model({pixel_values:i}),a=this.model.config.id2label,o=[];for(let t of n.logits){let s=await tf(new td("float32",eY(t.data),t.dims),r),i=s[0].tolist(),n=s[1].tolist().map((t,r)=>({label:a?a[t]:`LABEL_${t}`,score:i[r]}));o.push(n)}return Array.isArray(t)?o:o[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oA]},processor:dU,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:class extends dj{constructor(t){super(t),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(t,{threshold:r=.5,mask_threshold:s=.5,overlap_mask_area_threshold:i=.8,label_ids_to_fuse:n=null,target_sizes:a=null,subtask:o=null}={}){if(Array.isArray(t)&&1!==t.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");let l=await dF(t),u=l.map(t=>[t.height,t.width]),{pixel_values:d,pixel_mask:c}=await this.processor(l),p=await this.model({pixel_values:d,pixel_mask:c}),h=null;if(null!==o)h=this.subtasks_mapping[o];else for(let[t,r]of Object.entries(this.subtasks_mapping))if(r in this.processor.image_processor){h=this.processor.image_processor[r].bind(this.processor.image_processor),o=t;break}let f=this.model.config.id2label,m=[];if("panoptic"===o||"instance"===o){let t=h(p,r,s,i,n,a??u)[0],o=t.segmentation;for(let r of t.segments_info){let t=new Uint8ClampedArray(o.data.length);for(let s=0;s<o.data.length;++s)o.data[s]===r.id&&(t[s]=255);let s=new iP(t,o.dims[1],o.dims[0],1);m.push({score:r.score,label:f[r.label_id],mask:s})}}else if("semantic"===o){let{segmentation:t,labels:r}=h(p,a??u)[0];for(let s of r){let r=new Uint8ClampedArray(t.data.length);for(let i=0;i<t.data.length;++i)t.data[i]===s&&(r[i]=255);let i=new iP(r,t.dims[1],t.dims[0],1);m.push({score:null,label:f[s],mask:i})}}else throw Error(`Subtask ${o} not supported.`);return m}},model:[class extends of{static MODEL_CLASS_MAPPINGS=[oB]},class extends of{static MODEL_CLASS_MAPPINGS=[oP]},class extends of{static MODEL_CLASS_MAPPINGS=[oR]}],processor:dU,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,r,{hypothesis_template:s="This is a photo of {}"}={}){let i=Array.isArray(t),n=await dF(t),a=r.map(t=>s.replace("{}",t)),o=this.tokenizer(a,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:l}=await this.processor(n),u=await this.model({...o,pixel_values:l}),d="siglip"===this.model.config.model_type?t=>t.sigmoid().data:t=>eY(t.data),c=[];for(let t of u.logits_per_image){let s=[...d(t)].map((t,s)=>({score:t,label:r[s]}));s.sort((t,r)=>r.score-t.score),c.push(s)}return i?c:c[0]}},model:oY,processor:dU,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:class extends dj{constructor(t){super(t)}async _call(t,{threshold:r=.9,percentage:s=!1}={}){let i=Array.isArray(t);if(i&&1!==t.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");let n=await dF(t),a=s?null:n.map(t=>[t.height,t.width]),{pixel_values:o,pixel_mask:l}=await this.processor(n),u=await this.model({pixel_values:o,pixel_mask:l}),d=this.processor.image_processor.post_process_object_detection(u,r,a),c=this.model.config.id2label,p=d.map(t=>t.boxes.map((r,i)=>({score:t.scores[i],label:c[t.classes[i]],box:dV(r,!s)})));return i?p:p[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oM]},processor:dU,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,r,{threshold:s=.1,top_k:i=null,percentage:n=!1}={}){let a=Array.isArray(t),o=await dF(t),l=this.tokenizer(r,{padding:!0,truncation:!0}),u=await this.processor(o),d=[];for(let t=0;t<o.length;++t){let a=o[t],c=n?null:[[a.height,a.width]],p=u.pixel_values[t].unsqueeze_(0),h=await this.model({...l,pixel_values:p}),f=this.processor.image_processor.post_process_object_detection(h,s,c,!0)[0],m=f.boxes.map((t,s)=>({score:f.scores[s],label:r[f.classes[s]],box:dV(t,!n)})).sort((t,r)=>r.score-t.score);null!==i&&(m=m.slice(0,i)),d.push(m)}return a?d:d[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oO]},processor:dU,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,r,s={}){let i=(await dF(t))[0],{pixel_values:n}=await this.processor(i),a=`<s_docvqa><s_question>${r}</s_question><s_answer>`,o=this.tokenizer(a,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,l=await this.model.generate({inputs:n,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:o,...s}),u=this.tokenizer.batch_decode(l)[0].match(/<s_answer>(.*?)<\/s_answer>/),d=null;return u&&u.length>=2&&(d=u[1].trim()),[{answer:d}]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oC]},processor:dU,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:class extends dj{constructor(t){super(t)}async _call(t){let r=await dF(t),s=await this.processor(r),i=await this.model(s),n=[];for(let t of i.reconstruction){let r=t.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");n.push(iP.fromTensor(r))}return n.length>1?n:n[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oj]},processor:dU,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:class extends dj{constructor(t){super(t)}async _call(t){let r=await dF(t),s=await this.processor(r),{predicted_depth:i}=await this.model(s),n=[];for(let t=0;t<r.length;++t){let s=tc(i[t],r[t].size.reverse(),"bilinear",!1),a=s.mul_(255/eZ(s.data)[0]).to("uint8");n.push({predicted_depth:i[t],depth:iP.fromTensor(a)})}return n.length>1?n:n[0]}},model:class extends of{static MODEL_CLASS_MAPPINGS=[oG]},processor:dU,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:is,pipeline:class extends dj{constructor(t){super(t)}async _call(t,{pooling:r="none",normalize:s=!1,quantize:i=!1,precision:n="binary"}={}){let a=this.tokenizer(t,{padding:!0,truncation:!0}),o=await this.model(a),l=o.last_hidden_state??o.logits??o.token_embeddings;if("none"===r);else if("mean"===r)l=function(t,r){let s=t.data,i=r.data,n=[t.dims[0],t.dims[2]],a=new s.constructor(n[0]*n[1]),[o,l,u]=t.dims,d=0;for(let t=0;t<o;++t){let r=t*u*l;for(let n=0;n<u;++n){let o=0,c=0,p=t*l,h=r+n;for(let t=0;t<l;++t){let r=Number(i[p+t]);c+=r,o+=s[h+t*u]*r}let f=o/c;a[d++]=f}}return new td(t.type,a,n)}(l,a.attention_mask);else if("cls"===r)l=l.slice(null,0);else throw Error(`Pooling method '${r}' not supported.`);return s&&(l=l.normalize(2,-1)),i&&(l=function(t,r){if(2!==t.dims.length)throw Error("The tensor must have 2 dimensions");if(t.dims.at(-1)%8!=0)throw Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(r))throw Error("The precision must be either 'binary' or 'ubinary'");let s="binary"===r,i=s?Int8Array:Uint8Array,n=t.data,a=new i(n.length/8);for(let t=0;t<n.length;++t){let r=n[t]>0?1:0,i=Math.floor(t/8),o=t%8;a[i]|=r<<7-o,s&&0===o&&(a[i]-=128)}return new td(s?"int8":"uint8",a,[t.dims[0],t.dims[1]/8])}(l,n)),l}},model:oY,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:dU,pipeline:class extends dj{constructor(t){super(t)}async _call(t,{pool:r=null}={}){let s;let i=await dF(t),{pixel_values:n}=await this.processor(i),a=await this.model({pixel_values:n});if(r){if(!("pooler_output"in a))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");s=a.pooler_output}else s=a.last_hidden_state??a.logits??a.image_embeds;return s}},model:[class extends of{static MODEL_CLASS_MAPPINGS=[oK]},oY],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),dX=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function dY(t,r=null,{progress_callback:s=null,config:i=null,cache_dir:n=null,local_files_only:a=!1,revision:o="main",device:l=null,dtype:u=null,model_file_name:d=null,session_options:c={}}={}){var p;let h=dK[(t=dX[t]??t).split("_",1)[0]];if(!h)throw Error(`Unsupported pipeline: ${t}. Must be one of [${Object.keys(dK)}]`);r||(r=h.default.model,console.log(`No model specified. Using default model: "${r}".`));let f=new Map([["tokenizer",h.tokenizer],["model",h.model],["processor",h.processor]]),m=await dQ(f,r,{progress_callback:s,config:i,cache_dir:n,local_files_only:a,revision:o,device:l,dtype:u,model_file_name:d,session_options:c});return console.log(m),m.task=t,p={status:"ready",task:t,model:r},s&&s(p),new h.pipeline(m)}async function dQ(t,r,s){console.log(t,r,s);let i=Object.create(null),n=[];for(let[a,o]of t.entries()){let t;o&&(t=Array.isArray(o)?new Promise(async(t,i)=>{let n;for(let a of o){if(null===a){t(null);return}try{t(await a.from_pretrained(r,s));return}catch(t){if(t.message?.includes("Unsupported model type"))n=t;else if(t.message?.includes("Could not locate file"))n=t;else{i(t);return}}}i(n)}):o.from_pretrained(r,s),i[a]=t,n.push(t))}for(let[t,r]of(await Promise.all(n),Object.entries(i)))i[t]=await r;return i}async function dZ(){try{Z.allowLocalModels=!1,a=await dY("summarization","Xenova/distilbart-cnn-12-6",{dtype:"q4",device:"cpu"})}catch(t){console.error("Failed to initialize summarizer:",t)}}async function dJ(t,r){let s=t||document.getElementById("root");if(!s)throw Error("Root element not found");let i=document.createElement("ul");window.addEventListener("hashchange",async()=>{let t=location.hash.substring(1),i=document.createElement("div");try{s.innerHTML="Loading...";let n=await fetch("https://api.hnpwa.com/v0/item/{id}.json".replace("{id}",t)),o=await n.json(),l=document.createElement("button");l.innerHTML="← Back to News",l.addEventListener("click",()=>{location.hash="",dJ(s,r)});let u=`
        Title: ${o.title}
        URL Content: ${o.url?o.url:"No URL"}
        Comments: ${o.comments?o.comments.map(t=>t.content).join("\n"):"No comments"}
      `,d=(await a(u,{max_length:150,min_length:30}))[0].summary_text;i.innerHTML=`
        <h2>${o.title}</h2>
        <p><strong>Summary:</strong></p>
        <p>${d}</p>
        <p><strong>Original URL:</strong> <a href="${o.url}" target="_blank">${o.url}</a></p>
        <p><strong>Comments:</strong> ${o.comments_count||0}</p>
      `,s.innerHTML="",s.appendChild(l),s.appendChild(i)}catch(t){console.error("Error:",t),s.innerHTML="Error loading content"}});try{s.innerHTML="Loading...";let t=await fetch("https://api.hnpwa.com/v0/news/{page}.json".replace("{page}",r));(await t.json()).forEach(t=>{let r=document.createElement("li"),s=document.createElement("a");s.href=`#${t.id}`,s.innerHTML=`${t.title} (${t.comments_count})`,r.appendChild(s),i.appendChild(r)}),s.innerHTML="",s.appendChild(i)}catch(t){s.innerHTML="Error loading news feed",console.error("Error:",t)}if(r>1){let t=document.createElement("button");t.innerHTML="Previous Page",t.addEventListener("click",()=>{dJ(s,--r)}),s.appendChild(t)}if(r<10){let t=document.createElement("button");t.innerHTML="Next Page",t.addEventListener("click",()=>{dJ(s,++r)}),s.appendChild(t)}}if(H.IS_PROCESS_AVAILABLE||(t=>console.log(t)),"undefined"!=typeof window){dZ();let t=document.getElementById("root");t&&dJ(t,1)}
//# sourceMappingURL=index.57d398d9.js.map
